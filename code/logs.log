2024-04-05 19:52:55,131:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 19:52:55,131:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 19:52:55,131:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 19:52:55,131:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 20:05:20,332:INFO:PyCaret ClassificationExperiment
2024-04-05 20:05:20,332:INFO:Logging name: clf-default-name
2024-04-05 20:05:20,332:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-05 20:05:20,332:INFO:version 3.3.0
2024-04-05 20:05:20,332:INFO:Initializing setup()
2024-04-05 20:05:20,332:INFO:self.USI: ac08
2024-04-05 20:05:20,332:INFO:self._variable_keys: {'gpu_param', '_ml_usecase', 'logging_param', 'fix_imbalance', 'fold_generator', 'memory', 'USI', 'target_param', 'data', 'y_test', 'X_test', 'idx', 'y', 'X_train', 'n_jobs_param', 'exp_name_log', 'fold_groups_param', 'pipeline', 'exp_id', 'html_param', 'is_multiclass', 'seed', 'log_plots_param', 'fold_shuffle_param', '_available_plots', 'X', 'y_train', 'gpu_n_jobs_param'}
2024-04-05 20:05:20,332:INFO:Checking environment
2024-04-05 20:05:20,332:INFO:python_version: 3.11.3
2024-04-05 20:05:20,332:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-05 20:05:20,332:INFO:machine: arm64
2024-04-05 20:05:20,332:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-05 20:05:20,333:INFO:Memory: svmem(total=8589934592, available=1517912064, percent=82.3, used=2742697984, free=55164928, active=1476542464, inactive=1447723008, wired=1266155520)
2024-04-05 20:05:20,333:INFO:Physical Core: 8
2024-04-05 20:05:20,333:INFO:Logical Core: 8
2024-04-05 20:05:20,333:INFO:Checking libraries
2024-04-05 20:05:20,333:INFO:System:
2024-04-05 20:05:20,333:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-05 20:05:20,333:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-05 20:05:20,333:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-05 20:05:20,333:INFO:PyCaret required dependencies:
2024-04-05 20:05:20,983:INFO:                 pip: 24.0
2024-04-05 20:05:20,983:INFO:          setuptools: 65.5.0
2024-04-05 20:05:20,984:INFO:             pycaret: 3.3.0
2024-04-05 20:05:20,984:INFO:             IPython: 8.23.0
2024-04-05 20:05:20,984:INFO:          ipywidgets: 8.1.2
2024-04-05 20:05:20,984:INFO:                tqdm: 4.66.2
2024-04-05 20:05:20,984:INFO:               numpy: 1.26.4
2024-04-05 20:05:20,984:INFO:              pandas: 2.1.4
2024-04-05 20:05:20,984:INFO:              jinja2: 3.1.3
2024-04-05 20:05:20,984:INFO:               scipy: 1.11.4
2024-04-05 20:05:20,984:INFO:              joblib: 1.3.2
2024-04-05 20:05:20,984:INFO:             sklearn: 1.4.1.post1
2024-04-05 20:05:20,984:INFO:                pyod: 1.1.3
2024-04-05 20:05:20,984:INFO:            imblearn: 0.12.2
2024-04-05 20:05:20,984:INFO:   category_encoders: 2.6.3
2024-04-05 20:05:20,984:INFO:            lightgbm: 4.3.0
2024-04-05 20:05:20,984:INFO:               numba: 0.59.1
2024-04-05 20:05:20,984:INFO:            requests: 2.31.0
2024-04-05 20:05:20,984:INFO:          matplotlib: 3.7.5
2024-04-05 20:05:20,984:INFO:          scikitplot: 0.3.7
2024-04-05 20:05:20,984:INFO:         yellowbrick: 1.5
2024-04-05 20:05:20,984:INFO:              plotly: 5.20.0
2024-04-05 20:05:20,984:INFO:    plotly-resampler: Not installed
2024-04-05 20:05:20,984:INFO:             kaleido: 0.2.1
2024-04-05 20:05:20,984:INFO:           schemdraw: 0.15
2024-04-05 20:05:20,984:INFO:         statsmodels: 0.14.1
2024-04-05 20:05:20,984:INFO:              sktime: 0.28.0
2024-04-05 20:05:20,984:INFO:               tbats: 1.1.3
2024-04-05 20:05:20,984:INFO:            pmdarima: 2.0.4
2024-04-05 20:05:20,984:INFO:              psutil: 5.9.8
2024-04-05 20:05:20,984:INFO:          markupsafe: 2.1.5
2024-04-05 20:05:20,984:INFO:             pickle5: Not installed
2024-04-05 20:05:20,984:INFO:         cloudpickle: 3.0.0
2024-04-05 20:05:20,984:INFO:         deprecation: 2.1.0
2024-04-05 20:05:20,984:INFO:              xxhash: 3.4.1
2024-04-05 20:05:20,984:INFO:           wurlitzer: 3.0.3
2024-04-05 20:05:20,984:INFO:PyCaret optional dependencies:
2024-04-05 20:05:20,990:INFO:                shap: Not installed
2024-04-05 20:05:20,990:INFO:           interpret: Not installed
2024-04-05 20:05:20,990:INFO:                umap: Not installed
2024-04-05 20:05:20,990:INFO:     ydata_profiling: Not installed
2024-04-05 20:05:20,990:INFO:  explainerdashboard: Not installed
2024-04-05 20:05:20,990:INFO:             autoviz: Not installed
2024-04-05 20:05:20,990:INFO:           fairlearn: Not installed
2024-04-05 20:05:20,990:INFO:          deepchecks: Not installed
2024-04-05 20:05:20,990:INFO:             xgboost: Not installed
2024-04-05 20:05:20,990:INFO:            catboost: Not installed
2024-04-05 20:05:20,990:INFO:              kmodes: Not installed
2024-04-05 20:05:20,990:INFO:             mlxtend: Not installed
2024-04-05 20:05:20,990:INFO:       statsforecast: Not installed
2024-04-05 20:05:20,990:INFO:        tune_sklearn: Not installed
2024-04-05 20:05:20,990:INFO:                 ray: Not installed
2024-04-05 20:05:20,990:INFO:            hyperopt: Not installed
2024-04-05 20:05:20,990:INFO:              optuna: Not installed
2024-04-05 20:05:20,990:INFO:               skopt: Not installed
2024-04-05 20:05:20,990:INFO:              mlflow: 2.11.3
2024-04-05 20:05:20,990:INFO:              gradio: Not installed
2024-04-05 20:05:20,990:INFO:             fastapi: Not installed
2024-04-05 20:05:20,990:INFO:             uvicorn: Not installed
2024-04-05 20:05:20,990:INFO:              m2cgen: Not installed
2024-04-05 20:05:20,990:INFO:           evidently: Not installed
2024-04-05 20:05:20,990:INFO:               fugue: Not installed
2024-04-05 20:05:20,990:INFO:           streamlit: 1.33.0
2024-04-05 20:05:20,990:INFO:             prophet: 1.1.5
2024-04-05 20:05:20,990:INFO:None
2024-04-05 20:05:20,990:INFO:Set up data.
2024-04-05 20:05:20,996:INFO:Set up folding strategy.
2024-04-05 20:05:20,996:INFO:Set up train/test split.
2024-04-05 20:05:20,996:INFO:Set up data.
2024-04-05 20:05:20,998:INFO:Set up index.
2024-04-05 20:05:20,999:INFO:Assigning column types.
2024-04-05 20:05:21,003:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-05 20:05:21,022:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-05 20:05:21,024:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-05 20:05:21,039:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 20:05:21,039:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 20:05:21,057:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-05 20:05:21,057:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-05 20:05:21,068:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 20:05:21,068:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 20:05:21,069:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-05 20:05:21,087:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-05 20:05:21,098:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 20:05:21,098:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 20:05:21,116:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-05 20:05:21,126:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 20:05:21,126:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 20:05:21,126:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-05 20:05:21,155:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 20:05:21,155:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 20:05:21,183:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 20:05:21,183:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 20:05:21,185:INFO:Preparing preprocessing pipeline...
2024-04-05 20:05:21,188:INFO:Set up simple imputation.
2024-04-05 20:05:21,188:INFO:Set up feature normalization.
2024-04-05 20:05:21,198:INFO:Finished creating preprocessing pipeline.
2024-04-05 20:05:21,201:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-05 20:05:21,201:INFO:Creating final display dataframe.
2024-04-05 20:05:21,234:INFO:Setup _display_container:                     Description             Value
0                    Session id              5680
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              ac08
2024-04-05 20:05:21,389:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 20:05:21,389:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 20:05:21,418:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 20:05:21,418:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 20:05:21,419:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-05 20:05:21,419:INFO:setup() successfully completed in 1.09s...............
2024-04-05 20:05:21,419:INFO:Initializing compare_models()
2024-04-05 20:05:21,419:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x107c9a890>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x107c9a890>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-05 20:05:21,419:INFO:Checking exceptions
2024-04-05 20:05:21,421:INFO:Preparing display monitor
2024-04-05 20:05:21,458:INFO:Initializing Logistic Regression
2024-04-05 20:05:21,458:INFO:Total runtime is 4.001458485921224e-06 minutes
2024-04-05 20:05:21,459:INFO:SubProcess create_model() called ==================================
2024-04-05 20:05:21,459:INFO:Initializing create_model()
2024-04-05 20:05:21,459:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x107c9a890>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x304eb52d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-05 20:05:21,460:INFO:Checking exceptions
2024-04-05 20:05:21,460:INFO:Importing libraries
2024-04-05 20:05:21,460:INFO:Copying training dataset
2024-04-05 20:05:21,465:INFO:Defining folds
2024-04-05 20:05:21,465:INFO:Declaring metric variables
2024-04-05 20:05:21,467:INFO:Importing untrained model
2024-04-05 20:05:21,468:INFO:Logistic Regression Imported successfully
2024-04-05 20:05:21,473:INFO:Starting cross validation
2024-04-05 20:05:21,474:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-05 20:05:23,892:INFO:Calculating mean and std
2024-04-05 20:05:23,897:INFO:Creating metrics dataframe
2024-04-05 20:05:23,905:INFO:Uploading results into container
2024-04-05 20:05:23,906:INFO:Uploading model into container now
2024-04-05 20:05:23,907:INFO:_master_model_container: 1
2024-04-05 20:05:23,907:INFO:_display_container: 2
2024-04-05 20:05:23,908:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5680, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-05 20:05:23,908:INFO:create_model() successfully completed......................................
2024-04-05 20:05:24,054:INFO:SubProcess create_model() end ==================================
2024-04-05 20:05:24,054:INFO:Creating metrics dataframe
2024-04-05 20:05:24,057:INFO:Initializing Decision Tree Classifier
2024-04-05 20:05:24,057:INFO:Total runtime is 0.043326433499654135 minutes
2024-04-05 20:05:24,058:INFO:SubProcess create_model() called ==================================
2024-04-05 20:05:24,059:INFO:Initializing create_model()
2024-04-05 20:05:24,059:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x107c9a890>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x304eb52d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-05 20:05:24,059:INFO:Checking exceptions
2024-04-05 20:05:24,059:INFO:Importing libraries
2024-04-05 20:05:24,059:INFO:Copying training dataset
2024-04-05 20:05:24,062:INFO:Defining folds
2024-04-05 20:05:24,062:INFO:Declaring metric variables
2024-04-05 20:05:24,064:INFO:Importing untrained model
2024-04-05 20:05:24,065:INFO:Decision Tree Classifier Imported successfully
2024-04-05 20:05:24,068:INFO:Starting cross validation
2024-04-05 20:05:24,069:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-05 20:05:24,160:INFO:Calculating mean and std
2024-04-05 20:05:24,160:INFO:Creating metrics dataframe
2024-04-05 20:05:24,161:INFO:Uploading results into container
2024-04-05 20:05:24,161:INFO:Uploading model into container now
2024-04-05 20:05:24,161:INFO:_master_model_container: 2
2024-04-05 20:05:24,161:INFO:_display_container: 2
2024-04-05 20:05:24,161:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5680, splitter='best')
2024-04-05 20:05:24,161:INFO:create_model() successfully completed......................................
2024-04-05 20:05:24,240:INFO:SubProcess create_model() end ==================================
2024-04-05 20:05:24,240:INFO:Creating metrics dataframe
2024-04-05 20:05:24,245:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-05 20:05:24,248:INFO:Initializing create_model()
2024-04-05 20:05:24,248:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x107c9a890>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5680, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-05 20:05:24,248:INFO:Checking exceptions
2024-04-05 20:05:24,248:INFO:Importing libraries
2024-04-05 20:05:24,248:INFO:Copying training dataset
2024-04-05 20:05:24,251:INFO:Defining folds
2024-04-05 20:05:24,251:INFO:Declaring metric variables
2024-04-05 20:05:24,251:INFO:Importing untrained model
2024-04-05 20:05:24,251:INFO:Declaring custom model
2024-04-05 20:05:24,251:INFO:Logistic Regression Imported successfully
2024-04-05 20:05:24,252:INFO:Cross validation set to False
2024-04-05 20:05:24,252:INFO:Fitting Model
2024-04-05 20:05:24,333:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5680, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-05 20:05:24,333:INFO:create_model() successfully completed......................................
2024-04-05 20:05:24,511:INFO:Initializing create_model()
2024-04-05 20:05:24,511:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x107c9a890>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5680, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-05 20:05:24,513:INFO:Checking exceptions
2024-04-05 20:05:24,515:INFO:Importing libraries
2024-04-05 20:05:24,515:INFO:Copying training dataset
2024-04-05 20:05:24,522:INFO:Defining folds
2024-04-05 20:05:24,522:INFO:Declaring metric variables
2024-04-05 20:05:24,522:INFO:Importing untrained model
2024-04-05 20:05:24,522:INFO:Declaring custom model
2024-04-05 20:05:24,522:INFO:Decision Tree Classifier Imported successfully
2024-04-05 20:05:24,522:INFO:Cross validation set to False
2024-04-05 20:05:24,522:INFO:Fitting Model
2024-04-05 20:05:24,546:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5680, splitter='best')
2024-04-05 20:05:24,546:INFO:create_model() successfully completed......................................
2024-04-05 20:05:24,640:INFO:_master_model_container: 2
2024-04-05 20:05:24,640:INFO:_display_container: 2
2024-04-05 20:05:24,641:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5680, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5680, splitter='best')]
2024-04-05 20:05:24,641:INFO:compare_models() successfully completed......................................
2024-04-06 08:31:51,757:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-06 08:31:51,757:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-06 08:31:51,757:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-06 08:31:51,757:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-06 08:31:52,868:INFO:PyCaret ClassificationExperiment
2024-04-06 08:31:52,868:INFO:Logging name: clf-default-name
2024-04-06 08:31:52,868:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 08:31:52,868:INFO:version 3.3.0
2024-04-06 08:31:52,868:INFO:Initializing setup()
2024-04-06 08:31:52,868:INFO:self.USI: 6fdc
2024-04-06 08:31:52,868:INFO:self._variable_keys: {'exp_id', 'y_train', 'is_multiclass', 'X', 'y', 'fold_generator', 'exp_name_log', 'seed', 'X_train', 'gpu_n_jobs_param', 'data', 'html_param', 'n_jobs_param', '_ml_usecase', '_available_plots', 'X_test', 'fold_shuffle_param', 'gpu_param', 'target_param', 'idx', 'memory', 'fold_groups_param', 'y_test', 'logging_param', 'log_plots_param', 'pipeline', 'fix_imbalance', 'USI'}
2024-04-06 08:31:52,868:INFO:Checking environment
2024-04-06 08:31:52,868:INFO:python_version: 3.11.3
2024-04-06 08:31:52,868:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 08:31:52,868:INFO:machine: arm64
2024-04-06 08:31:52,868:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:31:52,869:INFO:Memory: svmem(total=8589934592, available=2796421120, percent=67.4, used=3974758400, free=49233920, active=2760245248, inactive=2619867136, wired=1214513152)
2024-04-06 08:31:52,869:INFO:Physical Core: 8
2024-04-06 08:31:52,869:INFO:Logical Core: 8
2024-04-06 08:31:52,869:INFO:Checking libraries
2024-04-06 08:31:52,869:INFO:System:
2024-04-06 08:31:52,869:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 08:31:52,869:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 08:31:52,869:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:31:52,869:INFO:PyCaret required dependencies:
2024-04-06 08:31:52,899:INFO:                 pip: 24.0
2024-04-06 08:31:52,899:INFO:          setuptools: 65.5.0
2024-04-06 08:31:52,899:INFO:             pycaret: 3.3.0
2024-04-06 08:31:52,899:INFO:             IPython: 8.23.0
2024-04-06 08:31:52,899:INFO:          ipywidgets: 8.1.2
2024-04-06 08:31:52,899:INFO:                tqdm: 4.66.2
2024-04-06 08:31:52,899:INFO:               numpy: 1.26.4
2024-04-06 08:31:52,899:INFO:              pandas: 2.1.4
2024-04-06 08:31:52,899:INFO:              jinja2: 3.1.3
2024-04-06 08:31:52,899:INFO:               scipy: 1.11.4
2024-04-06 08:31:52,899:INFO:              joblib: 1.3.2
2024-04-06 08:31:52,899:INFO:             sklearn: 1.4.1.post1
2024-04-06 08:31:52,899:INFO:                pyod: 1.1.3
2024-04-06 08:31:52,899:INFO:            imblearn: 0.12.2
2024-04-06 08:31:52,899:INFO:   category_encoders: 2.6.3
2024-04-06 08:31:52,899:INFO:            lightgbm: 4.3.0
2024-04-06 08:31:52,899:INFO:               numba: 0.59.1
2024-04-06 08:31:52,899:INFO:            requests: 2.31.0
2024-04-06 08:31:52,899:INFO:          matplotlib: 3.7.5
2024-04-06 08:31:52,899:INFO:          scikitplot: 0.3.7
2024-04-06 08:31:52,899:INFO:         yellowbrick: 1.5
2024-04-06 08:31:52,899:INFO:              plotly: 5.20.0
2024-04-06 08:31:52,899:INFO:    plotly-resampler: Not installed
2024-04-06 08:31:52,899:INFO:             kaleido: 0.2.1
2024-04-06 08:31:52,899:INFO:           schemdraw: 0.15
2024-04-06 08:31:52,899:INFO:         statsmodels: 0.14.1
2024-04-06 08:31:52,899:INFO:              sktime: 0.28.0
2024-04-06 08:31:52,899:INFO:               tbats: 1.1.3
2024-04-06 08:31:52,899:INFO:            pmdarima: 2.0.4
2024-04-06 08:31:52,899:INFO:              psutil: 5.9.8
2024-04-06 08:31:52,899:INFO:          markupsafe: 2.1.5
2024-04-06 08:31:52,899:INFO:             pickle5: Not installed
2024-04-06 08:31:52,899:INFO:         cloudpickle: 3.0.0
2024-04-06 08:31:52,899:INFO:         deprecation: 2.1.0
2024-04-06 08:31:52,899:INFO:              xxhash: 3.4.1
2024-04-06 08:31:52,899:INFO:           wurlitzer: 3.0.3
2024-04-06 08:31:52,899:INFO:PyCaret optional dependencies:
2024-04-06 08:31:52,911:INFO:                shap: Not installed
2024-04-06 08:31:52,911:INFO:           interpret: Not installed
2024-04-06 08:31:52,911:INFO:                umap: Not installed
2024-04-06 08:31:52,911:INFO:     ydata_profiling: Not installed
2024-04-06 08:31:52,911:INFO:  explainerdashboard: Not installed
2024-04-06 08:31:52,911:INFO:             autoviz: Not installed
2024-04-06 08:31:52,911:INFO:           fairlearn: Not installed
2024-04-06 08:31:52,911:INFO:          deepchecks: Not installed
2024-04-06 08:31:52,911:INFO:             xgboost: Not installed
2024-04-06 08:31:52,911:INFO:            catboost: Not installed
2024-04-06 08:31:52,911:INFO:              kmodes: Not installed
2024-04-06 08:31:52,911:INFO:             mlxtend: Not installed
2024-04-06 08:31:52,911:INFO:       statsforecast: Not installed
2024-04-06 08:31:52,911:INFO:        tune_sklearn: Not installed
2024-04-06 08:31:52,911:INFO:                 ray: Not installed
2024-04-06 08:31:52,911:INFO:            hyperopt: Not installed
2024-04-06 08:31:52,911:INFO:              optuna: Not installed
2024-04-06 08:31:52,911:INFO:               skopt: Not installed
2024-04-06 08:31:52,911:INFO:              mlflow: 2.11.3
2024-04-06 08:31:52,911:INFO:              gradio: Not installed
2024-04-06 08:31:52,911:INFO:             fastapi: Not installed
2024-04-06 08:31:52,911:INFO:             uvicorn: Not installed
2024-04-06 08:31:52,911:INFO:              m2cgen: Not installed
2024-04-06 08:31:52,911:INFO:           evidently: Not installed
2024-04-06 08:31:52,911:INFO:               fugue: Not installed
2024-04-06 08:31:52,911:INFO:           streamlit: 1.33.0
2024-04-06 08:31:52,911:INFO:             prophet: 1.1.5
2024-04-06 08:31:52,911:INFO:None
2024-04-06 08:31:52,911:INFO:Set up data.
2024-04-06 08:31:52,915:INFO:Set up folding strategy.
2024-04-06 08:31:52,915:INFO:Set up train/test split.
2024-04-06 08:31:52,915:INFO:Set up data.
2024-04-06 08:31:52,918:INFO:Set up index.
2024-04-06 08:31:52,918:INFO:Assigning column types.
2024-04-06 08:31:52,920:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 08:31:52,938:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 08:31:52,940:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:31:52,953:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:31:52,953:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:31:52,971:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 08:31:52,971:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:31:52,982:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:31:52,982:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:31:52,982:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 08:31:53,000:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:31:53,011:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:31:53,011:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:31:53,029:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:31:53,040:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:31:53,040:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:31:53,040:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 08:31:53,069:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:31:53,069:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:31:53,097:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:31:53,097:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:31:53,099:INFO:Preparing preprocessing pipeline...
2024-04-06 08:31:53,100:INFO:Set up simple imputation.
2024-04-06 08:31:53,100:INFO:Set up feature normalization.
2024-04-06 08:31:53,109:INFO:Finished creating preprocessing pipeline.
2024-04-06 08:31:53,111:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 08:31:53,111:INFO:Creating final display dataframe.
2024-04-06 08:31:53,139:INFO:Setup _display_container:                     Description             Value
0                    Session id              3223
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              6fdc
2024-04-06 08:31:53,172:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:31:53,172:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:31:53,201:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:31:53,201:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:31:53,202:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 08:31:53,202:INFO:setup() successfully completed in 0.34s...............
2024-04-06 08:31:53,202:INFO:Initializing compare_models()
2024-04-06 08:31:53,202:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076be410>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x3076be410>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 08:31:53,202:INFO:Checking exceptions
2024-04-06 08:31:53,204:INFO:Preparing display monitor
2024-04-06 08:31:53,226:INFO:Initializing Logistic Regression
2024-04-06 08:31:53,227:INFO:Total runtime is 4.935264587402344e-06 minutes
2024-04-06 08:31:53,228:INFO:SubProcess create_model() called ==================================
2024-04-06 08:31:53,228:INFO:Initializing create_model()
2024-04-06 08:31:53,228:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076be410>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307820410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:31:53,228:INFO:Checking exceptions
2024-04-06 08:31:53,228:INFO:Importing libraries
2024-04-06 08:31:53,229:INFO:Copying training dataset
2024-04-06 08:31:53,232:INFO:Defining folds
2024-04-06 08:31:53,232:INFO:Declaring metric variables
2024-04-06 08:31:53,233:INFO:Importing untrained model
2024-04-06 08:31:53,235:INFO:Logistic Regression Imported successfully
2024-04-06 08:31:53,238:INFO:Starting cross validation
2024-04-06 08:31:53,239:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 08:31:55,300:INFO:Calculating mean and std
2024-04-06 08:31:55,302:INFO:Creating metrics dataframe
2024-04-06 08:31:55,305:INFO:Uploading results into container
2024-04-06 08:31:55,306:INFO:Uploading model into container now
2024-04-06 08:31:55,307:INFO:_master_model_container: 1
2024-04-06 08:31:55,307:INFO:_display_container: 2
2024-04-06 08:31:55,307:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3223, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 08:31:55,307:INFO:create_model() successfully completed......................................
2024-04-06 08:31:55,401:INFO:SubProcess create_model() end ==================================
2024-04-06 08:31:55,401:INFO:Creating metrics dataframe
2024-04-06 08:31:55,404:INFO:Initializing Decision Tree Classifier
2024-04-06 08:31:55,404:INFO:Total runtime is 0.03629175027211507 minutes
2024-04-06 08:31:55,405:INFO:SubProcess create_model() called ==================================
2024-04-06 08:31:55,405:INFO:Initializing create_model()
2024-04-06 08:31:55,405:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076be410>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307820410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:31:55,405:INFO:Checking exceptions
2024-04-06 08:31:55,405:INFO:Importing libraries
2024-04-06 08:31:55,405:INFO:Copying training dataset
2024-04-06 08:31:55,409:INFO:Defining folds
2024-04-06 08:31:55,409:INFO:Declaring metric variables
2024-04-06 08:31:55,410:INFO:Importing untrained model
2024-04-06 08:31:55,412:INFO:Decision Tree Classifier Imported successfully
2024-04-06 08:31:55,414:INFO:Starting cross validation
2024-04-06 08:31:55,414:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 08:31:55,487:INFO:Calculating mean and std
2024-04-06 08:31:55,487:INFO:Creating metrics dataframe
2024-04-06 08:31:55,488:INFO:Uploading results into container
2024-04-06 08:31:55,489:INFO:Uploading model into container now
2024-04-06 08:31:55,489:INFO:_master_model_container: 2
2024-04-06 08:31:55,489:INFO:_display_container: 2
2024-04-06 08:31:55,489:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3223, splitter='best')
2024-04-06 08:31:55,489:INFO:create_model() successfully completed......................................
2024-04-06 08:31:55,551:INFO:SubProcess create_model() end ==================================
2024-04-06 08:31:55,552:INFO:Creating metrics dataframe
2024-04-06 08:31:55,555:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 08:31:55,559:INFO:Initializing create_model()
2024-04-06 08:31:55,559:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076be410>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3223, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:31:55,559:INFO:Checking exceptions
2024-04-06 08:31:55,559:INFO:Importing libraries
2024-04-06 08:31:55,560:INFO:Copying training dataset
2024-04-06 08:31:55,563:INFO:Defining folds
2024-04-06 08:31:55,563:INFO:Declaring metric variables
2024-04-06 08:31:55,563:INFO:Importing untrained model
2024-04-06 08:31:55,563:INFO:Declaring custom model
2024-04-06 08:31:55,563:INFO:Logistic Regression Imported successfully
2024-04-06 08:31:55,563:INFO:Cross validation set to False
2024-04-06 08:31:55,563:INFO:Fitting Model
2024-04-06 08:31:55,601:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3223, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 08:31:55,601:INFO:create_model() successfully completed......................................
2024-04-06 08:31:55,813:INFO:Initializing create_model()
2024-04-06 08:31:55,813:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076be410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3223, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:31:55,813:INFO:Checking exceptions
2024-04-06 08:31:55,815:INFO:Importing libraries
2024-04-06 08:31:55,815:INFO:Copying training dataset
2024-04-06 08:31:55,820:INFO:Defining folds
2024-04-06 08:31:55,820:INFO:Declaring metric variables
2024-04-06 08:31:55,821:INFO:Importing untrained model
2024-04-06 08:31:55,821:INFO:Declaring custom model
2024-04-06 08:31:55,822:INFO:Decision Tree Classifier Imported successfully
2024-04-06 08:31:55,823:INFO:Cross validation set to False
2024-04-06 08:31:55,823:INFO:Fitting Model
2024-04-06 08:31:55,862:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3223, splitter='best')
2024-04-06 08:31:55,862:INFO:create_model() successfully completed......................................
2024-04-06 08:31:55,944:INFO:_master_model_container: 2
2024-04-06 08:31:55,944:INFO:_display_container: 2
2024-04-06 08:31:55,944:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3223, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3223, splitter='best')]
2024-04-06 08:31:55,944:INFO:compare_models() successfully completed......................................
2024-04-06 08:36:36,370:INFO:PyCaret ClassificationExperiment
2024-04-06 08:36:36,370:INFO:Logging name: clf-default-name
2024-04-06 08:36:36,370:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 08:36:36,370:INFO:version 3.3.0
2024-04-06 08:36:36,370:INFO:Initializing setup()
2024-04-06 08:36:36,370:INFO:self.USI: 876f
2024-04-06 08:36:36,370:INFO:self._variable_keys: {'exp_id', 'y_train', 'is_multiclass', 'X', 'y', 'fold_generator', 'exp_name_log', 'seed', 'X_train', 'gpu_n_jobs_param', 'data', 'html_param', 'n_jobs_param', '_ml_usecase', '_available_plots', 'X_test', 'fold_shuffle_param', 'gpu_param', 'target_param', 'idx', 'memory', 'fold_groups_param', 'y_test', 'logging_param', 'log_plots_param', 'pipeline', 'fix_imbalance', 'USI'}
2024-04-06 08:36:36,370:INFO:Checking environment
2024-04-06 08:36:36,370:INFO:python_version: 3.11.3
2024-04-06 08:36:36,370:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 08:36:36,370:INFO:machine: arm64
2024-04-06 08:36:36,370:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:36:36,371:INFO:Memory: svmem(total=8589934592, available=2019999744, percent=76.5, used=3210346496, free=49840128, active=1989591040, inactive=1928724480, wired=1220755456)
2024-04-06 08:36:36,371:INFO:Physical Core: 8
2024-04-06 08:36:36,371:INFO:Logical Core: 8
2024-04-06 08:36:36,371:INFO:Checking libraries
2024-04-06 08:36:36,371:INFO:System:
2024-04-06 08:36:36,371:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 08:36:36,371:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 08:36:36,371:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:36:36,371:INFO:PyCaret required dependencies:
2024-04-06 08:36:36,371:INFO:                 pip: 24.0
2024-04-06 08:36:36,371:INFO:          setuptools: 65.5.0
2024-04-06 08:36:36,371:INFO:             pycaret: 3.3.0
2024-04-06 08:36:36,371:INFO:             IPython: 8.23.0
2024-04-06 08:36:36,371:INFO:          ipywidgets: 8.1.2
2024-04-06 08:36:36,371:INFO:                tqdm: 4.66.2
2024-04-06 08:36:36,371:INFO:               numpy: 1.26.4
2024-04-06 08:36:36,371:INFO:              pandas: 2.1.4
2024-04-06 08:36:36,371:INFO:              jinja2: 3.1.3
2024-04-06 08:36:36,371:INFO:               scipy: 1.11.4
2024-04-06 08:36:36,371:INFO:              joblib: 1.3.2
2024-04-06 08:36:36,371:INFO:             sklearn: 1.4.1.post1
2024-04-06 08:36:36,371:INFO:                pyod: 1.1.3
2024-04-06 08:36:36,371:INFO:            imblearn: 0.12.2
2024-04-06 08:36:36,371:INFO:   category_encoders: 2.6.3
2024-04-06 08:36:36,371:INFO:            lightgbm: 4.3.0
2024-04-06 08:36:36,371:INFO:               numba: 0.59.1
2024-04-06 08:36:36,371:INFO:            requests: 2.31.0
2024-04-06 08:36:36,371:INFO:          matplotlib: 3.7.5
2024-04-06 08:36:36,371:INFO:          scikitplot: 0.3.7
2024-04-06 08:36:36,371:INFO:         yellowbrick: 1.5
2024-04-06 08:36:36,371:INFO:              plotly: 5.20.0
2024-04-06 08:36:36,371:INFO:    plotly-resampler: Not installed
2024-04-06 08:36:36,371:INFO:             kaleido: 0.2.1
2024-04-06 08:36:36,371:INFO:           schemdraw: 0.15
2024-04-06 08:36:36,371:INFO:         statsmodels: 0.14.1
2024-04-06 08:36:36,371:INFO:              sktime: 0.28.0
2024-04-06 08:36:36,371:INFO:               tbats: 1.1.3
2024-04-06 08:36:36,371:INFO:            pmdarima: 2.0.4
2024-04-06 08:36:36,371:INFO:              psutil: 5.9.8
2024-04-06 08:36:36,371:INFO:          markupsafe: 2.1.5
2024-04-06 08:36:36,371:INFO:             pickle5: Not installed
2024-04-06 08:36:36,371:INFO:         cloudpickle: 3.0.0
2024-04-06 08:36:36,371:INFO:         deprecation: 2.1.0
2024-04-06 08:36:36,371:INFO:              xxhash: 3.4.1
2024-04-06 08:36:36,371:INFO:           wurlitzer: 3.0.3
2024-04-06 08:36:36,371:INFO:PyCaret optional dependencies:
2024-04-06 08:36:36,371:INFO:                shap: Not installed
2024-04-06 08:36:36,371:INFO:           interpret: Not installed
2024-04-06 08:36:36,371:INFO:                umap: Not installed
2024-04-06 08:36:36,371:INFO:     ydata_profiling: Not installed
2024-04-06 08:36:36,371:INFO:  explainerdashboard: Not installed
2024-04-06 08:36:36,371:INFO:             autoviz: Not installed
2024-04-06 08:36:36,371:INFO:           fairlearn: Not installed
2024-04-06 08:36:36,371:INFO:          deepchecks: Not installed
2024-04-06 08:36:36,371:INFO:             xgboost: Not installed
2024-04-06 08:36:36,371:INFO:            catboost: Not installed
2024-04-06 08:36:36,371:INFO:              kmodes: Not installed
2024-04-06 08:36:36,371:INFO:             mlxtend: Not installed
2024-04-06 08:36:36,371:INFO:       statsforecast: Not installed
2024-04-06 08:36:36,371:INFO:        tune_sklearn: Not installed
2024-04-06 08:36:36,371:INFO:                 ray: Not installed
2024-04-06 08:36:36,371:INFO:            hyperopt: Not installed
2024-04-06 08:36:36,371:INFO:              optuna: Not installed
2024-04-06 08:36:36,371:INFO:               skopt: Not installed
2024-04-06 08:36:36,371:INFO:              mlflow: 2.11.3
2024-04-06 08:36:36,371:INFO:              gradio: Not installed
2024-04-06 08:36:36,371:INFO:             fastapi: Not installed
2024-04-06 08:36:36,371:INFO:             uvicorn: Not installed
2024-04-06 08:36:36,371:INFO:              m2cgen: Not installed
2024-04-06 08:36:36,371:INFO:           evidently: Not installed
2024-04-06 08:36:36,371:INFO:               fugue: Not installed
2024-04-06 08:36:36,371:INFO:           streamlit: 1.33.0
2024-04-06 08:36:36,371:INFO:             prophet: 1.1.5
2024-04-06 08:36:36,371:INFO:None
2024-04-06 08:36:36,371:INFO:Set up data.
2024-04-06 08:38:22,977:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-06 08:38:22,977:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-06 08:38:22,977:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-06 08:38:22,977:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-06 08:38:23,688:INFO:PyCaret ClassificationExperiment
2024-04-06 08:38:23,688:INFO:Logging name: clf-default-name
2024-04-06 08:38:23,688:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 08:38:23,688:INFO:version 3.3.0
2024-04-06 08:38:23,688:INFO:Initializing setup()
2024-04-06 08:38:23,688:INFO:self.USI: 0e71
2024-04-06 08:38:23,688:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 08:38:23,688:INFO:Checking environment
2024-04-06 08:38:23,688:INFO:python_version: 3.11.3
2024-04-06 08:38:23,688:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 08:38:23,688:INFO:machine: arm64
2024-04-06 08:38:23,688:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:38:23,688:INFO:Memory: svmem(total=8589934592, available=2569814016, percent=70.1, used=3702276096, free=99696640, active=2480685056, inactive=2199650304, wired=1221591040)
2024-04-06 08:38:23,688:INFO:Physical Core: 8
2024-04-06 08:38:23,688:INFO:Logical Core: 8
2024-04-06 08:38:23,688:INFO:Checking libraries
2024-04-06 08:38:23,688:INFO:System:
2024-04-06 08:38:23,688:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 08:38:23,689:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 08:38:23,689:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:38:23,689:INFO:PyCaret required dependencies:
2024-04-06 08:38:23,722:INFO:                 pip: 24.0
2024-04-06 08:38:23,722:INFO:          setuptools: 65.5.0
2024-04-06 08:38:23,722:INFO:             pycaret: 3.3.0
2024-04-06 08:38:23,722:INFO:             IPython: 8.23.0
2024-04-06 08:38:23,722:INFO:          ipywidgets: 8.1.2
2024-04-06 08:38:23,722:INFO:                tqdm: 4.66.2
2024-04-06 08:38:23,722:INFO:               numpy: 1.26.4
2024-04-06 08:38:23,722:INFO:              pandas: 2.1.4
2024-04-06 08:38:23,722:INFO:              jinja2: 3.1.3
2024-04-06 08:38:23,722:INFO:               scipy: 1.11.4
2024-04-06 08:38:23,722:INFO:              joblib: 1.3.2
2024-04-06 08:38:23,722:INFO:             sklearn: 1.4.1.post1
2024-04-06 08:38:23,722:INFO:                pyod: 1.1.3
2024-04-06 08:38:23,722:INFO:            imblearn: 0.12.2
2024-04-06 08:38:23,722:INFO:   category_encoders: 2.6.3
2024-04-06 08:38:23,722:INFO:            lightgbm: 4.3.0
2024-04-06 08:38:23,722:INFO:               numba: 0.59.1
2024-04-06 08:38:23,722:INFO:            requests: 2.31.0
2024-04-06 08:38:23,722:INFO:          matplotlib: 3.7.5
2024-04-06 08:38:23,722:INFO:          scikitplot: 0.3.7
2024-04-06 08:38:23,722:INFO:         yellowbrick: 1.5
2024-04-06 08:38:23,722:INFO:              plotly: 5.20.0
2024-04-06 08:38:23,722:INFO:    plotly-resampler: Not installed
2024-04-06 08:38:23,722:INFO:             kaleido: 0.2.1
2024-04-06 08:38:23,722:INFO:           schemdraw: 0.15
2024-04-06 08:38:23,722:INFO:         statsmodels: 0.14.1
2024-04-06 08:38:23,722:INFO:              sktime: 0.28.0
2024-04-06 08:38:23,722:INFO:               tbats: 1.1.3
2024-04-06 08:38:23,722:INFO:            pmdarima: 2.0.4
2024-04-06 08:38:23,722:INFO:              psutil: 5.9.8
2024-04-06 08:38:23,722:INFO:          markupsafe: 2.1.5
2024-04-06 08:38:23,722:INFO:             pickle5: Not installed
2024-04-06 08:38:23,722:INFO:         cloudpickle: 3.0.0
2024-04-06 08:38:23,722:INFO:         deprecation: 2.1.0
2024-04-06 08:38:23,722:INFO:              xxhash: 3.4.1
2024-04-06 08:38:23,722:INFO:           wurlitzer: 3.0.3
2024-04-06 08:38:23,722:INFO:PyCaret optional dependencies:
2024-04-06 08:38:23,735:INFO:                shap: Not installed
2024-04-06 08:38:23,735:INFO:           interpret: Not installed
2024-04-06 08:38:23,735:INFO:                umap: Not installed
2024-04-06 08:38:23,735:INFO:     ydata_profiling: Not installed
2024-04-06 08:38:23,735:INFO:  explainerdashboard: Not installed
2024-04-06 08:38:23,735:INFO:             autoviz: Not installed
2024-04-06 08:38:23,735:INFO:           fairlearn: Not installed
2024-04-06 08:38:23,735:INFO:          deepchecks: Not installed
2024-04-06 08:38:23,735:INFO:             xgboost: Not installed
2024-04-06 08:38:23,735:INFO:            catboost: Not installed
2024-04-06 08:38:23,735:INFO:              kmodes: Not installed
2024-04-06 08:38:23,735:INFO:             mlxtend: Not installed
2024-04-06 08:38:23,735:INFO:       statsforecast: Not installed
2024-04-06 08:38:23,735:INFO:        tune_sklearn: Not installed
2024-04-06 08:38:23,735:INFO:                 ray: Not installed
2024-04-06 08:38:23,735:INFO:            hyperopt: Not installed
2024-04-06 08:38:23,735:INFO:              optuna: Not installed
2024-04-06 08:38:23,735:INFO:               skopt: Not installed
2024-04-06 08:38:23,735:INFO:              mlflow: 2.11.3
2024-04-06 08:38:23,735:INFO:              gradio: Not installed
2024-04-06 08:38:23,735:INFO:             fastapi: Not installed
2024-04-06 08:38:23,735:INFO:             uvicorn: Not installed
2024-04-06 08:38:23,735:INFO:              m2cgen: Not installed
2024-04-06 08:38:23,735:INFO:           evidently: Not installed
2024-04-06 08:38:23,735:INFO:               fugue: Not installed
2024-04-06 08:38:23,735:INFO:           streamlit: 1.33.0
2024-04-06 08:38:23,735:INFO:             prophet: 1.1.5
2024-04-06 08:38:23,735:INFO:None
2024-04-06 08:38:23,735:INFO:Set up data.
2024-04-06 08:38:23,738:INFO:Set up folding strategy.
2024-04-06 08:38:23,738:INFO:Set up train/test split.
2024-04-06 08:38:23,738:INFO:Set up data.
2024-04-06 08:41:34,040:INFO:PyCaret ClassificationExperiment
2024-04-06 08:41:34,040:INFO:Logging name: clf-default-name
2024-04-06 08:41:34,040:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 08:41:34,040:INFO:version 3.3.0
2024-04-06 08:41:34,040:INFO:Initializing setup()
2024-04-06 08:41:34,040:INFO:self.USI: a28c
2024-04-06 08:41:34,040:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 08:41:34,040:INFO:Checking environment
2024-04-06 08:41:34,041:INFO:python_version: 3.11.3
2024-04-06 08:41:34,041:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 08:41:34,041:INFO:machine: arm64
2024-04-06 08:41:34,041:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:41:34,041:INFO:Memory: svmem(total=8589934592, available=2672443392, percent=68.9, used=3805659136, free=114999296, active=2543009792, inactive=2543386624, wired=1262649344)
2024-04-06 08:41:34,041:INFO:Physical Core: 8
2024-04-06 08:41:34,041:INFO:Logical Core: 8
2024-04-06 08:41:34,041:INFO:Checking libraries
2024-04-06 08:41:34,041:INFO:System:
2024-04-06 08:41:34,041:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 08:41:34,041:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 08:41:34,041:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:41:34,041:INFO:PyCaret required dependencies:
2024-04-06 08:41:34,041:INFO:                 pip: 24.0
2024-04-06 08:41:34,041:INFO:          setuptools: 65.5.0
2024-04-06 08:41:34,041:INFO:             pycaret: 3.3.0
2024-04-06 08:41:34,041:INFO:             IPython: 8.23.0
2024-04-06 08:41:34,041:INFO:          ipywidgets: 8.1.2
2024-04-06 08:41:34,041:INFO:                tqdm: 4.66.2
2024-04-06 08:41:34,041:INFO:               numpy: 1.26.4
2024-04-06 08:41:34,041:INFO:              pandas: 2.1.4
2024-04-06 08:41:34,041:INFO:              jinja2: 3.1.3
2024-04-06 08:41:34,041:INFO:               scipy: 1.11.4
2024-04-06 08:41:34,041:INFO:              joblib: 1.3.2
2024-04-06 08:41:34,041:INFO:             sklearn: 1.4.1.post1
2024-04-06 08:41:34,041:INFO:                pyod: 1.1.3
2024-04-06 08:41:34,041:INFO:            imblearn: 0.12.2
2024-04-06 08:41:34,041:INFO:   category_encoders: 2.6.3
2024-04-06 08:41:34,041:INFO:            lightgbm: 4.3.0
2024-04-06 08:41:34,041:INFO:               numba: 0.59.1
2024-04-06 08:41:34,041:INFO:            requests: 2.31.0
2024-04-06 08:41:34,041:INFO:          matplotlib: 3.7.5
2024-04-06 08:41:34,041:INFO:          scikitplot: 0.3.7
2024-04-06 08:41:34,041:INFO:         yellowbrick: 1.5
2024-04-06 08:41:34,041:INFO:              plotly: 5.20.0
2024-04-06 08:41:34,041:INFO:    plotly-resampler: Not installed
2024-04-06 08:41:34,041:INFO:             kaleido: 0.2.1
2024-04-06 08:41:34,041:INFO:           schemdraw: 0.15
2024-04-06 08:41:34,041:INFO:         statsmodels: 0.14.1
2024-04-06 08:41:34,041:INFO:              sktime: 0.28.0
2024-04-06 08:41:34,041:INFO:               tbats: 1.1.3
2024-04-06 08:41:34,041:INFO:            pmdarima: 2.0.4
2024-04-06 08:41:34,041:INFO:              psutil: 5.9.8
2024-04-06 08:41:34,041:INFO:          markupsafe: 2.1.5
2024-04-06 08:41:34,041:INFO:             pickle5: Not installed
2024-04-06 08:41:34,041:INFO:         cloudpickle: 3.0.0
2024-04-06 08:41:34,041:INFO:         deprecation: 2.1.0
2024-04-06 08:41:34,041:INFO:              xxhash: 3.4.1
2024-04-06 08:41:34,041:INFO:           wurlitzer: 3.0.3
2024-04-06 08:41:34,041:INFO:PyCaret optional dependencies:
2024-04-06 08:41:34,041:INFO:                shap: Not installed
2024-04-06 08:41:34,041:INFO:           interpret: Not installed
2024-04-06 08:41:34,041:INFO:                umap: Not installed
2024-04-06 08:41:34,041:INFO:     ydata_profiling: Not installed
2024-04-06 08:41:34,041:INFO:  explainerdashboard: Not installed
2024-04-06 08:41:34,041:INFO:             autoviz: Not installed
2024-04-06 08:41:34,041:INFO:           fairlearn: Not installed
2024-04-06 08:41:34,042:INFO:          deepchecks: Not installed
2024-04-06 08:41:34,042:INFO:             xgboost: Not installed
2024-04-06 08:41:34,042:INFO:            catboost: Not installed
2024-04-06 08:41:34,042:INFO:              kmodes: Not installed
2024-04-06 08:41:34,042:INFO:             mlxtend: Not installed
2024-04-06 08:41:34,042:INFO:       statsforecast: Not installed
2024-04-06 08:41:34,042:INFO:        tune_sklearn: Not installed
2024-04-06 08:41:34,042:INFO:                 ray: Not installed
2024-04-06 08:41:34,042:INFO:            hyperopt: Not installed
2024-04-06 08:41:34,042:INFO:              optuna: Not installed
2024-04-06 08:41:34,042:INFO:               skopt: Not installed
2024-04-06 08:41:34,042:INFO:              mlflow: 2.11.3
2024-04-06 08:41:34,042:INFO:              gradio: Not installed
2024-04-06 08:41:34,042:INFO:             fastapi: Not installed
2024-04-06 08:41:34,042:INFO:             uvicorn: Not installed
2024-04-06 08:41:34,042:INFO:              m2cgen: Not installed
2024-04-06 08:41:34,042:INFO:           evidently: Not installed
2024-04-06 08:41:34,042:INFO:               fugue: Not installed
2024-04-06 08:41:34,042:INFO:           streamlit: 1.33.0
2024-04-06 08:41:34,042:INFO:             prophet: 1.1.5
2024-04-06 08:41:34,042:INFO:None
2024-04-06 08:41:34,042:INFO:Set up data.
2024-04-06 08:41:34,044:INFO:Set up folding strategy.
2024-04-06 08:41:34,044:INFO:Set up train/test split.
2024-04-06 08:41:34,044:INFO:Set up data.
2024-04-06 08:42:51,160:INFO:PyCaret ClassificationExperiment
2024-04-06 08:42:51,160:INFO:Logging name: clf-default-name
2024-04-06 08:42:51,160:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 08:42:51,160:INFO:version 3.3.0
2024-04-06 08:42:51,160:INFO:Initializing setup()
2024-04-06 08:42:51,160:INFO:self.USI: 7cb0
2024-04-06 08:42:51,160:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 08:42:51,160:INFO:Checking environment
2024-04-06 08:42:51,160:INFO:python_version: 3.11.3
2024-04-06 08:42:51,160:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 08:42:51,160:INFO:machine: arm64
2024-04-06 08:42:51,160:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:42:51,160:INFO:Memory: svmem(total=8589934592, available=2732261376, percent=68.2, used=3768238080, free=192659456, active=2549547008, inactive=2519023616, wired=1218691072)
2024-04-06 08:42:51,160:INFO:Physical Core: 8
2024-04-06 08:42:51,160:INFO:Logical Core: 8
2024-04-06 08:42:51,160:INFO:Checking libraries
2024-04-06 08:42:51,160:INFO:System:
2024-04-06 08:42:51,160:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 08:42:51,160:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 08:42:51,160:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:42:51,160:INFO:PyCaret required dependencies:
2024-04-06 08:42:51,160:INFO:                 pip: 24.0
2024-04-06 08:42:51,160:INFO:          setuptools: 65.5.0
2024-04-06 08:42:51,160:INFO:             pycaret: 3.3.0
2024-04-06 08:42:51,160:INFO:             IPython: 8.23.0
2024-04-06 08:42:51,160:INFO:          ipywidgets: 8.1.2
2024-04-06 08:42:51,160:INFO:                tqdm: 4.66.2
2024-04-06 08:42:51,160:INFO:               numpy: 1.26.4
2024-04-06 08:42:51,160:INFO:              pandas: 2.1.4
2024-04-06 08:42:51,160:INFO:              jinja2: 3.1.3
2024-04-06 08:42:51,160:INFO:               scipy: 1.11.4
2024-04-06 08:42:51,160:INFO:              joblib: 1.3.2
2024-04-06 08:42:51,160:INFO:             sklearn: 1.4.1.post1
2024-04-06 08:42:51,161:INFO:                pyod: 1.1.3
2024-04-06 08:42:51,161:INFO:            imblearn: 0.12.2
2024-04-06 08:42:51,161:INFO:   category_encoders: 2.6.3
2024-04-06 08:42:51,161:INFO:            lightgbm: 4.3.0
2024-04-06 08:42:51,161:INFO:               numba: 0.59.1
2024-04-06 08:42:51,161:INFO:            requests: 2.31.0
2024-04-06 08:42:51,161:INFO:          matplotlib: 3.7.5
2024-04-06 08:42:51,161:INFO:          scikitplot: 0.3.7
2024-04-06 08:42:51,161:INFO:         yellowbrick: 1.5
2024-04-06 08:42:51,161:INFO:              plotly: 5.20.0
2024-04-06 08:42:51,161:INFO:    plotly-resampler: Not installed
2024-04-06 08:42:51,161:INFO:             kaleido: 0.2.1
2024-04-06 08:42:51,161:INFO:           schemdraw: 0.15
2024-04-06 08:42:51,161:INFO:         statsmodels: 0.14.1
2024-04-06 08:42:51,161:INFO:              sktime: 0.28.0
2024-04-06 08:42:51,161:INFO:               tbats: 1.1.3
2024-04-06 08:42:51,161:INFO:            pmdarima: 2.0.4
2024-04-06 08:42:51,161:INFO:              psutil: 5.9.8
2024-04-06 08:42:51,161:INFO:          markupsafe: 2.1.5
2024-04-06 08:42:51,161:INFO:             pickle5: Not installed
2024-04-06 08:42:51,161:INFO:         cloudpickle: 3.0.0
2024-04-06 08:42:51,161:INFO:         deprecation: 2.1.0
2024-04-06 08:42:51,161:INFO:              xxhash: 3.4.1
2024-04-06 08:42:51,161:INFO:           wurlitzer: 3.0.3
2024-04-06 08:42:51,161:INFO:PyCaret optional dependencies:
2024-04-06 08:42:51,161:INFO:                shap: Not installed
2024-04-06 08:42:51,161:INFO:           interpret: Not installed
2024-04-06 08:42:51,161:INFO:                umap: Not installed
2024-04-06 08:42:51,161:INFO:     ydata_profiling: Not installed
2024-04-06 08:42:51,161:INFO:  explainerdashboard: Not installed
2024-04-06 08:42:51,161:INFO:             autoviz: Not installed
2024-04-06 08:42:51,161:INFO:           fairlearn: Not installed
2024-04-06 08:42:51,161:INFO:          deepchecks: Not installed
2024-04-06 08:42:51,161:INFO:             xgboost: Not installed
2024-04-06 08:42:51,161:INFO:            catboost: Not installed
2024-04-06 08:42:51,161:INFO:              kmodes: Not installed
2024-04-06 08:42:51,161:INFO:             mlxtend: Not installed
2024-04-06 08:42:51,161:INFO:       statsforecast: Not installed
2024-04-06 08:42:51,161:INFO:        tune_sklearn: Not installed
2024-04-06 08:42:51,161:INFO:                 ray: Not installed
2024-04-06 08:42:51,161:INFO:            hyperopt: Not installed
2024-04-06 08:42:51,161:INFO:              optuna: Not installed
2024-04-06 08:42:51,161:INFO:               skopt: Not installed
2024-04-06 08:42:51,161:INFO:              mlflow: 2.11.3
2024-04-06 08:42:51,161:INFO:              gradio: Not installed
2024-04-06 08:42:51,161:INFO:             fastapi: Not installed
2024-04-06 08:42:51,161:INFO:             uvicorn: Not installed
2024-04-06 08:42:51,161:INFO:              m2cgen: Not installed
2024-04-06 08:42:51,161:INFO:           evidently: Not installed
2024-04-06 08:42:51,161:INFO:               fugue: Not installed
2024-04-06 08:42:51,161:INFO:           streamlit: 1.33.0
2024-04-06 08:42:51,161:INFO:             prophet: 1.1.5
2024-04-06 08:42:51,161:INFO:None
2024-04-06 08:42:51,161:INFO:Set up data.
2024-04-06 08:42:51,164:INFO:Set up folding strategy.
2024-04-06 08:42:51,164:INFO:Set up train/test split.
2024-04-06 08:42:51,164:INFO:Set up data.
2024-04-06 08:42:51,167:INFO:Set up index.
2024-04-06 08:42:51,167:INFO:Assigning column types.
2024-04-06 08:42:51,170:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 08:42:51,194:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 08:42:51,195:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:42:51,211:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:42:51,211:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:42:51,229:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 08:42:51,229:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:42:51,240:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:42:51,240:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:42:51,240:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 08:42:51,258:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:42:51,269:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:42:51,269:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:42:51,287:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:42:51,297:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:42:51,298:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:42:51,298:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 08:42:51,326:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:42:51,326:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:42:51,354:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:42:51,354:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:42:51,356:INFO:Preparing preprocessing pipeline...
2024-04-06 08:42:51,357:INFO:Set up simple imputation.
2024-04-06 08:42:51,357:INFO:Set up feature normalization.
2024-04-06 08:42:51,366:INFO:Finished creating preprocessing pipeline.
2024-04-06 08:42:51,368:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 08:42:51,368:INFO:Creating final display dataframe.
2024-04-06 08:42:51,398:INFO:Setup _display_container:                     Description             Value
0                    Session id              2083
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              7cb0
2024-04-06 08:42:51,431:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:42:51,431:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:42:51,464:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:42:51,464:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:42:51,465:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 08:42:51,466:INFO:setup() successfully completed in 0.31s...............
2024-04-06 08:42:51,466:INFO:Initializing compare_models()
2024-04-06 08:42:51,466:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1749e8c10>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x1749e8c10>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 08:42:51,466:INFO:Checking exceptions
2024-04-06 08:42:51,468:INFO:Preparing display monitor
2024-04-06 08:42:51,493:INFO:Initializing Logistic Regression
2024-04-06 08:42:51,493:INFO:Total runtime is 3.862380981445312e-06 minutes
2024-04-06 08:42:51,497:INFO:SubProcess create_model() called ==================================
2024-04-06 08:42:51,497:INFO:Initializing create_model()
2024-04-06 08:42:51,497:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1749e8c10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x173fd9810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:42:51,497:INFO:Checking exceptions
2024-04-06 08:42:51,497:INFO:Importing libraries
2024-04-06 08:42:51,497:INFO:Copying training dataset
2024-04-06 08:42:51,501:INFO:Defining folds
2024-04-06 08:42:51,501:INFO:Declaring metric variables
2024-04-06 08:42:51,503:INFO:Importing untrained model
2024-04-06 08:42:51,506:INFO:Logistic Regression Imported successfully
2024-04-06 08:42:51,510:INFO:Starting cross validation
2024-04-06 08:42:51,511:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 08:42:53,619:INFO:Calculating mean and std
2024-04-06 08:42:53,621:INFO:Creating metrics dataframe
2024-04-06 08:42:53,624:INFO:Uploading results into container
2024-04-06 08:42:53,624:INFO:Uploading model into container now
2024-04-06 08:42:53,625:INFO:_master_model_container: 1
2024-04-06 08:42:53,625:INFO:_display_container: 2
2024-04-06 08:42:53,626:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2083, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 08:42:53,626:INFO:create_model() successfully completed......................................
2024-04-06 08:42:53,726:INFO:SubProcess create_model() end ==================================
2024-04-06 08:42:53,726:INFO:Creating metrics dataframe
2024-04-06 08:42:53,728:INFO:Initializing Decision Tree Classifier
2024-04-06 08:42:53,728:INFO:Total runtime is 0.03724903265635173 minutes
2024-04-06 08:42:53,729:INFO:SubProcess create_model() called ==================================
2024-04-06 08:42:53,730:INFO:Initializing create_model()
2024-04-06 08:42:53,730:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1749e8c10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x173fd9810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:42:53,730:INFO:Checking exceptions
2024-04-06 08:42:53,730:INFO:Importing libraries
2024-04-06 08:42:53,730:INFO:Copying training dataset
2024-04-06 08:42:53,733:INFO:Defining folds
2024-04-06 08:42:53,733:INFO:Declaring metric variables
2024-04-06 08:42:53,734:INFO:Importing untrained model
2024-04-06 08:42:53,735:INFO:Decision Tree Classifier Imported successfully
2024-04-06 08:42:53,737:INFO:Starting cross validation
2024-04-06 08:42:53,738:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 08:42:53,813:INFO:Calculating mean and std
2024-04-06 08:42:53,813:INFO:Creating metrics dataframe
2024-04-06 08:42:53,814:INFO:Uploading results into container
2024-04-06 08:42:53,814:INFO:Uploading model into container now
2024-04-06 08:42:53,814:INFO:_master_model_container: 2
2024-04-06 08:42:53,814:INFO:_display_container: 2
2024-04-06 08:42:53,814:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2083, splitter='best')
2024-04-06 08:42:53,814:INFO:create_model() successfully completed......................................
2024-04-06 08:42:53,878:INFO:SubProcess create_model() end ==================================
2024-04-06 08:42:53,878:INFO:Creating metrics dataframe
2024-04-06 08:42:53,883:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 08:42:53,886:INFO:Initializing create_model()
2024-04-06 08:42:53,886:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1749e8c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2083, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:42:53,886:INFO:Checking exceptions
2024-04-06 08:42:53,887:INFO:Importing libraries
2024-04-06 08:42:53,887:INFO:Copying training dataset
2024-04-06 08:42:53,889:INFO:Defining folds
2024-04-06 08:42:53,889:INFO:Declaring metric variables
2024-04-06 08:42:53,889:INFO:Importing untrained model
2024-04-06 08:42:53,889:INFO:Declaring custom model
2024-04-06 08:42:53,889:INFO:Decision Tree Classifier Imported successfully
2024-04-06 08:42:53,890:INFO:Cross validation set to False
2024-04-06 08:42:53,890:INFO:Fitting Model
2024-04-06 08:42:53,902:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2083, splitter='best')
2024-04-06 08:42:53,902:INFO:create_model() successfully completed......................................
2024-04-06 08:42:53,968:INFO:Initializing create_model()
2024-04-06 08:42:53,968:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1749e8c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2083, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:42:53,968:INFO:Checking exceptions
2024-04-06 08:42:53,969:INFO:Importing libraries
2024-04-06 08:42:53,969:INFO:Copying training dataset
2024-04-06 08:42:53,971:INFO:Defining folds
2024-04-06 08:42:53,971:INFO:Declaring metric variables
2024-04-06 08:42:53,971:INFO:Importing untrained model
2024-04-06 08:42:53,972:INFO:Declaring custom model
2024-04-06 08:42:53,972:INFO:Logistic Regression Imported successfully
2024-04-06 08:42:53,972:INFO:Cross validation set to False
2024-04-06 08:42:53,972:INFO:Fitting Model
2024-04-06 08:42:53,980:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2083, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 08:42:53,980:INFO:create_model() successfully completed......................................
2024-04-06 08:42:54,127:INFO:_master_model_container: 2
2024-04-06 08:42:54,129:INFO:_display_container: 2
2024-04-06 08:42:54,130:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2083, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2083, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-06 08:42:54,130:INFO:compare_models() successfully completed......................................
2024-04-06 08:43:16,083:INFO:PyCaret ClassificationExperiment
2024-04-06 08:43:16,084:INFO:Logging name: clf-default-name
2024-04-06 08:43:16,084:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 08:43:16,084:INFO:version 3.3.0
2024-04-06 08:43:16,084:INFO:Initializing setup()
2024-04-06 08:43:16,084:INFO:self.USI: aa6c
2024-04-06 08:43:16,084:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 08:43:16,084:INFO:Checking environment
2024-04-06 08:43:16,084:INFO:python_version: 3.11.3
2024-04-06 08:43:16,084:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 08:43:16,084:INFO:machine: arm64
2024-04-06 08:43:16,084:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:43:16,084:INFO:Memory: svmem(total=8589934592, available=2417688576, percent=71.9, used=3540697088, free=86556672, active=2338095104, inactive=2320072704, wired=1202601984)
2024-04-06 08:43:16,084:INFO:Physical Core: 8
2024-04-06 08:43:16,084:INFO:Logical Core: 8
2024-04-06 08:43:16,084:INFO:Checking libraries
2024-04-06 08:43:16,084:INFO:System:
2024-04-06 08:43:16,084:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 08:43:16,084:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 08:43:16,084:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:43:16,084:INFO:PyCaret required dependencies:
2024-04-06 08:43:16,084:INFO:                 pip: 24.0
2024-04-06 08:43:16,084:INFO:          setuptools: 65.5.0
2024-04-06 08:43:16,084:INFO:             pycaret: 3.3.0
2024-04-06 08:43:16,084:INFO:             IPython: 8.23.0
2024-04-06 08:43:16,084:INFO:          ipywidgets: 8.1.2
2024-04-06 08:43:16,084:INFO:                tqdm: 4.66.2
2024-04-06 08:43:16,084:INFO:               numpy: 1.26.4
2024-04-06 08:43:16,084:INFO:              pandas: 2.1.4
2024-04-06 08:43:16,084:INFO:              jinja2: 3.1.3
2024-04-06 08:43:16,084:INFO:               scipy: 1.11.4
2024-04-06 08:43:16,084:INFO:              joblib: 1.3.2
2024-04-06 08:43:16,084:INFO:             sklearn: 1.4.1.post1
2024-04-06 08:43:16,084:INFO:                pyod: 1.1.3
2024-04-06 08:43:16,084:INFO:            imblearn: 0.12.2
2024-04-06 08:43:16,085:INFO:   category_encoders: 2.6.3
2024-04-06 08:43:16,085:INFO:            lightgbm: 4.3.0
2024-04-06 08:43:16,085:INFO:               numba: 0.59.1
2024-04-06 08:43:16,085:INFO:            requests: 2.31.0
2024-04-06 08:43:16,085:INFO:          matplotlib: 3.7.5
2024-04-06 08:43:16,085:INFO:          scikitplot: 0.3.7
2024-04-06 08:43:16,085:INFO:         yellowbrick: 1.5
2024-04-06 08:43:16,085:INFO:              plotly: 5.20.0
2024-04-06 08:43:16,085:INFO:    plotly-resampler: Not installed
2024-04-06 08:43:16,085:INFO:             kaleido: 0.2.1
2024-04-06 08:43:16,085:INFO:           schemdraw: 0.15
2024-04-06 08:43:16,085:INFO:         statsmodels: 0.14.1
2024-04-06 08:43:16,085:INFO:              sktime: 0.28.0
2024-04-06 08:43:16,085:INFO:               tbats: 1.1.3
2024-04-06 08:43:16,085:INFO:            pmdarima: 2.0.4
2024-04-06 08:43:16,085:INFO:              psutil: 5.9.8
2024-04-06 08:43:16,085:INFO:          markupsafe: 2.1.5
2024-04-06 08:43:16,085:INFO:             pickle5: Not installed
2024-04-06 08:43:16,085:INFO:         cloudpickle: 3.0.0
2024-04-06 08:43:16,085:INFO:         deprecation: 2.1.0
2024-04-06 08:43:16,085:INFO:              xxhash: 3.4.1
2024-04-06 08:43:16,085:INFO:           wurlitzer: 3.0.3
2024-04-06 08:43:16,085:INFO:PyCaret optional dependencies:
2024-04-06 08:43:16,085:INFO:                shap: Not installed
2024-04-06 08:43:16,085:INFO:           interpret: Not installed
2024-04-06 08:43:16,085:INFO:                umap: Not installed
2024-04-06 08:43:16,085:INFO:     ydata_profiling: Not installed
2024-04-06 08:43:16,085:INFO:  explainerdashboard: Not installed
2024-04-06 08:43:16,085:INFO:             autoviz: Not installed
2024-04-06 08:43:16,085:INFO:           fairlearn: Not installed
2024-04-06 08:43:16,085:INFO:          deepchecks: Not installed
2024-04-06 08:43:16,085:INFO:             xgboost: Not installed
2024-04-06 08:43:16,085:INFO:            catboost: Not installed
2024-04-06 08:43:16,085:INFO:              kmodes: Not installed
2024-04-06 08:43:16,085:INFO:             mlxtend: Not installed
2024-04-06 08:43:16,085:INFO:       statsforecast: Not installed
2024-04-06 08:43:16,085:INFO:        tune_sklearn: Not installed
2024-04-06 08:43:16,085:INFO:                 ray: Not installed
2024-04-06 08:43:16,085:INFO:            hyperopt: Not installed
2024-04-06 08:43:16,085:INFO:              optuna: Not installed
2024-04-06 08:43:16,085:INFO:               skopt: Not installed
2024-04-06 08:43:16,085:INFO:              mlflow: 2.11.3
2024-04-06 08:43:16,085:INFO:              gradio: Not installed
2024-04-06 08:43:16,085:INFO:             fastapi: Not installed
2024-04-06 08:43:16,085:INFO:             uvicorn: Not installed
2024-04-06 08:43:16,085:INFO:              m2cgen: Not installed
2024-04-06 08:43:16,085:INFO:           evidently: Not installed
2024-04-06 08:43:16,085:INFO:               fugue: Not installed
2024-04-06 08:43:16,085:INFO:           streamlit: 1.33.0
2024-04-06 08:43:16,085:INFO:             prophet: 1.1.5
2024-04-06 08:43:16,085:INFO:None
2024-04-06 08:43:16,085:INFO:Set up data.
2024-04-06 08:43:16,089:INFO:Set up folding strategy.
2024-04-06 08:43:16,089:INFO:Set up train/test split.
2024-04-06 08:43:16,089:INFO:Set up data.
2024-04-06 08:43:16,092:INFO:Set up index.
2024-04-06 08:43:16,093:INFO:Assigning column types.
2024-04-06 08:43:16,096:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 08:43:16,119:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 08:43:16,120:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:43:16,132:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:43:16,132:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:43:16,151:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 08:43:16,151:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:43:16,162:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:43:16,162:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:43:16,162:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 08:43:16,180:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:43:16,191:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:43:16,191:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:43:16,208:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:43:16,219:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:43:16,219:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:43:16,219:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 08:43:16,247:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:43:16,247:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:43:16,276:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:43:16,276:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:43:16,276:INFO:Preparing preprocessing pipeline...
2024-04-06 08:43:16,277:INFO:Set up simple imputation.
2024-04-06 08:43:16,277:INFO:Set up feature normalization.
2024-04-06 08:43:16,287:INFO:Finished creating preprocessing pipeline.
2024-04-06 08:43:16,288:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 08:43:16,288:INFO:Creating final display dataframe.
2024-04-06 08:43:16,317:INFO:Setup _display_container:                     Description             Value
0                    Session id              3904
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              aa6c
2024-04-06 08:43:16,348:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:43:16,348:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:43:16,377:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:43:16,377:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:43:16,378:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 08:43:16,378:INFO:setup() successfully completed in 0.3s...............
2024-04-06 08:43:16,379:INFO:Initializing compare_models()
2024-04-06 08:43:16,379:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x107214250>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x107214250>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 08:43:16,379:INFO:Checking exceptions
2024-04-06 08:43:16,380:INFO:Preparing display monitor
2024-04-06 08:43:16,404:INFO:Initializing Logistic Regression
2024-04-06 08:43:16,404:INFO:Total runtime is 1.700719197591146e-06 minutes
2024-04-06 08:43:16,409:INFO:SubProcess create_model() called ==================================
2024-04-06 08:43:16,409:INFO:Initializing create_model()
2024-04-06 08:43:16,409:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x107214250>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x169c50c50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:43:16,409:INFO:Checking exceptions
2024-04-06 08:43:16,409:INFO:Importing libraries
2024-04-06 08:43:16,409:INFO:Copying training dataset
2024-04-06 08:43:16,411:INFO:Defining folds
2024-04-06 08:43:16,411:INFO:Declaring metric variables
2024-04-06 08:43:16,416:INFO:Importing untrained model
2024-04-06 08:43:16,420:INFO:Logistic Regression Imported successfully
2024-04-06 08:43:16,428:INFO:Starting cross validation
2024-04-06 08:43:16,428:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 08:43:16,495:INFO:Calculating mean and std
2024-04-06 08:43:16,496:INFO:Creating metrics dataframe
2024-04-06 08:43:16,496:INFO:Uploading results into container
2024-04-06 08:43:16,496:INFO:Uploading model into container now
2024-04-06 08:43:16,497:INFO:_master_model_container: 1
2024-04-06 08:43:16,497:INFO:_display_container: 2
2024-04-06 08:43:16,497:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3904, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 08:43:16,497:INFO:create_model() successfully completed......................................
2024-04-06 08:43:16,567:INFO:SubProcess create_model() end ==================================
2024-04-06 08:43:16,567:INFO:Creating metrics dataframe
2024-04-06 08:43:16,569:INFO:Initializing Decision Tree Classifier
2024-04-06 08:43:16,569:INFO:Total runtime is 0.002757700284322103 minutes
2024-04-06 08:43:16,570:INFO:SubProcess create_model() called ==================================
2024-04-06 08:43:16,571:INFO:Initializing create_model()
2024-04-06 08:43:16,571:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x107214250>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x169c50c50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:43:16,571:INFO:Checking exceptions
2024-04-06 08:43:16,571:INFO:Importing libraries
2024-04-06 08:43:16,571:INFO:Copying training dataset
2024-04-06 08:43:16,573:INFO:Defining folds
2024-04-06 08:43:16,573:INFO:Declaring metric variables
2024-04-06 08:43:16,574:INFO:Importing untrained model
2024-04-06 08:43:16,576:INFO:Decision Tree Classifier Imported successfully
2024-04-06 08:43:16,578:INFO:Starting cross validation
2024-04-06 08:43:16,578:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 08:43:16,643:INFO:Calculating mean and std
2024-04-06 08:43:16,643:INFO:Creating metrics dataframe
2024-04-06 08:43:16,644:INFO:Uploading results into container
2024-04-06 08:43:16,644:INFO:Uploading model into container now
2024-04-06 08:43:16,644:INFO:_master_model_container: 2
2024-04-06 08:43:16,644:INFO:_display_container: 2
2024-04-06 08:43:16,644:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3904, splitter='best')
2024-04-06 08:43:16,644:INFO:create_model() successfully completed......................................
2024-04-06 08:43:16,712:INFO:SubProcess create_model() end ==================================
2024-04-06 08:43:16,712:INFO:Creating metrics dataframe
2024-04-06 08:43:16,715:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 08:43:16,718:INFO:Initializing create_model()
2024-04-06 08:43:16,718:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x107214250>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3904, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:43:16,718:INFO:Checking exceptions
2024-04-06 08:43:16,719:INFO:Importing libraries
2024-04-06 08:43:16,719:INFO:Copying training dataset
2024-04-06 08:43:16,721:INFO:Defining folds
2024-04-06 08:43:16,721:INFO:Declaring metric variables
2024-04-06 08:43:16,722:INFO:Importing untrained model
2024-04-06 08:43:16,722:INFO:Declaring custom model
2024-04-06 08:43:16,722:INFO:Decision Tree Classifier Imported successfully
2024-04-06 08:43:16,722:INFO:Cross validation set to False
2024-04-06 08:43:16,722:INFO:Fitting Model
2024-04-06 08:43:16,734:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3904, splitter='best')
2024-04-06 08:43:16,734:INFO:create_model() successfully completed......................................
2024-04-06 08:43:16,801:INFO:Initializing create_model()
2024-04-06 08:43:16,801:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x107214250>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3904, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:43:16,801:INFO:Checking exceptions
2024-04-06 08:43:16,802:INFO:Importing libraries
2024-04-06 08:43:16,802:INFO:Copying training dataset
2024-04-06 08:43:16,804:INFO:Defining folds
2024-04-06 08:43:16,804:INFO:Declaring metric variables
2024-04-06 08:43:16,804:INFO:Importing untrained model
2024-04-06 08:43:16,804:INFO:Declaring custom model
2024-04-06 08:43:16,804:INFO:Logistic Regression Imported successfully
2024-04-06 08:43:16,804:INFO:Cross validation set to False
2024-04-06 08:43:16,804:INFO:Fitting Model
2024-04-06 08:43:16,810:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3904, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 08:43:16,810:INFO:create_model() successfully completed......................................
2024-04-06 08:43:16,974:INFO:_master_model_container: 2
2024-04-06 08:43:16,975:INFO:_display_container: 2
2024-04-06 08:43:16,975:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3904, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3904, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-06 08:43:16,976:INFO:compare_models() successfully completed......................................
2024-04-06 08:44:18,735:INFO:PyCaret ClassificationExperiment
2024-04-06 08:44:18,735:INFO:Logging name: clf-default-name
2024-04-06 08:44:18,735:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 08:44:18,735:INFO:version 3.3.0
2024-04-06 08:44:18,735:INFO:Initializing setup()
2024-04-06 08:44:18,735:INFO:self.USI: 5d3b
2024-04-06 08:44:18,735:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 08:44:18,736:INFO:Checking environment
2024-04-06 08:44:18,736:INFO:python_version: 3.11.3
2024-04-06 08:44:18,736:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 08:44:18,736:INFO:machine: arm64
2024-04-06 08:44:18,736:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:44:18,736:INFO:Memory: svmem(total=8589934592, available=2313453568, percent=73.1, used=3489677312, free=50315264, active=2270150656, inactive=2260418560, wired=1219526656)
2024-04-06 08:44:18,736:INFO:Physical Core: 8
2024-04-06 08:44:18,736:INFO:Logical Core: 8
2024-04-06 08:44:18,736:INFO:Checking libraries
2024-04-06 08:44:18,736:INFO:System:
2024-04-06 08:44:18,736:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 08:44:18,736:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 08:44:18,736:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:44:18,736:INFO:PyCaret required dependencies:
2024-04-06 08:44:18,736:INFO:                 pip: 24.0
2024-04-06 08:44:18,736:INFO:          setuptools: 65.5.0
2024-04-06 08:44:18,736:INFO:             pycaret: 3.3.0
2024-04-06 08:44:18,736:INFO:             IPython: 8.23.0
2024-04-06 08:44:18,736:INFO:          ipywidgets: 8.1.2
2024-04-06 08:44:18,736:INFO:                tqdm: 4.66.2
2024-04-06 08:44:18,736:INFO:               numpy: 1.26.4
2024-04-06 08:44:18,736:INFO:              pandas: 2.1.4
2024-04-06 08:44:18,736:INFO:              jinja2: 3.1.3
2024-04-06 08:44:18,736:INFO:               scipy: 1.11.4
2024-04-06 08:44:18,736:INFO:              joblib: 1.3.2
2024-04-06 08:44:18,736:INFO:             sklearn: 1.4.1.post1
2024-04-06 08:44:18,736:INFO:                pyod: 1.1.3
2024-04-06 08:44:18,736:INFO:            imblearn: 0.12.2
2024-04-06 08:44:18,736:INFO:   category_encoders: 2.6.3
2024-04-06 08:44:18,736:INFO:            lightgbm: 4.3.0
2024-04-06 08:44:18,736:INFO:               numba: 0.59.1
2024-04-06 08:44:18,736:INFO:            requests: 2.31.0
2024-04-06 08:44:18,736:INFO:          matplotlib: 3.7.5
2024-04-06 08:44:18,736:INFO:          scikitplot: 0.3.7
2024-04-06 08:44:18,736:INFO:         yellowbrick: 1.5
2024-04-06 08:44:18,736:INFO:              plotly: 5.20.0
2024-04-06 08:44:18,736:INFO:    plotly-resampler: Not installed
2024-04-06 08:44:18,736:INFO:             kaleido: 0.2.1
2024-04-06 08:44:18,736:INFO:           schemdraw: 0.15
2024-04-06 08:44:18,736:INFO:         statsmodels: 0.14.1
2024-04-06 08:44:18,736:INFO:              sktime: 0.28.0
2024-04-06 08:44:18,736:INFO:               tbats: 1.1.3
2024-04-06 08:44:18,736:INFO:            pmdarima: 2.0.4
2024-04-06 08:44:18,736:INFO:              psutil: 5.9.8
2024-04-06 08:44:18,737:INFO:          markupsafe: 2.1.5
2024-04-06 08:44:18,737:INFO:             pickle5: Not installed
2024-04-06 08:44:18,737:INFO:         cloudpickle: 3.0.0
2024-04-06 08:44:18,737:INFO:         deprecation: 2.1.0
2024-04-06 08:44:18,737:INFO:              xxhash: 3.4.1
2024-04-06 08:44:18,737:INFO:           wurlitzer: 3.0.3
2024-04-06 08:44:18,737:INFO:PyCaret optional dependencies:
2024-04-06 08:44:18,737:INFO:                shap: Not installed
2024-04-06 08:44:18,737:INFO:           interpret: Not installed
2024-04-06 08:44:18,737:INFO:                umap: Not installed
2024-04-06 08:44:18,737:INFO:     ydata_profiling: Not installed
2024-04-06 08:44:18,737:INFO:  explainerdashboard: Not installed
2024-04-06 08:44:18,737:INFO:             autoviz: Not installed
2024-04-06 08:44:18,737:INFO:           fairlearn: Not installed
2024-04-06 08:44:18,737:INFO:          deepchecks: Not installed
2024-04-06 08:44:18,737:INFO:             xgboost: Not installed
2024-04-06 08:44:18,737:INFO:            catboost: Not installed
2024-04-06 08:44:18,737:INFO:              kmodes: Not installed
2024-04-06 08:44:18,737:INFO:             mlxtend: Not installed
2024-04-06 08:44:18,737:INFO:       statsforecast: Not installed
2024-04-06 08:44:18,737:INFO:        tune_sklearn: Not installed
2024-04-06 08:44:18,737:INFO:                 ray: Not installed
2024-04-06 08:44:18,737:INFO:            hyperopt: Not installed
2024-04-06 08:44:18,737:INFO:              optuna: Not installed
2024-04-06 08:44:18,737:INFO:               skopt: Not installed
2024-04-06 08:44:18,737:INFO:              mlflow: 2.11.3
2024-04-06 08:44:18,737:INFO:              gradio: Not installed
2024-04-06 08:44:18,737:INFO:             fastapi: Not installed
2024-04-06 08:44:18,737:INFO:             uvicorn: Not installed
2024-04-06 08:44:18,737:INFO:              m2cgen: Not installed
2024-04-06 08:44:18,737:INFO:           evidently: Not installed
2024-04-06 08:44:18,737:INFO:               fugue: Not installed
2024-04-06 08:44:18,737:INFO:           streamlit: 1.33.0
2024-04-06 08:44:18,737:INFO:             prophet: 1.1.5
2024-04-06 08:44:18,737:INFO:None
2024-04-06 08:44:18,737:INFO:Set up data.
2024-04-06 08:44:18,740:INFO:Set up folding strategy.
2024-04-06 08:44:18,740:INFO:Set up train/test split.
2024-04-06 08:44:18,740:INFO:Set up data.
2024-04-06 08:44:18,743:INFO:Set up index.
2024-04-06 08:44:18,743:INFO:Assigning column types.
2024-04-06 08:44:18,746:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 08:44:18,768:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 08:44:18,769:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:44:18,781:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:44:18,781:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:44:18,799:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 08:44:18,800:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:44:18,811:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:44:18,811:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:44:18,811:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 08:44:18,828:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:44:18,839:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:44:18,839:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:44:18,857:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:44:18,867:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:44:18,867:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:44:18,868:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 08:44:18,896:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:44:18,896:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:44:18,924:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:44:18,924:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:44:18,924:INFO:Preparing preprocessing pipeline...
2024-04-06 08:44:18,925:INFO:Set up simple imputation.
2024-04-06 08:44:18,925:INFO:Set up feature normalization.
2024-04-06 08:44:18,935:INFO:Finished creating preprocessing pipeline.
2024-04-06 08:44:18,936:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 08:44:18,936:INFO:Creating final display dataframe.
2024-04-06 08:44:18,965:INFO:Setup _display_container:                     Description             Value
0                    Session id              1866
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              5d3b
2024-04-06 08:44:18,997:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:44:18,997:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:44:19,026:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:44:19,026:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:44:19,026:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 08:44:19,027:INFO:setup() successfully completed in 0.29s...............
2024-04-06 08:44:19,027:INFO:Initializing compare_models()
2024-04-06 08:44:19,027:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x175170c10>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x175170c10>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 08:44:19,027:INFO:Checking exceptions
2024-04-06 08:44:19,029:INFO:Preparing display monitor
2024-04-06 08:44:19,036:INFO:Initializing Logistic Regression
2024-04-06 08:44:19,037:INFO:Total runtime is 2.368291219075521e-06 minutes
2024-04-06 08:44:19,038:INFO:SubProcess create_model() called ==================================
2024-04-06 08:44:19,038:INFO:Initializing create_model()
2024-04-06 08:44:19,038:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x175170c10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a831f10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:44:19,038:INFO:Checking exceptions
2024-04-06 08:44:19,038:INFO:Importing libraries
2024-04-06 08:44:19,039:INFO:Copying training dataset
2024-04-06 08:44:19,042:INFO:Defining folds
2024-04-06 08:44:19,042:INFO:Declaring metric variables
2024-04-06 08:44:19,043:INFO:Importing untrained model
2024-04-06 08:44:19,044:INFO:Logistic Regression Imported successfully
2024-04-06 08:44:19,048:INFO:Starting cross validation
2024-04-06 08:44:19,048:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 08:44:19,170:INFO:Calculating mean and std
2024-04-06 08:44:19,170:INFO:Creating metrics dataframe
2024-04-06 08:44:19,171:INFO:Uploading results into container
2024-04-06 08:44:19,171:INFO:Uploading model into container now
2024-04-06 08:44:19,171:INFO:_master_model_container: 1
2024-04-06 08:44:19,171:INFO:_display_container: 2
2024-04-06 08:44:19,171:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1866, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 08:44:19,171:INFO:create_model() successfully completed......................................
2024-04-06 08:44:19,243:INFO:SubProcess create_model() end ==================================
2024-04-06 08:44:19,243:INFO:Creating metrics dataframe
2024-04-06 08:44:19,245:INFO:Initializing Decision Tree Classifier
2024-04-06 08:44:19,245:INFO:Total runtime is 0.00347753365834554 minutes
2024-04-06 08:44:19,246:INFO:SubProcess create_model() called ==================================
2024-04-06 08:44:19,246:INFO:Initializing create_model()
2024-04-06 08:44:19,246:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x175170c10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a831f10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:44:19,246:INFO:Checking exceptions
2024-04-06 08:44:19,246:INFO:Importing libraries
2024-04-06 08:44:19,247:INFO:Copying training dataset
2024-04-06 08:44:19,249:INFO:Defining folds
2024-04-06 08:44:19,249:INFO:Declaring metric variables
2024-04-06 08:44:19,250:INFO:Importing untrained model
2024-04-06 08:44:19,251:INFO:Decision Tree Classifier Imported successfully
2024-04-06 08:44:19,253:INFO:Starting cross validation
2024-04-06 08:44:19,254:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 08:44:19,322:INFO:Calculating mean and std
2024-04-06 08:44:19,322:INFO:Creating metrics dataframe
2024-04-06 08:44:19,323:INFO:Uploading results into container
2024-04-06 08:44:19,323:INFO:Uploading model into container now
2024-04-06 08:44:19,323:INFO:_master_model_container: 2
2024-04-06 08:44:19,323:INFO:_display_container: 2
2024-04-06 08:44:19,323:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1866, splitter='best')
2024-04-06 08:44:19,324:INFO:create_model() successfully completed......................................
2024-04-06 08:44:19,390:INFO:SubProcess create_model() end ==================================
2024-04-06 08:44:19,390:INFO:Creating metrics dataframe
2024-04-06 08:44:19,393:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 08:44:19,397:INFO:Initializing create_model()
2024-04-06 08:44:19,397:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x175170c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1866, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:44:19,397:INFO:Checking exceptions
2024-04-06 08:44:19,398:INFO:Importing libraries
2024-04-06 08:44:19,399:INFO:Copying training dataset
2024-04-06 08:44:19,401:INFO:Defining folds
2024-04-06 08:44:19,401:INFO:Declaring metric variables
2024-04-06 08:44:19,401:INFO:Importing untrained model
2024-04-06 08:44:19,401:INFO:Declaring custom model
2024-04-06 08:44:19,401:INFO:Decision Tree Classifier Imported successfully
2024-04-06 08:44:19,402:INFO:Cross validation set to False
2024-04-06 08:44:19,402:INFO:Fitting Model
2024-04-06 08:44:19,415:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1866, splitter='best')
2024-04-06 08:44:19,415:INFO:create_model() successfully completed......................................
2024-04-06 08:44:19,488:INFO:Initializing create_model()
2024-04-06 08:44:19,488:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x175170c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1866, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:44:19,488:INFO:Checking exceptions
2024-04-06 08:44:19,489:INFO:Importing libraries
2024-04-06 08:44:19,489:INFO:Copying training dataset
2024-04-06 08:44:19,491:INFO:Defining folds
2024-04-06 08:44:19,491:INFO:Declaring metric variables
2024-04-06 08:44:19,491:INFO:Importing untrained model
2024-04-06 08:44:19,491:INFO:Declaring custom model
2024-04-06 08:44:19,492:INFO:Logistic Regression Imported successfully
2024-04-06 08:44:19,492:INFO:Cross validation set to False
2024-04-06 08:44:19,492:INFO:Fitting Model
2024-04-06 08:44:19,498:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1866, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 08:44:19,498:INFO:create_model() successfully completed......................................
2024-04-06 08:44:19,635:INFO:_master_model_container: 2
2024-04-06 08:44:19,635:INFO:_display_container: 2
2024-04-06 08:44:19,635:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1866, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1866, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-06 08:44:19,636:INFO:compare_models() successfully completed......................................
2024-04-06 08:44:19,636:INFO:Initializing predict_model()
2024-04-06 08:44:19,636:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x175170c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1866, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x173d1b600>)
2024-04-06 08:44:19,637:INFO:Checking exceptions
2024-04-06 08:44:19,637:INFO:Preloading libraries
2024-04-06 08:46:38,169:INFO:PyCaret ClassificationExperiment
2024-04-06 08:46:38,169:INFO:Logging name: clf-default-name
2024-04-06 08:46:38,169:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 08:46:38,169:INFO:version 3.3.0
2024-04-06 08:46:38,169:INFO:Initializing setup()
2024-04-06 08:46:38,169:INFO:self.USI: 7424
2024-04-06 08:46:38,169:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 08:46:38,169:INFO:Checking environment
2024-04-06 08:46:38,169:INFO:python_version: 3.11.3
2024-04-06 08:46:38,169:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 08:46:38,169:INFO:machine: arm64
2024-04-06 08:46:38,169:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:46:38,169:INFO:Memory: svmem(total=8589934592, available=2605776896, percent=69.7, used=3603415040, free=247791616, active=2378989568, inactive=2257043456, wired=1224425472)
2024-04-06 08:46:38,169:INFO:Physical Core: 8
2024-04-06 08:46:38,169:INFO:Logical Core: 8
2024-04-06 08:46:38,169:INFO:Checking libraries
2024-04-06 08:46:38,169:INFO:System:
2024-04-06 08:46:38,169:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 08:46:38,169:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 08:46:38,169:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:46:38,169:INFO:PyCaret required dependencies:
2024-04-06 08:46:38,169:INFO:                 pip: 24.0
2024-04-06 08:46:38,169:INFO:          setuptools: 65.5.0
2024-04-06 08:46:38,169:INFO:             pycaret: 3.3.0
2024-04-06 08:46:38,169:INFO:             IPython: 8.23.0
2024-04-06 08:46:38,169:INFO:          ipywidgets: 8.1.2
2024-04-06 08:46:38,169:INFO:                tqdm: 4.66.2
2024-04-06 08:46:38,169:INFO:               numpy: 1.26.4
2024-04-06 08:46:38,169:INFO:              pandas: 2.1.4
2024-04-06 08:46:38,169:INFO:              jinja2: 3.1.3
2024-04-06 08:46:38,169:INFO:               scipy: 1.11.4
2024-04-06 08:46:38,169:INFO:              joblib: 1.3.2
2024-04-06 08:46:38,169:INFO:             sklearn: 1.4.1.post1
2024-04-06 08:46:38,169:INFO:                pyod: 1.1.3
2024-04-06 08:46:38,169:INFO:            imblearn: 0.12.2
2024-04-06 08:46:38,169:INFO:   category_encoders: 2.6.3
2024-04-06 08:46:38,169:INFO:            lightgbm: 4.3.0
2024-04-06 08:46:38,170:INFO:               numba: 0.59.1
2024-04-06 08:46:38,170:INFO:            requests: 2.31.0
2024-04-06 08:46:38,170:INFO:          matplotlib: 3.7.5
2024-04-06 08:46:38,170:INFO:          scikitplot: 0.3.7
2024-04-06 08:46:38,170:INFO:         yellowbrick: 1.5
2024-04-06 08:46:38,170:INFO:              plotly: 5.20.0
2024-04-06 08:46:38,170:INFO:    plotly-resampler: Not installed
2024-04-06 08:46:38,170:INFO:             kaleido: 0.2.1
2024-04-06 08:46:38,170:INFO:           schemdraw: 0.15
2024-04-06 08:46:38,170:INFO:         statsmodels: 0.14.1
2024-04-06 08:46:38,170:INFO:              sktime: 0.28.0
2024-04-06 08:46:38,170:INFO:               tbats: 1.1.3
2024-04-06 08:46:38,170:INFO:            pmdarima: 2.0.4
2024-04-06 08:46:38,170:INFO:              psutil: 5.9.8
2024-04-06 08:46:38,170:INFO:          markupsafe: 2.1.5
2024-04-06 08:46:38,170:INFO:             pickle5: Not installed
2024-04-06 08:46:38,170:INFO:         cloudpickle: 3.0.0
2024-04-06 08:46:38,170:INFO:         deprecation: 2.1.0
2024-04-06 08:46:38,170:INFO:              xxhash: 3.4.1
2024-04-06 08:46:38,170:INFO:           wurlitzer: 3.0.3
2024-04-06 08:46:38,170:INFO:PyCaret optional dependencies:
2024-04-06 08:46:38,170:INFO:                shap: Not installed
2024-04-06 08:46:38,170:INFO:           interpret: Not installed
2024-04-06 08:46:38,170:INFO:                umap: Not installed
2024-04-06 08:46:38,170:INFO:     ydata_profiling: Not installed
2024-04-06 08:46:38,170:INFO:  explainerdashboard: Not installed
2024-04-06 08:46:38,170:INFO:             autoviz: Not installed
2024-04-06 08:46:38,170:INFO:           fairlearn: Not installed
2024-04-06 08:46:38,170:INFO:          deepchecks: Not installed
2024-04-06 08:46:38,170:INFO:             xgboost: Not installed
2024-04-06 08:46:38,170:INFO:            catboost: Not installed
2024-04-06 08:46:38,170:INFO:              kmodes: Not installed
2024-04-06 08:46:38,170:INFO:             mlxtend: Not installed
2024-04-06 08:46:38,170:INFO:       statsforecast: Not installed
2024-04-06 08:46:38,170:INFO:        tune_sklearn: Not installed
2024-04-06 08:46:38,170:INFO:                 ray: Not installed
2024-04-06 08:46:38,170:INFO:            hyperopt: Not installed
2024-04-06 08:46:38,170:INFO:              optuna: Not installed
2024-04-06 08:46:38,170:INFO:               skopt: Not installed
2024-04-06 08:46:38,170:INFO:              mlflow: 2.11.3
2024-04-06 08:46:38,170:INFO:              gradio: Not installed
2024-04-06 08:46:38,170:INFO:             fastapi: Not installed
2024-04-06 08:46:38,170:INFO:             uvicorn: Not installed
2024-04-06 08:46:38,170:INFO:              m2cgen: Not installed
2024-04-06 08:46:38,170:INFO:           evidently: Not installed
2024-04-06 08:46:38,170:INFO:               fugue: Not installed
2024-04-06 08:46:38,170:INFO:           streamlit: 1.33.0
2024-04-06 08:46:38,170:INFO:             prophet: 1.1.5
2024-04-06 08:46:38,170:INFO:None
2024-04-06 08:46:38,170:INFO:Set up data.
2024-04-06 08:46:38,172:INFO:Set up folding strategy.
2024-04-06 08:46:38,172:INFO:Set up train/test split.
2024-04-06 08:46:38,172:INFO:Set up data.
2024-04-06 08:49:03,684:INFO:PyCaret ClassificationExperiment
2024-04-06 08:49:03,684:INFO:Logging name: clf-default-name
2024-04-06 08:49:03,684:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 08:49:03,684:INFO:version 3.3.0
2024-04-06 08:49:03,684:INFO:Initializing setup()
2024-04-06 08:49:03,684:INFO:self.USI: f747
2024-04-06 08:49:03,684:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 08:49:03,684:INFO:Checking environment
2024-04-06 08:49:03,684:INFO:python_version: 3.11.3
2024-04-06 08:49:03,684:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 08:49:03,684:INFO:machine: arm64
2024-04-06 08:49:03,684:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:49:03,685:INFO:Memory: svmem(total=8589934592, available=2580496384, percent=70.0, used=3731406848, free=93011968, active=2482159616, inactive=2481733632, wired=1249247232)
2024-04-06 08:49:03,685:INFO:Physical Core: 8
2024-04-06 08:49:03,685:INFO:Logical Core: 8
2024-04-06 08:49:03,685:INFO:Checking libraries
2024-04-06 08:49:03,685:INFO:System:
2024-04-06 08:49:03,685:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 08:49:03,685:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 08:49:03,685:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:49:03,685:INFO:PyCaret required dependencies:
2024-04-06 08:49:03,685:INFO:                 pip: 24.0
2024-04-06 08:49:03,685:INFO:          setuptools: 65.5.0
2024-04-06 08:49:03,685:INFO:             pycaret: 3.3.0
2024-04-06 08:49:03,685:INFO:             IPython: 8.23.0
2024-04-06 08:49:03,685:INFO:          ipywidgets: 8.1.2
2024-04-06 08:49:03,685:INFO:                tqdm: 4.66.2
2024-04-06 08:49:03,685:INFO:               numpy: 1.26.4
2024-04-06 08:49:03,685:INFO:              pandas: 2.1.4
2024-04-06 08:49:03,685:INFO:              jinja2: 3.1.3
2024-04-06 08:49:03,685:INFO:               scipy: 1.11.4
2024-04-06 08:49:03,685:INFO:              joblib: 1.3.2
2024-04-06 08:49:03,685:INFO:             sklearn: 1.4.1.post1
2024-04-06 08:49:03,685:INFO:                pyod: 1.1.3
2024-04-06 08:49:03,685:INFO:            imblearn: 0.12.2
2024-04-06 08:49:03,685:INFO:   category_encoders: 2.6.3
2024-04-06 08:49:03,685:INFO:            lightgbm: 4.3.0
2024-04-06 08:49:03,685:INFO:               numba: 0.59.1
2024-04-06 08:49:03,685:INFO:            requests: 2.31.0
2024-04-06 08:49:03,685:INFO:          matplotlib: 3.7.5
2024-04-06 08:49:03,685:INFO:          scikitplot: 0.3.7
2024-04-06 08:49:03,685:INFO:         yellowbrick: 1.5
2024-04-06 08:49:03,685:INFO:              plotly: 5.20.0
2024-04-06 08:49:03,685:INFO:    plotly-resampler: Not installed
2024-04-06 08:49:03,685:INFO:             kaleido: 0.2.1
2024-04-06 08:49:03,685:INFO:           schemdraw: 0.15
2024-04-06 08:49:03,685:INFO:         statsmodels: 0.14.1
2024-04-06 08:49:03,685:INFO:              sktime: 0.28.0
2024-04-06 08:49:03,685:INFO:               tbats: 1.1.3
2024-04-06 08:49:03,685:INFO:            pmdarima: 2.0.4
2024-04-06 08:49:03,685:INFO:              psutil: 5.9.8
2024-04-06 08:49:03,685:INFO:          markupsafe: 2.1.5
2024-04-06 08:49:03,685:INFO:             pickle5: Not installed
2024-04-06 08:49:03,685:INFO:         cloudpickle: 3.0.0
2024-04-06 08:49:03,685:INFO:         deprecation: 2.1.0
2024-04-06 08:49:03,685:INFO:              xxhash: 3.4.1
2024-04-06 08:49:03,685:INFO:           wurlitzer: 3.0.3
2024-04-06 08:49:03,685:INFO:PyCaret optional dependencies:
2024-04-06 08:49:03,685:INFO:                shap: Not installed
2024-04-06 08:49:03,685:INFO:           interpret: Not installed
2024-04-06 08:49:03,685:INFO:                umap: Not installed
2024-04-06 08:49:03,686:INFO:     ydata_profiling: Not installed
2024-04-06 08:49:03,686:INFO:  explainerdashboard: Not installed
2024-04-06 08:49:03,686:INFO:             autoviz: Not installed
2024-04-06 08:49:03,686:INFO:           fairlearn: Not installed
2024-04-06 08:49:03,686:INFO:          deepchecks: Not installed
2024-04-06 08:49:03,686:INFO:             xgboost: Not installed
2024-04-06 08:49:03,686:INFO:            catboost: Not installed
2024-04-06 08:49:03,686:INFO:              kmodes: Not installed
2024-04-06 08:49:03,686:INFO:             mlxtend: Not installed
2024-04-06 08:49:03,686:INFO:       statsforecast: Not installed
2024-04-06 08:49:03,686:INFO:        tune_sklearn: Not installed
2024-04-06 08:49:03,686:INFO:                 ray: Not installed
2024-04-06 08:49:03,686:INFO:            hyperopt: Not installed
2024-04-06 08:49:03,686:INFO:              optuna: Not installed
2024-04-06 08:49:03,686:INFO:               skopt: Not installed
2024-04-06 08:49:03,686:INFO:              mlflow: 2.11.3
2024-04-06 08:49:03,686:INFO:              gradio: Not installed
2024-04-06 08:49:03,686:INFO:             fastapi: Not installed
2024-04-06 08:49:03,686:INFO:             uvicorn: Not installed
2024-04-06 08:49:03,686:INFO:              m2cgen: Not installed
2024-04-06 08:49:03,686:INFO:           evidently: Not installed
2024-04-06 08:49:03,686:INFO:               fugue: Not installed
2024-04-06 08:49:03,686:INFO:           streamlit: 1.33.0
2024-04-06 08:49:03,686:INFO:             prophet: 1.1.5
2024-04-06 08:49:03,686:INFO:None
2024-04-06 08:49:03,686:INFO:Set up data.
2024-04-06 08:49:03,689:INFO:Set up folding strategy.
2024-04-06 08:49:03,689:INFO:Set up train/test split.
2024-04-06 08:49:03,689:INFO:Set up data.
2024-04-06 08:49:11,410:INFO:PyCaret ClassificationExperiment
2024-04-06 08:49:11,410:INFO:Logging name: clf-default-name
2024-04-06 08:49:11,410:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 08:49:11,410:INFO:version 3.3.0
2024-04-06 08:49:11,410:INFO:Initializing setup()
2024-04-06 08:49:11,410:INFO:self.USI: 2ca0
2024-04-06 08:49:11,410:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 08:49:11,410:INFO:Checking environment
2024-04-06 08:49:11,410:INFO:python_version: 3.11.3
2024-04-06 08:49:11,410:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 08:49:11,411:INFO:machine: arm64
2024-04-06 08:49:11,411:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:49:11,411:INFO:Memory: svmem(total=8589934592, available=2564653056, percent=70.1, used=3750395904, free=71942144, active=2508095488, inactive=2479521792, wired=1242300416)
2024-04-06 08:49:11,411:INFO:Physical Core: 8
2024-04-06 08:49:11,411:INFO:Logical Core: 8
2024-04-06 08:49:11,411:INFO:Checking libraries
2024-04-06 08:49:11,411:INFO:System:
2024-04-06 08:49:11,411:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 08:49:11,411:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 08:49:11,411:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:49:11,411:INFO:PyCaret required dependencies:
2024-04-06 08:49:11,411:INFO:                 pip: 24.0
2024-04-06 08:49:11,411:INFO:          setuptools: 65.5.0
2024-04-06 08:49:11,411:INFO:             pycaret: 3.3.0
2024-04-06 08:49:11,411:INFO:             IPython: 8.23.0
2024-04-06 08:49:11,411:INFO:          ipywidgets: 8.1.2
2024-04-06 08:49:11,411:INFO:                tqdm: 4.66.2
2024-04-06 08:49:11,411:INFO:               numpy: 1.26.4
2024-04-06 08:49:11,411:INFO:              pandas: 2.1.4
2024-04-06 08:49:11,411:INFO:              jinja2: 3.1.3
2024-04-06 08:49:11,411:INFO:               scipy: 1.11.4
2024-04-06 08:49:11,411:INFO:              joblib: 1.3.2
2024-04-06 08:49:11,411:INFO:             sklearn: 1.4.1.post1
2024-04-06 08:49:11,411:INFO:                pyod: 1.1.3
2024-04-06 08:49:11,411:INFO:            imblearn: 0.12.2
2024-04-06 08:49:11,411:INFO:   category_encoders: 2.6.3
2024-04-06 08:49:11,411:INFO:            lightgbm: 4.3.0
2024-04-06 08:49:11,411:INFO:               numba: 0.59.1
2024-04-06 08:49:11,411:INFO:            requests: 2.31.0
2024-04-06 08:49:11,411:INFO:          matplotlib: 3.7.5
2024-04-06 08:49:11,411:INFO:          scikitplot: 0.3.7
2024-04-06 08:49:11,411:INFO:         yellowbrick: 1.5
2024-04-06 08:49:11,411:INFO:              plotly: 5.20.0
2024-04-06 08:49:11,411:INFO:    plotly-resampler: Not installed
2024-04-06 08:49:11,411:INFO:             kaleido: 0.2.1
2024-04-06 08:49:11,411:INFO:           schemdraw: 0.15
2024-04-06 08:49:11,411:INFO:         statsmodels: 0.14.1
2024-04-06 08:49:11,411:INFO:              sktime: 0.28.0
2024-04-06 08:49:11,411:INFO:               tbats: 1.1.3
2024-04-06 08:49:11,411:INFO:            pmdarima: 2.0.4
2024-04-06 08:49:11,411:INFO:              psutil: 5.9.8
2024-04-06 08:49:11,412:INFO:          markupsafe: 2.1.5
2024-04-06 08:49:11,412:INFO:             pickle5: Not installed
2024-04-06 08:49:11,412:INFO:         cloudpickle: 3.0.0
2024-04-06 08:49:11,412:INFO:         deprecation: 2.1.0
2024-04-06 08:49:11,412:INFO:              xxhash: 3.4.1
2024-04-06 08:49:11,412:INFO:           wurlitzer: 3.0.3
2024-04-06 08:49:11,412:INFO:PyCaret optional dependencies:
2024-04-06 08:49:11,412:INFO:                shap: Not installed
2024-04-06 08:49:11,412:INFO:           interpret: Not installed
2024-04-06 08:49:11,412:INFO:                umap: Not installed
2024-04-06 08:49:11,412:INFO:     ydata_profiling: Not installed
2024-04-06 08:49:11,412:INFO:  explainerdashboard: Not installed
2024-04-06 08:49:11,412:INFO:             autoviz: Not installed
2024-04-06 08:49:11,412:INFO:           fairlearn: Not installed
2024-04-06 08:49:11,412:INFO:          deepchecks: Not installed
2024-04-06 08:49:11,412:INFO:             xgboost: Not installed
2024-04-06 08:49:11,412:INFO:            catboost: Not installed
2024-04-06 08:49:11,412:INFO:              kmodes: Not installed
2024-04-06 08:49:11,412:INFO:             mlxtend: Not installed
2024-04-06 08:49:11,412:INFO:       statsforecast: Not installed
2024-04-06 08:49:11,412:INFO:        tune_sklearn: Not installed
2024-04-06 08:49:11,412:INFO:                 ray: Not installed
2024-04-06 08:49:11,412:INFO:            hyperopt: Not installed
2024-04-06 08:49:11,412:INFO:              optuna: Not installed
2024-04-06 08:49:11,412:INFO:               skopt: Not installed
2024-04-06 08:49:11,412:INFO:              mlflow: 2.11.3
2024-04-06 08:49:11,412:INFO:              gradio: Not installed
2024-04-06 08:49:11,412:INFO:             fastapi: Not installed
2024-04-06 08:49:11,412:INFO:             uvicorn: Not installed
2024-04-06 08:49:11,412:INFO:              m2cgen: Not installed
2024-04-06 08:49:11,412:INFO:           evidently: Not installed
2024-04-06 08:49:11,412:INFO:               fugue: Not installed
2024-04-06 08:49:11,412:INFO:           streamlit: 1.33.0
2024-04-06 08:49:11,412:INFO:             prophet: 1.1.5
2024-04-06 08:49:11,412:INFO:None
2024-04-06 08:49:11,412:INFO:Set up data.
2024-04-06 08:49:11,415:INFO:Set up folding strategy.
2024-04-06 08:49:11,416:INFO:Set up train/test split.
2024-04-06 08:49:11,416:INFO:Set up data.
2024-04-06 08:50:19,356:INFO:PyCaret ClassificationExperiment
2024-04-06 08:50:19,356:INFO:Logging name: clf-default-name
2024-04-06 08:50:19,356:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 08:50:19,356:INFO:version 3.3.0
2024-04-06 08:50:19,356:INFO:Initializing setup()
2024-04-06 08:50:19,356:INFO:self.USI: 7baa
2024-04-06 08:50:19,356:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 08:50:19,356:INFO:Checking environment
2024-04-06 08:50:19,356:INFO:python_version: 3.11.3
2024-04-06 08:50:19,356:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 08:50:19,356:INFO:machine: arm64
2024-04-06 08:50:19,356:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:50:19,356:INFO:Memory: svmem(total=8589934592, available=2588934144, percent=69.9, used=3739172864, free=122044416, active=2473803776, inactive=2453274624, wired=1265369088)
2024-04-06 08:50:19,356:INFO:Physical Core: 8
2024-04-06 08:50:19,356:INFO:Logical Core: 8
2024-04-06 08:50:19,356:INFO:Checking libraries
2024-04-06 08:50:19,356:INFO:System:
2024-04-06 08:50:19,356:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 08:50:19,356:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 08:50:19,356:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:50:19,356:INFO:PyCaret required dependencies:
2024-04-06 08:50:19,356:INFO:                 pip: 24.0
2024-04-06 08:50:19,356:INFO:          setuptools: 65.5.0
2024-04-06 08:50:19,357:INFO:             pycaret: 3.3.0
2024-04-06 08:50:19,357:INFO:             IPython: 8.23.0
2024-04-06 08:50:19,357:INFO:          ipywidgets: 8.1.2
2024-04-06 08:50:19,357:INFO:                tqdm: 4.66.2
2024-04-06 08:50:19,357:INFO:               numpy: 1.26.4
2024-04-06 08:50:19,357:INFO:              pandas: 2.1.4
2024-04-06 08:50:19,357:INFO:              jinja2: 3.1.3
2024-04-06 08:50:19,357:INFO:               scipy: 1.11.4
2024-04-06 08:50:19,357:INFO:              joblib: 1.3.2
2024-04-06 08:50:19,357:INFO:             sklearn: 1.4.1.post1
2024-04-06 08:50:19,357:INFO:                pyod: 1.1.3
2024-04-06 08:50:19,357:INFO:            imblearn: 0.12.2
2024-04-06 08:50:19,357:INFO:   category_encoders: 2.6.3
2024-04-06 08:50:19,357:INFO:            lightgbm: 4.3.0
2024-04-06 08:50:19,357:INFO:               numba: 0.59.1
2024-04-06 08:50:19,357:INFO:            requests: 2.31.0
2024-04-06 08:50:19,357:INFO:          matplotlib: 3.7.5
2024-04-06 08:50:19,357:INFO:          scikitplot: 0.3.7
2024-04-06 08:50:19,357:INFO:         yellowbrick: 1.5
2024-04-06 08:50:19,357:INFO:              plotly: 5.20.0
2024-04-06 08:50:19,357:INFO:    plotly-resampler: Not installed
2024-04-06 08:50:19,357:INFO:             kaleido: 0.2.1
2024-04-06 08:50:19,357:INFO:           schemdraw: 0.15
2024-04-06 08:50:19,357:INFO:         statsmodels: 0.14.1
2024-04-06 08:50:19,357:INFO:              sktime: 0.28.0
2024-04-06 08:50:19,357:INFO:               tbats: 1.1.3
2024-04-06 08:50:19,357:INFO:            pmdarima: 2.0.4
2024-04-06 08:50:19,357:INFO:              psutil: 5.9.8
2024-04-06 08:50:19,357:INFO:          markupsafe: 2.1.5
2024-04-06 08:50:19,357:INFO:             pickle5: Not installed
2024-04-06 08:50:19,357:INFO:         cloudpickle: 3.0.0
2024-04-06 08:50:19,357:INFO:         deprecation: 2.1.0
2024-04-06 08:50:19,357:INFO:              xxhash: 3.4.1
2024-04-06 08:50:19,357:INFO:           wurlitzer: 3.0.3
2024-04-06 08:50:19,357:INFO:PyCaret optional dependencies:
2024-04-06 08:50:19,357:INFO:                shap: Not installed
2024-04-06 08:50:19,357:INFO:           interpret: Not installed
2024-04-06 08:50:19,357:INFO:                umap: Not installed
2024-04-06 08:50:19,357:INFO:     ydata_profiling: Not installed
2024-04-06 08:50:19,357:INFO:  explainerdashboard: Not installed
2024-04-06 08:50:19,357:INFO:             autoviz: Not installed
2024-04-06 08:50:19,357:INFO:           fairlearn: Not installed
2024-04-06 08:50:19,357:INFO:          deepchecks: Not installed
2024-04-06 08:50:19,357:INFO:             xgboost: Not installed
2024-04-06 08:50:19,357:INFO:            catboost: Not installed
2024-04-06 08:50:19,357:INFO:              kmodes: Not installed
2024-04-06 08:50:19,357:INFO:             mlxtend: Not installed
2024-04-06 08:50:19,357:INFO:       statsforecast: Not installed
2024-04-06 08:50:19,357:INFO:        tune_sklearn: Not installed
2024-04-06 08:50:19,357:INFO:                 ray: Not installed
2024-04-06 08:50:19,357:INFO:            hyperopt: Not installed
2024-04-06 08:50:19,357:INFO:              optuna: Not installed
2024-04-06 08:50:19,357:INFO:               skopt: Not installed
2024-04-06 08:50:19,357:INFO:              mlflow: 2.11.3
2024-04-06 08:50:19,357:INFO:              gradio: Not installed
2024-04-06 08:50:19,357:INFO:             fastapi: Not installed
2024-04-06 08:50:19,357:INFO:             uvicorn: Not installed
2024-04-06 08:50:19,357:INFO:              m2cgen: Not installed
2024-04-06 08:50:19,357:INFO:           evidently: Not installed
2024-04-06 08:50:19,357:INFO:               fugue: Not installed
2024-04-06 08:50:19,357:INFO:           streamlit: 1.33.0
2024-04-06 08:50:19,357:INFO:             prophet: 1.1.5
2024-04-06 08:50:19,358:INFO:None
2024-04-06 08:50:19,358:INFO:Set up data.
2024-04-06 08:50:19,360:INFO:Set up folding strategy.
2024-04-06 08:50:19,360:INFO:Set up train/test split.
2024-04-06 08:50:19,360:INFO:Set up data.
2024-04-06 08:50:58,403:INFO:PyCaret ClassificationExperiment
2024-04-06 08:50:58,403:INFO:Logging name: clf-default-name
2024-04-06 08:50:58,403:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 08:50:58,403:INFO:version 3.3.0
2024-04-06 08:50:58,403:INFO:Initializing setup()
2024-04-06 08:50:58,403:INFO:self.USI: fdf0
2024-04-06 08:50:58,403:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 08:50:58,403:INFO:Checking environment
2024-04-06 08:50:58,403:INFO:python_version: 3.11.3
2024-04-06 08:50:58,403:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 08:50:58,403:INFO:machine: arm64
2024-04-06 08:50:58,403:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:50:58,403:INFO:Memory: svmem(total=8589934592, available=2596700160, percent=69.8, used=3726082048, free=138592256, active=2466693120, inactive=2455437312, wired=1259388928)
2024-04-06 08:50:58,403:INFO:Physical Core: 8
2024-04-06 08:50:58,403:INFO:Logical Core: 8
2024-04-06 08:50:58,403:INFO:Checking libraries
2024-04-06 08:50:58,403:INFO:System:
2024-04-06 08:50:58,403:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 08:50:58,403:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 08:50:58,403:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:50:58,403:INFO:PyCaret required dependencies:
2024-04-06 08:50:58,403:INFO:                 pip: 24.0
2024-04-06 08:50:58,403:INFO:          setuptools: 65.5.0
2024-04-06 08:50:58,403:INFO:             pycaret: 3.3.0
2024-04-06 08:50:58,404:INFO:             IPython: 8.23.0
2024-04-06 08:50:58,404:INFO:          ipywidgets: 8.1.2
2024-04-06 08:50:58,404:INFO:                tqdm: 4.66.2
2024-04-06 08:50:58,404:INFO:               numpy: 1.26.4
2024-04-06 08:50:58,404:INFO:              pandas: 2.1.4
2024-04-06 08:50:58,404:INFO:              jinja2: 3.1.3
2024-04-06 08:50:58,404:INFO:               scipy: 1.11.4
2024-04-06 08:50:58,404:INFO:              joblib: 1.3.2
2024-04-06 08:50:58,404:INFO:             sklearn: 1.4.1.post1
2024-04-06 08:50:58,404:INFO:                pyod: 1.1.3
2024-04-06 08:50:58,404:INFO:            imblearn: 0.12.2
2024-04-06 08:50:58,404:INFO:   category_encoders: 2.6.3
2024-04-06 08:50:58,404:INFO:            lightgbm: 4.3.0
2024-04-06 08:50:58,404:INFO:               numba: 0.59.1
2024-04-06 08:50:58,404:INFO:            requests: 2.31.0
2024-04-06 08:50:58,404:INFO:          matplotlib: 3.7.5
2024-04-06 08:50:58,404:INFO:          scikitplot: 0.3.7
2024-04-06 08:50:58,404:INFO:         yellowbrick: 1.5
2024-04-06 08:50:58,404:INFO:              plotly: 5.20.0
2024-04-06 08:50:58,404:INFO:    plotly-resampler: Not installed
2024-04-06 08:50:58,404:INFO:             kaleido: 0.2.1
2024-04-06 08:50:58,404:INFO:           schemdraw: 0.15
2024-04-06 08:50:58,404:INFO:         statsmodels: 0.14.1
2024-04-06 08:50:58,404:INFO:              sktime: 0.28.0
2024-04-06 08:50:58,404:INFO:               tbats: 1.1.3
2024-04-06 08:50:58,404:INFO:            pmdarima: 2.0.4
2024-04-06 08:50:58,404:INFO:              psutil: 5.9.8
2024-04-06 08:50:58,404:INFO:          markupsafe: 2.1.5
2024-04-06 08:50:58,404:INFO:             pickle5: Not installed
2024-04-06 08:50:58,404:INFO:         cloudpickle: 3.0.0
2024-04-06 08:50:58,404:INFO:         deprecation: 2.1.0
2024-04-06 08:50:58,404:INFO:              xxhash: 3.4.1
2024-04-06 08:50:58,404:INFO:           wurlitzer: 3.0.3
2024-04-06 08:50:58,404:INFO:PyCaret optional dependencies:
2024-04-06 08:50:58,404:INFO:                shap: Not installed
2024-04-06 08:50:58,404:INFO:           interpret: Not installed
2024-04-06 08:50:58,404:INFO:                umap: Not installed
2024-04-06 08:50:58,404:INFO:     ydata_profiling: Not installed
2024-04-06 08:50:58,404:INFO:  explainerdashboard: Not installed
2024-04-06 08:50:58,404:INFO:             autoviz: Not installed
2024-04-06 08:50:58,404:INFO:           fairlearn: Not installed
2024-04-06 08:50:58,404:INFO:          deepchecks: Not installed
2024-04-06 08:50:58,404:INFO:             xgboost: Not installed
2024-04-06 08:50:58,404:INFO:            catboost: Not installed
2024-04-06 08:50:58,404:INFO:              kmodes: Not installed
2024-04-06 08:50:58,404:INFO:             mlxtend: Not installed
2024-04-06 08:50:58,404:INFO:       statsforecast: Not installed
2024-04-06 08:50:58,404:INFO:        tune_sklearn: Not installed
2024-04-06 08:50:58,404:INFO:                 ray: Not installed
2024-04-06 08:50:58,404:INFO:            hyperopt: Not installed
2024-04-06 08:50:58,404:INFO:              optuna: Not installed
2024-04-06 08:50:58,404:INFO:               skopt: Not installed
2024-04-06 08:50:58,404:INFO:              mlflow: 2.11.3
2024-04-06 08:50:58,404:INFO:              gradio: Not installed
2024-04-06 08:50:58,404:INFO:             fastapi: Not installed
2024-04-06 08:50:58,405:INFO:             uvicorn: Not installed
2024-04-06 08:50:58,405:INFO:              m2cgen: Not installed
2024-04-06 08:50:58,405:INFO:           evidently: Not installed
2024-04-06 08:50:58,405:INFO:               fugue: Not installed
2024-04-06 08:50:58,405:INFO:           streamlit: 1.33.0
2024-04-06 08:50:58,405:INFO:             prophet: 1.1.5
2024-04-06 08:50:58,405:INFO:None
2024-04-06 08:50:58,405:INFO:Set up data.
2024-04-06 08:50:58,407:INFO:Set up folding strategy.
2024-04-06 08:50:58,407:INFO:Set up train/test split.
2024-04-06 08:50:58,407:INFO:Set up data.
2024-04-06 08:51:14,048:INFO:PyCaret ClassificationExperiment
2024-04-06 08:51:14,048:INFO:Logging name: clf-default-name
2024-04-06 08:51:14,048:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 08:51:14,048:INFO:version 3.3.0
2024-04-06 08:51:14,048:INFO:Initializing setup()
2024-04-06 08:51:14,048:INFO:self.USI: a01e
2024-04-06 08:51:14,048:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 08:51:14,048:INFO:Checking environment
2024-04-06 08:51:14,048:INFO:python_version: 3.11.3
2024-04-06 08:51:14,048:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 08:51:14,048:INFO:machine: arm64
2024-04-06 08:51:14,048:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:51:14,048:INFO:Memory: svmem(total=8589934592, available=2582528000, percent=69.9, used=3745284096, free=93257728, active=2497134592, inactive=2483896320, wired=1248149504)
2024-04-06 08:51:14,048:INFO:Physical Core: 8
2024-04-06 08:51:14,048:INFO:Logical Core: 8
2024-04-06 08:51:14,048:INFO:Checking libraries
2024-04-06 08:51:14,048:INFO:System:
2024-04-06 08:51:14,048:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 08:51:14,048:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 08:51:14,048:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:51:14,048:INFO:PyCaret required dependencies:
2024-04-06 08:51:14,048:INFO:                 pip: 24.0
2024-04-06 08:51:14,048:INFO:          setuptools: 65.5.0
2024-04-06 08:51:14,048:INFO:             pycaret: 3.3.0
2024-04-06 08:51:14,048:INFO:             IPython: 8.23.0
2024-04-06 08:51:14,049:INFO:          ipywidgets: 8.1.2
2024-04-06 08:51:14,049:INFO:                tqdm: 4.66.2
2024-04-06 08:51:14,049:INFO:               numpy: 1.26.4
2024-04-06 08:51:14,049:INFO:              pandas: 2.1.4
2024-04-06 08:51:14,049:INFO:              jinja2: 3.1.3
2024-04-06 08:51:14,049:INFO:               scipy: 1.11.4
2024-04-06 08:51:14,049:INFO:              joblib: 1.3.2
2024-04-06 08:51:14,049:INFO:             sklearn: 1.4.1.post1
2024-04-06 08:51:14,049:INFO:                pyod: 1.1.3
2024-04-06 08:51:14,049:INFO:            imblearn: 0.12.2
2024-04-06 08:51:14,049:INFO:   category_encoders: 2.6.3
2024-04-06 08:51:14,049:INFO:            lightgbm: 4.3.0
2024-04-06 08:51:14,049:INFO:               numba: 0.59.1
2024-04-06 08:51:14,049:INFO:            requests: 2.31.0
2024-04-06 08:51:14,049:INFO:          matplotlib: 3.7.5
2024-04-06 08:51:14,049:INFO:          scikitplot: 0.3.7
2024-04-06 08:51:14,049:INFO:         yellowbrick: 1.5
2024-04-06 08:51:14,049:INFO:              plotly: 5.20.0
2024-04-06 08:51:14,049:INFO:    plotly-resampler: Not installed
2024-04-06 08:51:14,049:INFO:             kaleido: 0.2.1
2024-04-06 08:51:14,049:INFO:           schemdraw: 0.15
2024-04-06 08:51:14,049:INFO:         statsmodels: 0.14.1
2024-04-06 08:51:14,049:INFO:              sktime: 0.28.0
2024-04-06 08:51:14,049:INFO:               tbats: 1.1.3
2024-04-06 08:51:14,049:INFO:            pmdarima: 2.0.4
2024-04-06 08:51:14,049:INFO:              psutil: 5.9.8
2024-04-06 08:51:14,049:INFO:          markupsafe: 2.1.5
2024-04-06 08:51:14,049:INFO:             pickle5: Not installed
2024-04-06 08:51:14,049:INFO:         cloudpickle: 3.0.0
2024-04-06 08:51:14,049:INFO:         deprecation: 2.1.0
2024-04-06 08:51:14,049:INFO:              xxhash: 3.4.1
2024-04-06 08:51:14,049:INFO:           wurlitzer: 3.0.3
2024-04-06 08:51:14,049:INFO:PyCaret optional dependencies:
2024-04-06 08:51:14,049:INFO:                shap: Not installed
2024-04-06 08:51:14,049:INFO:           interpret: Not installed
2024-04-06 08:51:14,049:INFO:                umap: Not installed
2024-04-06 08:51:14,049:INFO:     ydata_profiling: Not installed
2024-04-06 08:51:14,049:INFO:  explainerdashboard: Not installed
2024-04-06 08:51:14,049:INFO:             autoviz: Not installed
2024-04-06 08:51:14,049:INFO:           fairlearn: Not installed
2024-04-06 08:51:14,049:INFO:          deepchecks: Not installed
2024-04-06 08:51:14,049:INFO:             xgboost: Not installed
2024-04-06 08:51:14,049:INFO:            catboost: Not installed
2024-04-06 08:51:14,049:INFO:              kmodes: Not installed
2024-04-06 08:51:14,049:INFO:             mlxtend: Not installed
2024-04-06 08:51:14,049:INFO:       statsforecast: Not installed
2024-04-06 08:51:14,050:INFO:        tune_sklearn: Not installed
2024-04-06 08:51:14,050:INFO:                 ray: Not installed
2024-04-06 08:51:14,050:INFO:            hyperopt: Not installed
2024-04-06 08:51:14,050:INFO:              optuna: Not installed
2024-04-06 08:51:14,050:INFO:               skopt: Not installed
2024-04-06 08:51:14,050:INFO:              mlflow: 2.11.3
2024-04-06 08:51:14,050:INFO:              gradio: Not installed
2024-04-06 08:51:14,050:INFO:             fastapi: Not installed
2024-04-06 08:51:14,050:INFO:             uvicorn: Not installed
2024-04-06 08:51:14,050:INFO:              m2cgen: Not installed
2024-04-06 08:51:14,050:INFO:           evidently: Not installed
2024-04-06 08:51:14,050:INFO:               fugue: Not installed
2024-04-06 08:51:14,050:INFO:           streamlit: 1.33.0
2024-04-06 08:51:14,050:INFO:             prophet: 1.1.5
2024-04-06 08:51:14,050:INFO:None
2024-04-06 08:51:14,050:INFO:Set up data.
2024-04-06 08:51:14,053:INFO:Set up folding strategy.
2024-04-06 08:51:14,053:INFO:Set up train/test split.
2024-04-06 08:51:14,053:INFO:Set up data.
2024-04-06 08:51:25,286:INFO:PyCaret ClassificationExperiment
2024-04-06 08:51:25,286:INFO:Logging name: clf-default-name
2024-04-06 08:51:25,286:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 08:51:25,286:INFO:version 3.3.0
2024-04-06 08:51:25,286:INFO:Initializing setup()
2024-04-06 08:51:25,286:INFO:self.USI: fde9
2024-04-06 08:51:25,286:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 08:51:25,286:INFO:Checking environment
2024-04-06 08:51:25,286:INFO:python_version: 3.11.3
2024-04-06 08:51:25,286:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 08:51:25,286:INFO:machine: arm64
2024-04-06 08:51:25,286:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:51:25,286:INFO:Memory: svmem(total=8589934592, available=2561916928, percent=70.2, used=3767189504, free=65175552, active=2509963264, inactive=2490269696, wired=1257226240)
2024-04-06 08:51:25,286:INFO:Physical Core: 8
2024-04-06 08:51:25,286:INFO:Logical Core: 8
2024-04-06 08:51:25,286:INFO:Checking libraries
2024-04-06 08:51:25,286:INFO:System:
2024-04-06 08:51:25,286:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 08:51:25,286:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 08:51:25,286:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:51:25,286:INFO:PyCaret required dependencies:
2024-04-06 08:51:25,287:INFO:                 pip: 24.0
2024-04-06 08:51:25,287:INFO:          setuptools: 65.5.0
2024-04-06 08:51:25,287:INFO:             pycaret: 3.3.0
2024-04-06 08:51:25,287:INFO:             IPython: 8.23.0
2024-04-06 08:51:25,287:INFO:          ipywidgets: 8.1.2
2024-04-06 08:51:25,287:INFO:                tqdm: 4.66.2
2024-04-06 08:51:25,287:INFO:               numpy: 1.26.4
2024-04-06 08:51:25,287:INFO:              pandas: 2.1.4
2024-04-06 08:51:25,287:INFO:              jinja2: 3.1.3
2024-04-06 08:51:25,287:INFO:               scipy: 1.11.4
2024-04-06 08:51:25,287:INFO:              joblib: 1.3.2
2024-04-06 08:51:25,287:INFO:             sklearn: 1.4.1.post1
2024-04-06 08:51:25,287:INFO:                pyod: 1.1.3
2024-04-06 08:51:25,287:INFO:            imblearn: 0.12.2
2024-04-06 08:51:25,287:INFO:   category_encoders: 2.6.3
2024-04-06 08:51:25,287:INFO:            lightgbm: 4.3.0
2024-04-06 08:51:25,287:INFO:               numba: 0.59.1
2024-04-06 08:51:25,287:INFO:            requests: 2.31.0
2024-04-06 08:51:25,287:INFO:          matplotlib: 3.7.5
2024-04-06 08:51:25,287:INFO:          scikitplot: 0.3.7
2024-04-06 08:51:25,287:INFO:         yellowbrick: 1.5
2024-04-06 08:51:25,287:INFO:              plotly: 5.20.0
2024-04-06 08:51:25,287:INFO:    plotly-resampler: Not installed
2024-04-06 08:51:25,287:INFO:             kaleido: 0.2.1
2024-04-06 08:51:25,287:INFO:           schemdraw: 0.15
2024-04-06 08:51:25,287:INFO:         statsmodels: 0.14.1
2024-04-06 08:51:25,287:INFO:              sktime: 0.28.0
2024-04-06 08:51:25,287:INFO:               tbats: 1.1.3
2024-04-06 08:51:25,287:INFO:            pmdarima: 2.0.4
2024-04-06 08:51:25,287:INFO:              psutil: 5.9.8
2024-04-06 08:51:25,287:INFO:          markupsafe: 2.1.5
2024-04-06 08:51:25,287:INFO:             pickle5: Not installed
2024-04-06 08:51:25,287:INFO:         cloudpickle: 3.0.0
2024-04-06 08:51:25,287:INFO:         deprecation: 2.1.0
2024-04-06 08:51:25,287:INFO:              xxhash: 3.4.1
2024-04-06 08:51:25,287:INFO:           wurlitzer: 3.0.3
2024-04-06 08:51:25,287:INFO:PyCaret optional dependencies:
2024-04-06 08:51:25,287:INFO:                shap: Not installed
2024-04-06 08:51:25,287:INFO:           interpret: Not installed
2024-04-06 08:51:25,287:INFO:                umap: Not installed
2024-04-06 08:51:25,287:INFO:     ydata_profiling: Not installed
2024-04-06 08:51:25,287:INFO:  explainerdashboard: Not installed
2024-04-06 08:51:25,287:INFO:             autoviz: Not installed
2024-04-06 08:51:25,287:INFO:           fairlearn: Not installed
2024-04-06 08:51:25,287:INFO:          deepchecks: Not installed
2024-04-06 08:51:25,287:INFO:             xgboost: Not installed
2024-04-06 08:51:25,287:INFO:            catboost: Not installed
2024-04-06 08:51:25,287:INFO:              kmodes: Not installed
2024-04-06 08:51:25,287:INFO:             mlxtend: Not installed
2024-04-06 08:51:25,287:INFO:       statsforecast: Not installed
2024-04-06 08:51:25,287:INFO:        tune_sklearn: Not installed
2024-04-06 08:51:25,287:INFO:                 ray: Not installed
2024-04-06 08:51:25,287:INFO:            hyperopt: Not installed
2024-04-06 08:51:25,287:INFO:              optuna: Not installed
2024-04-06 08:51:25,287:INFO:               skopt: Not installed
2024-04-06 08:51:25,287:INFO:              mlflow: 2.11.3
2024-04-06 08:51:25,287:INFO:              gradio: Not installed
2024-04-06 08:51:25,287:INFO:             fastapi: Not installed
2024-04-06 08:51:25,287:INFO:             uvicorn: Not installed
2024-04-06 08:51:25,287:INFO:              m2cgen: Not installed
2024-04-06 08:51:25,287:INFO:           evidently: Not installed
2024-04-06 08:51:25,287:INFO:               fugue: Not installed
2024-04-06 08:51:25,287:INFO:           streamlit: 1.33.0
2024-04-06 08:51:25,287:INFO:             prophet: 1.1.5
2024-04-06 08:51:25,287:INFO:None
2024-04-06 08:51:25,287:INFO:Set up data.
2024-04-06 08:51:25,289:INFO:Set up folding strategy.
2024-04-06 08:51:25,289:INFO:Set up train/test split.
2024-04-06 08:51:25,289:INFO:Set up data.
2024-04-06 08:51:43,381:INFO:PyCaret ClassificationExperiment
2024-04-06 08:51:43,381:INFO:Logging name: clf-default-name
2024-04-06 08:51:43,381:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 08:51:43,381:INFO:version 3.3.0
2024-04-06 08:51:43,381:INFO:Initializing setup()
2024-04-06 08:51:43,381:INFO:self.USI: 5dc7
2024-04-06 08:51:43,381:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 08:51:43,381:INFO:Checking environment
2024-04-06 08:51:43,381:INFO:python_version: 3.11.3
2024-04-06 08:51:43,381:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 08:51:43,381:INFO:machine: arm64
2024-04-06 08:51:43,381:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:51:43,381:INFO:Memory: svmem(total=8589934592, available=2596683776, percent=69.8, used=3733209088, free=118620160, active=2491416576, inactive=2471182336, wired=1241792512)
2024-04-06 08:51:43,381:INFO:Physical Core: 8
2024-04-06 08:51:43,381:INFO:Logical Core: 8
2024-04-06 08:51:43,381:INFO:Checking libraries
2024-04-06 08:51:43,381:INFO:System:
2024-04-06 08:51:43,381:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 08:51:43,381:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 08:51:43,381:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:51:43,381:INFO:PyCaret required dependencies:
2024-04-06 08:51:43,381:INFO:                 pip: 24.0
2024-04-06 08:51:43,381:INFO:          setuptools: 65.5.0
2024-04-06 08:51:43,381:INFO:             pycaret: 3.3.0
2024-04-06 08:51:43,381:INFO:             IPython: 8.23.0
2024-04-06 08:51:43,381:INFO:          ipywidgets: 8.1.2
2024-04-06 08:51:43,381:INFO:                tqdm: 4.66.2
2024-04-06 08:51:43,381:INFO:               numpy: 1.26.4
2024-04-06 08:51:43,381:INFO:              pandas: 2.1.4
2024-04-06 08:51:43,381:INFO:              jinja2: 3.1.3
2024-04-06 08:51:43,381:INFO:               scipy: 1.11.4
2024-04-06 08:51:43,381:INFO:              joblib: 1.3.2
2024-04-06 08:51:43,381:INFO:             sklearn: 1.4.1.post1
2024-04-06 08:51:43,381:INFO:                pyod: 1.1.3
2024-04-06 08:51:43,381:INFO:            imblearn: 0.12.2
2024-04-06 08:51:43,381:INFO:   category_encoders: 2.6.3
2024-04-06 08:51:43,382:INFO:            lightgbm: 4.3.0
2024-04-06 08:51:43,382:INFO:               numba: 0.59.1
2024-04-06 08:51:43,382:INFO:            requests: 2.31.0
2024-04-06 08:51:43,382:INFO:          matplotlib: 3.7.5
2024-04-06 08:51:43,382:INFO:          scikitplot: 0.3.7
2024-04-06 08:51:43,382:INFO:         yellowbrick: 1.5
2024-04-06 08:51:43,382:INFO:              plotly: 5.20.0
2024-04-06 08:51:43,382:INFO:    plotly-resampler: Not installed
2024-04-06 08:51:43,382:INFO:             kaleido: 0.2.1
2024-04-06 08:51:43,382:INFO:           schemdraw: 0.15
2024-04-06 08:51:43,382:INFO:         statsmodels: 0.14.1
2024-04-06 08:51:43,382:INFO:              sktime: 0.28.0
2024-04-06 08:51:43,382:INFO:               tbats: 1.1.3
2024-04-06 08:51:43,382:INFO:            pmdarima: 2.0.4
2024-04-06 08:51:43,382:INFO:              psutil: 5.9.8
2024-04-06 08:51:43,382:INFO:          markupsafe: 2.1.5
2024-04-06 08:51:43,382:INFO:             pickle5: Not installed
2024-04-06 08:51:43,382:INFO:         cloudpickle: 3.0.0
2024-04-06 08:51:43,382:INFO:         deprecation: 2.1.0
2024-04-06 08:51:43,382:INFO:              xxhash: 3.4.1
2024-04-06 08:51:43,382:INFO:           wurlitzer: 3.0.3
2024-04-06 08:51:43,382:INFO:PyCaret optional dependencies:
2024-04-06 08:51:43,382:INFO:                shap: Not installed
2024-04-06 08:51:43,382:INFO:           interpret: Not installed
2024-04-06 08:51:43,382:INFO:                umap: Not installed
2024-04-06 08:51:43,382:INFO:     ydata_profiling: Not installed
2024-04-06 08:51:43,382:INFO:  explainerdashboard: Not installed
2024-04-06 08:51:43,382:INFO:             autoviz: Not installed
2024-04-06 08:51:43,382:INFO:           fairlearn: Not installed
2024-04-06 08:51:43,382:INFO:          deepchecks: Not installed
2024-04-06 08:51:43,382:INFO:             xgboost: Not installed
2024-04-06 08:51:43,382:INFO:            catboost: Not installed
2024-04-06 08:51:43,382:INFO:              kmodes: Not installed
2024-04-06 08:51:43,382:INFO:             mlxtend: Not installed
2024-04-06 08:51:43,382:INFO:       statsforecast: Not installed
2024-04-06 08:51:43,382:INFO:        tune_sklearn: Not installed
2024-04-06 08:51:43,382:INFO:                 ray: Not installed
2024-04-06 08:51:43,382:INFO:            hyperopt: Not installed
2024-04-06 08:51:43,382:INFO:              optuna: Not installed
2024-04-06 08:51:43,382:INFO:               skopt: Not installed
2024-04-06 08:51:43,382:INFO:              mlflow: 2.11.3
2024-04-06 08:51:43,382:INFO:              gradio: Not installed
2024-04-06 08:51:43,382:INFO:             fastapi: Not installed
2024-04-06 08:51:43,382:INFO:             uvicorn: Not installed
2024-04-06 08:51:43,382:INFO:              m2cgen: Not installed
2024-04-06 08:51:43,382:INFO:           evidently: Not installed
2024-04-06 08:51:43,383:INFO:               fugue: Not installed
2024-04-06 08:51:43,383:INFO:           streamlit: 1.33.0
2024-04-06 08:51:43,383:INFO:             prophet: 1.1.5
2024-04-06 08:51:43,383:INFO:None
2024-04-06 08:51:43,383:INFO:Set up data.
2024-04-06 08:51:43,385:INFO:Set up folding strategy.
2024-04-06 08:51:43,385:INFO:Set up train/test split.
2024-04-06 08:51:43,385:INFO:Set up data.
2024-04-06 08:52:19,838:INFO:PyCaret ClassificationExperiment
2024-04-06 08:52:19,838:INFO:Logging name: clf-default-name
2024-04-06 08:52:19,838:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 08:52:19,838:INFO:version 3.3.0
2024-04-06 08:52:19,838:INFO:Initializing setup()
2024-04-06 08:52:19,838:INFO:self.USI: f1f3
2024-04-06 08:52:19,838:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 08:52:19,838:INFO:Checking environment
2024-04-06 08:52:19,838:INFO:python_version: 3.11.3
2024-04-06 08:52:19,838:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 08:52:19,838:INFO:machine: arm64
2024-04-06 08:52:19,838:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:52:19,839:INFO:Memory: svmem(total=8589934592, available=2596765696, percent=69.8, used=3721035776, free=149897216, active=2457976832, inactive=2442051584, wired=1263058944)
2024-04-06 08:52:19,839:INFO:Physical Core: 8
2024-04-06 08:52:19,839:INFO:Logical Core: 8
2024-04-06 08:52:19,839:INFO:Checking libraries
2024-04-06 08:52:19,839:INFO:System:
2024-04-06 08:52:19,839:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 08:52:19,839:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 08:52:19,839:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:52:19,839:INFO:PyCaret required dependencies:
2024-04-06 08:52:19,839:INFO:                 pip: 24.0
2024-04-06 08:52:19,839:INFO:          setuptools: 65.5.0
2024-04-06 08:52:19,839:INFO:             pycaret: 3.3.0
2024-04-06 08:52:19,839:INFO:             IPython: 8.23.0
2024-04-06 08:52:19,839:INFO:          ipywidgets: 8.1.2
2024-04-06 08:52:19,839:INFO:                tqdm: 4.66.2
2024-04-06 08:52:19,839:INFO:               numpy: 1.26.4
2024-04-06 08:52:19,839:INFO:              pandas: 2.1.4
2024-04-06 08:52:19,839:INFO:              jinja2: 3.1.3
2024-04-06 08:52:19,839:INFO:               scipy: 1.11.4
2024-04-06 08:52:19,839:INFO:              joblib: 1.3.2
2024-04-06 08:52:19,839:INFO:             sklearn: 1.4.1.post1
2024-04-06 08:52:19,839:INFO:                pyod: 1.1.3
2024-04-06 08:52:19,839:INFO:            imblearn: 0.12.2
2024-04-06 08:52:19,839:INFO:   category_encoders: 2.6.3
2024-04-06 08:52:19,839:INFO:            lightgbm: 4.3.0
2024-04-06 08:52:19,839:INFO:               numba: 0.59.1
2024-04-06 08:52:19,839:INFO:            requests: 2.31.0
2024-04-06 08:52:19,839:INFO:          matplotlib: 3.7.5
2024-04-06 08:52:19,839:INFO:          scikitplot: 0.3.7
2024-04-06 08:52:19,839:INFO:         yellowbrick: 1.5
2024-04-06 08:52:19,839:INFO:              plotly: 5.20.0
2024-04-06 08:52:19,839:INFO:    plotly-resampler: Not installed
2024-04-06 08:52:19,839:INFO:             kaleido: 0.2.1
2024-04-06 08:52:19,839:INFO:           schemdraw: 0.15
2024-04-06 08:52:19,839:INFO:         statsmodels: 0.14.1
2024-04-06 08:52:19,839:INFO:              sktime: 0.28.0
2024-04-06 08:52:19,839:INFO:               tbats: 1.1.3
2024-04-06 08:52:19,839:INFO:            pmdarima: 2.0.4
2024-04-06 08:52:19,839:INFO:              psutil: 5.9.8
2024-04-06 08:52:19,839:INFO:          markupsafe: 2.1.5
2024-04-06 08:52:19,839:INFO:             pickle5: Not installed
2024-04-06 08:52:19,839:INFO:         cloudpickle: 3.0.0
2024-04-06 08:52:19,839:INFO:         deprecation: 2.1.0
2024-04-06 08:52:19,839:INFO:              xxhash: 3.4.1
2024-04-06 08:52:19,839:INFO:           wurlitzer: 3.0.3
2024-04-06 08:52:19,839:INFO:PyCaret optional dependencies:
2024-04-06 08:52:19,839:INFO:                shap: Not installed
2024-04-06 08:52:19,839:INFO:           interpret: Not installed
2024-04-06 08:52:19,839:INFO:                umap: Not installed
2024-04-06 08:52:19,839:INFO:     ydata_profiling: Not installed
2024-04-06 08:52:19,839:INFO:  explainerdashboard: Not installed
2024-04-06 08:52:19,839:INFO:             autoviz: Not installed
2024-04-06 08:52:19,839:INFO:           fairlearn: Not installed
2024-04-06 08:52:19,839:INFO:          deepchecks: Not installed
2024-04-06 08:52:19,839:INFO:             xgboost: Not installed
2024-04-06 08:52:19,839:INFO:            catboost: Not installed
2024-04-06 08:52:19,840:INFO:              kmodes: Not installed
2024-04-06 08:52:19,840:INFO:             mlxtend: Not installed
2024-04-06 08:52:19,840:INFO:       statsforecast: Not installed
2024-04-06 08:52:19,840:INFO:        tune_sklearn: Not installed
2024-04-06 08:52:19,840:INFO:                 ray: Not installed
2024-04-06 08:52:19,840:INFO:            hyperopt: Not installed
2024-04-06 08:52:19,840:INFO:              optuna: Not installed
2024-04-06 08:52:19,840:INFO:               skopt: Not installed
2024-04-06 08:52:19,840:INFO:              mlflow: 2.11.3
2024-04-06 08:52:19,840:INFO:              gradio: Not installed
2024-04-06 08:52:19,840:INFO:             fastapi: Not installed
2024-04-06 08:52:19,840:INFO:             uvicorn: Not installed
2024-04-06 08:52:19,840:INFO:              m2cgen: Not installed
2024-04-06 08:52:19,840:INFO:           evidently: Not installed
2024-04-06 08:52:19,840:INFO:               fugue: Not installed
2024-04-06 08:52:19,840:INFO:           streamlit: 1.33.0
2024-04-06 08:52:19,840:INFO:             prophet: 1.1.5
2024-04-06 08:52:19,840:INFO:None
2024-04-06 08:52:19,840:INFO:Set up data.
2024-04-06 08:52:19,842:INFO:Set up folding strategy.
2024-04-06 08:52:19,842:INFO:Set up train/test split.
2024-04-06 08:52:19,842:INFO:Set up data.
2024-04-06 08:52:19,845:INFO:Set up index.
2024-04-06 08:52:19,845:INFO:Assigning column types.
2024-04-06 08:52:19,848:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 08:52:19,871:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 08:52:19,871:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:52:19,888:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:52:19,888:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:52:19,907:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 08:52:19,907:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:52:19,919:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:52:19,919:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:52:19,919:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 08:52:19,937:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:52:19,949:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:52:19,949:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:52:19,967:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:52:19,978:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:52:19,978:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:52:19,978:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 08:52:20,008:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:52:20,008:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:52:20,036:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:52:20,036:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:52:20,037:INFO:Preparing preprocessing pipeline...
2024-04-06 08:52:20,037:INFO:Set up simple imputation.
2024-04-06 08:52:20,037:INFO:Set up feature normalization.
2024-04-06 08:52:20,048:INFO:Finished creating preprocessing pipeline.
2024-04-06 08:52:20,049:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 08:52:20,049:INFO:Creating final display dataframe.
2024-04-06 08:52:20,078:INFO:Setup _display_container:                     Description             Value
0                    Session id              5583
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              f1f3
2024-04-06 08:52:20,110:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:52:20,110:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:52:20,156:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:52:20,157:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:52:20,157:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 08:52:20,157:INFO:setup() successfully completed in 0.32s...............
2024-04-06 08:52:20,158:INFO:Initializing compare_models()
2024-04-06 08:52:20,158:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177805010>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x177805010>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 08:52:20,158:INFO:Checking exceptions
2024-04-06 08:52:20,159:INFO:Preparing display monitor
2024-04-06 08:52:20,167:INFO:Initializing Logistic Regression
2024-04-06 08:52:20,167:INFO:Total runtime is 2.3802121480305988e-06 minutes
2024-04-06 08:52:20,168:INFO:SubProcess create_model() called ==================================
2024-04-06 08:52:20,168:INFO:Initializing create_model()
2024-04-06 08:52:20,168:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177805010>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x176c00250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:52:20,168:INFO:Checking exceptions
2024-04-06 08:52:20,168:INFO:Importing libraries
2024-04-06 08:52:20,168:INFO:Copying training dataset
2024-04-06 08:52:20,172:INFO:Defining folds
2024-04-06 08:52:20,172:INFO:Declaring metric variables
2024-04-06 08:52:20,173:INFO:Importing untrained model
2024-04-06 08:52:20,175:INFO:Logistic Regression Imported successfully
2024-04-06 08:52:20,177:INFO:Starting cross validation
2024-04-06 08:52:20,178:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 08:52:22,369:INFO:Calculating mean and std
2024-04-06 08:52:22,373:INFO:Creating metrics dataframe
2024-04-06 08:52:22,376:INFO:Uploading results into container
2024-04-06 08:52:22,377:INFO:Uploading model into container now
2024-04-06 08:52:22,377:INFO:_master_model_container: 1
2024-04-06 08:52:22,377:INFO:_display_container: 2
2024-04-06 08:52:22,378:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5583, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 08:52:22,378:INFO:create_model() successfully completed......................................
2024-04-06 08:52:22,527:INFO:SubProcess create_model() end ==================================
2024-04-06 08:52:22,527:INFO:Creating metrics dataframe
2024-04-06 08:52:22,530:INFO:Initializing Decision Tree Classifier
2024-04-06 08:52:22,530:INFO:Total runtime is 0.0393867293993632 minutes
2024-04-06 08:52:22,531:INFO:SubProcess create_model() called ==================================
2024-04-06 08:52:22,531:INFO:Initializing create_model()
2024-04-06 08:52:22,531:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177805010>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x176c00250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:52:22,532:INFO:Checking exceptions
2024-04-06 08:52:22,532:INFO:Importing libraries
2024-04-06 08:52:22,532:INFO:Copying training dataset
2024-04-06 08:52:22,534:INFO:Defining folds
2024-04-06 08:52:22,534:INFO:Declaring metric variables
2024-04-06 08:52:22,536:INFO:Importing untrained model
2024-04-06 08:52:22,537:INFO:Decision Tree Classifier Imported successfully
2024-04-06 08:52:22,539:INFO:Starting cross validation
2024-04-06 08:52:22,540:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 08:52:22,607:INFO:Calculating mean and std
2024-04-06 08:52:22,607:INFO:Creating metrics dataframe
2024-04-06 08:52:22,608:INFO:Uploading results into container
2024-04-06 08:52:22,608:INFO:Uploading model into container now
2024-04-06 08:52:22,608:INFO:_master_model_container: 2
2024-04-06 08:52:22,608:INFO:_display_container: 2
2024-04-06 08:52:22,608:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5583, splitter='best')
2024-04-06 08:52:22,608:INFO:create_model() successfully completed......................................
2024-04-06 08:52:22,681:INFO:SubProcess create_model() end ==================================
2024-04-06 08:52:22,681:INFO:Creating metrics dataframe
2024-04-06 08:52:22,683:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 08:52:22,687:INFO:Initializing create_model()
2024-04-06 08:52:22,687:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177805010>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5583, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:52:22,687:INFO:Checking exceptions
2024-04-06 08:52:22,688:INFO:Importing libraries
2024-04-06 08:52:22,688:INFO:Copying training dataset
2024-04-06 08:52:22,690:INFO:Defining folds
2024-04-06 08:52:22,690:INFO:Declaring metric variables
2024-04-06 08:52:22,690:INFO:Importing untrained model
2024-04-06 08:52:22,690:INFO:Declaring custom model
2024-04-06 08:52:22,690:INFO:Logistic Regression Imported successfully
2024-04-06 08:52:22,691:INFO:Cross validation set to False
2024-04-06 08:52:22,691:INFO:Fitting Model
2024-04-06 08:52:22,698:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5583, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 08:52:22,698:INFO:create_model() successfully completed......................................
2024-04-06 08:52:22,828:INFO:Initializing create_model()
2024-04-06 08:52:22,828:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177805010>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5583, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:52:22,828:INFO:Checking exceptions
2024-04-06 08:52:22,832:INFO:Importing libraries
2024-04-06 08:52:22,833:INFO:Copying training dataset
2024-04-06 08:52:22,839:INFO:Defining folds
2024-04-06 08:52:22,839:INFO:Declaring metric variables
2024-04-06 08:52:22,840:INFO:Importing untrained model
2024-04-06 08:52:22,840:INFO:Declaring custom model
2024-04-06 08:52:22,840:INFO:Decision Tree Classifier Imported successfully
2024-04-06 08:52:22,841:INFO:Cross validation set to False
2024-04-06 08:52:22,841:INFO:Fitting Model
2024-04-06 08:52:22,872:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5583, splitter='best')
2024-04-06 08:52:22,872:INFO:create_model() successfully completed......................................
2024-04-06 08:52:22,987:INFO:_master_model_container: 2
2024-04-06 08:52:22,988:INFO:_display_container: 2
2024-04-06 08:52:22,988:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5583, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5583, splitter='best')]
2024-04-06 08:52:22,988:INFO:compare_models() successfully completed......................................
2024-04-06 08:53:02,164:INFO:PyCaret ClassificationExperiment
2024-04-06 08:53:02,164:INFO:Logging name: clf-default-name
2024-04-06 08:53:02,164:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 08:53:02,164:INFO:version 3.3.0
2024-04-06 08:53:02,164:INFO:Initializing setup()
2024-04-06 08:53:02,164:INFO:self.USI: 38cb
2024-04-06 08:53:02,164:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 08:53:02,164:INFO:Checking environment
2024-04-06 08:53:02,164:INFO:python_version: 3.11.3
2024-04-06 08:53:02,164:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 08:53:02,164:INFO:machine: arm64
2024-04-06 08:53:02,164:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:53:02,165:INFO:Memory: svmem(total=8589934592, available=1960542208, percent=77.2, used=3115171840, free=113082368, active=1854767104, inactive=1844379648, wired=1260404736)
2024-04-06 08:53:02,165:INFO:Physical Core: 8
2024-04-06 08:53:02,165:INFO:Logical Core: 8
2024-04-06 08:53:02,165:INFO:Checking libraries
2024-04-06 08:53:02,165:INFO:System:
2024-04-06 08:53:02,165:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 08:53:02,165:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 08:53:02,165:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:53:02,165:INFO:PyCaret required dependencies:
2024-04-06 08:53:02,165:INFO:                 pip: 24.0
2024-04-06 08:53:02,165:INFO:          setuptools: 65.5.0
2024-04-06 08:53:02,165:INFO:             pycaret: 3.3.0
2024-04-06 08:53:02,165:INFO:             IPython: 8.23.0
2024-04-06 08:53:02,165:INFO:          ipywidgets: 8.1.2
2024-04-06 08:53:02,165:INFO:                tqdm: 4.66.2
2024-04-06 08:53:02,165:INFO:               numpy: 1.26.4
2024-04-06 08:53:02,165:INFO:              pandas: 2.1.4
2024-04-06 08:53:02,165:INFO:              jinja2: 3.1.3
2024-04-06 08:53:02,165:INFO:               scipy: 1.11.4
2024-04-06 08:53:02,165:INFO:              joblib: 1.3.2
2024-04-06 08:53:02,165:INFO:             sklearn: 1.4.1.post1
2024-04-06 08:53:02,165:INFO:                pyod: 1.1.3
2024-04-06 08:53:02,165:INFO:            imblearn: 0.12.2
2024-04-06 08:53:02,165:INFO:   category_encoders: 2.6.3
2024-04-06 08:53:02,165:INFO:            lightgbm: 4.3.0
2024-04-06 08:53:02,165:INFO:               numba: 0.59.1
2024-04-06 08:53:02,165:INFO:            requests: 2.31.0
2024-04-06 08:53:02,165:INFO:          matplotlib: 3.7.5
2024-04-06 08:53:02,165:INFO:          scikitplot: 0.3.7
2024-04-06 08:53:02,165:INFO:         yellowbrick: 1.5
2024-04-06 08:53:02,165:INFO:              plotly: 5.20.0
2024-04-06 08:53:02,165:INFO:    plotly-resampler: Not installed
2024-04-06 08:53:02,165:INFO:             kaleido: 0.2.1
2024-04-06 08:53:02,165:INFO:           schemdraw: 0.15
2024-04-06 08:53:02,165:INFO:         statsmodels: 0.14.1
2024-04-06 08:53:02,165:INFO:              sktime: 0.28.0
2024-04-06 08:53:02,165:INFO:               tbats: 1.1.3
2024-04-06 08:53:02,165:INFO:            pmdarima: 2.0.4
2024-04-06 08:53:02,165:INFO:              psutil: 5.9.8
2024-04-06 08:53:02,165:INFO:          markupsafe: 2.1.5
2024-04-06 08:53:02,165:INFO:             pickle5: Not installed
2024-04-06 08:53:02,165:INFO:         cloudpickle: 3.0.0
2024-04-06 08:53:02,165:INFO:         deprecation: 2.1.0
2024-04-06 08:53:02,165:INFO:              xxhash: 3.4.1
2024-04-06 08:53:02,165:INFO:           wurlitzer: 3.0.3
2024-04-06 08:53:02,165:INFO:PyCaret optional dependencies:
2024-04-06 08:53:02,166:INFO:                shap: Not installed
2024-04-06 08:53:02,166:INFO:           interpret: Not installed
2024-04-06 08:53:02,166:INFO:                umap: Not installed
2024-04-06 08:53:02,166:INFO:     ydata_profiling: Not installed
2024-04-06 08:53:02,166:INFO:  explainerdashboard: Not installed
2024-04-06 08:53:02,166:INFO:             autoviz: Not installed
2024-04-06 08:53:02,166:INFO:           fairlearn: Not installed
2024-04-06 08:53:02,166:INFO:          deepchecks: Not installed
2024-04-06 08:53:02,166:INFO:             xgboost: Not installed
2024-04-06 08:53:02,166:INFO:            catboost: Not installed
2024-04-06 08:53:02,166:INFO:              kmodes: Not installed
2024-04-06 08:53:02,166:INFO:             mlxtend: Not installed
2024-04-06 08:53:02,166:INFO:       statsforecast: Not installed
2024-04-06 08:53:02,166:INFO:        tune_sklearn: Not installed
2024-04-06 08:53:02,166:INFO:                 ray: Not installed
2024-04-06 08:53:02,166:INFO:            hyperopt: Not installed
2024-04-06 08:53:02,166:INFO:              optuna: Not installed
2024-04-06 08:53:02,166:INFO:               skopt: Not installed
2024-04-06 08:53:02,166:INFO:              mlflow: 2.11.3
2024-04-06 08:53:02,166:INFO:              gradio: Not installed
2024-04-06 08:53:02,166:INFO:             fastapi: Not installed
2024-04-06 08:53:02,166:INFO:             uvicorn: Not installed
2024-04-06 08:53:02,166:INFO:              m2cgen: Not installed
2024-04-06 08:53:02,166:INFO:           evidently: Not installed
2024-04-06 08:53:02,166:INFO:               fugue: Not installed
2024-04-06 08:53:02,166:INFO:           streamlit: 1.33.0
2024-04-06 08:53:02,166:INFO:             prophet: 1.1.5
2024-04-06 08:53:02,166:INFO:None
2024-04-06 08:53:02,166:INFO:Set up data.
2024-04-06 08:53:02,169:INFO:Set up folding strategy.
2024-04-06 08:53:02,169:INFO:Set up train/test split.
2024-04-06 08:53:02,169:INFO:Set up data.
2024-04-06 08:53:02,172:INFO:Set up index.
2024-04-06 08:53:02,172:INFO:Assigning column types.
2024-04-06 08:53:02,174:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 08:53:02,197:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 08:53:02,198:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:53:02,210:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:02,210:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:02,228:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 08:53:02,229:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:53:02,240:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:02,240:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:02,240:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 08:53:02,258:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:53:02,269:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:02,269:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:02,287:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:53:02,298:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:02,298:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:02,298:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 08:53:02,327:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:02,327:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:02,356:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:02,356:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:02,356:INFO:Preparing preprocessing pipeline...
2024-04-06 08:53:02,357:INFO:Set up simple imputation.
2024-04-06 08:53:02,357:INFO:Set up feature normalization.
2024-04-06 08:53:02,367:INFO:Finished creating preprocessing pipeline.
2024-04-06 08:53:02,368:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 08:53:02,368:INFO:Creating final display dataframe.
2024-04-06 08:53:02,396:INFO:Setup _display_container:                     Description             Value
0                    Session id              2008
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              38cb
2024-04-06 08:53:02,428:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:02,428:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:02,457:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:02,457:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:02,457:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 08:53:02,458:INFO:setup() successfully completed in 0.3s...............
2024-04-06 08:53:02,459:INFO:Initializing compare_models()
2024-04-06 08:53:02,459:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177668ed0>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x177668ed0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 08:53:02,459:INFO:Checking exceptions
2024-04-06 08:53:02,461:INFO:Preparing display monitor
2024-04-06 08:53:02,469:INFO:Initializing Logistic Regression
2024-04-06 08:53:02,469:INFO:Total runtime is 3.2862027486165364e-06 minutes
2024-04-06 08:53:02,470:INFO:SubProcess create_model() called ==================================
2024-04-06 08:53:02,470:INFO:Initializing create_model()
2024-04-06 08:53:02,470:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177668ed0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x177671550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:53:02,470:INFO:Checking exceptions
2024-04-06 08:53:02,470:INFO:Importing libraries
2024-04-06 08:53:02,470:INFO:Copying training dataset
2024-04-06 08:53:02,474:INFO:Defining folds
2024-04-06 08:53:02,474:INFO:Declaring metric variables
2024-04-06 08:53:02,476:INFO:Importing untrained model
2024-04-06 08:53:02,477:INFO:Logistic Regression Imported successfully
2024-04-06 08:53:02,480:INFO:Starting cross validation
2024-04-06 08:53:02,480:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 08:53:02,601:INFO:Calculating mean and std
2024-04-06 08:53:02,602:INFO:Creating metrics dataframe
2024-04-06 08:53:02,603:INFO:Uploading results into container
2024-04-06 08:53:02,603:INFO:Uploading model into container now
2024-04-06 08:53:02,603:INFO:_master_model_container: 1
2024-04-06 08:53:02,603:INFO:_display_container: 2
2024-04-06 08:53:02,603:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2008, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 08:53:02,603:INFO:create_model() successfully completed......................................
2024-04-06 08:53:02,707:INFO:SubProcess create_model() end ==================================
2024-04-06 08:53:02,708:INFO:Creating metrics dataframe
2024-04-06 08:53:02,710:INFO:Initializing Decision Tree Classifier
2024-04-06 08:53:02,710:INFO:Total runtime is 0.004029019673665365 minutes
2024-04-06 08:53:02,712:INFO:SubProcess create_model() called ==================================
2024-04-06 08:53:02,712:INFO:Initializing create_model()
2024-04-06 08:53:02,712:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177668ed0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x177671550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:53:02,712:INFO:Checking exceptions
2024-04-06 08:53:02,712:INFO:Importing libraries
2024-04-06 08:53:02,712:INFO:Copying training dataset
2024-04-06 08:53:02,714:INFO:Defining folds
2024-04-06 08:53:02,714:INFO:Declaring metric variables
2024-04-06 08:53:02,715:INFO:Importing untrained model
2024-04-06 08:53:02,716:INFO:Decision Tree Classifier Imported successfully
2024-04-06 08:53:02,719:INFO:Starting cross validation
2024-04-06 08:53:02,719:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 08:53:02,795:INFO:Calculating mean and std
2024-04-06 08:53:02,795:INFO:Creating metrics dataframe
2024-04-06 08:53:02,796:INFO:Uploading results into container
2024-04-06 08:53:02,796:INFO:Uploading model into container now
2024-04-06 08:53:02,796:INFO:_master_model_container: 2
2024-04-06 08:53:02,796:INFO:_display_container: 2
2024-04-06 08:53:02,796:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2008, splitter='best')
2024-04-06 08:53:02,796:INFO:create_model() successfully completed......................................
2024-04-06 08:53:02,867:INFO:SubProcess create_model() end ==================================
2024-04-06 08:53:02,867:INFO:Creating metrics dataframe
2024-04-06 08:53:02,870:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 08:53:02,873:INFO:Initializing create_model()
2024-04-06 08:53:02,873:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177668ed0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2008, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:53:02,873:INFO:Checking exceptions
2024-04-06 08:53:02,873:INFO:Importing libraries
2024-04-06 08:53:02,873:INFO:Copying training dataset
2024-04-06 08:53:02,876:INFO:Defining folds
2024-04-06 08:53:02,876:INFO:Declaring metric variables
2024-04-06 08:53:02,876:INFO:Importing untrained model
2024-04-06 08:53:02,876:INFO:Declaring custom model
2024-04-06 08:53:02,876:INFO:Decision Tree Classifier Imported successfully
2024-04-06 08:53:02,876:INFO:Cross validation set to False
2024-04-06 08:53:02,876:INFO:Fitting Model
2024-04-06 08:53:02,893:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2008, splitter='best')
2024-04-06 08:53:02,893:INFO:create_model() successfully completed......................................
2024-04-06 08:53:02,989:INFO:Initializing create_model()
2024-04-06 08:53:02,989:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177668ed0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2008, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:53:02,989:INFO:Checking exceptions
2024-04-06 08:53:02,990:INFO:Importing libraries
2024-04-06 08:53:02,990:INFO:Copying training dataset
2024-04-06 08:53:02,992:INFO:Defining folds
2024-04-06 08:53:02,992:INFO:Declaring metric variables
2024-04-06 08:53:02,992:INFO:Importing untrained model
2024-04-06 08:53:02,992:INFO:Declaring custom model
2024-04-06 08:53:02,992:INFO:Logistic Regression Imported successfully
2024-04-06 08:53:02,993:INFO:Cross validation set to False
2024-04-06 08:53:02,993:INFO:Fitting Model
2024-04-06 08:53:02,999:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2008, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 08:53:02,999:INFO:create_model() successfully completed......................................
2024-04-06 08:53:03,140:INFO:_master_model_container: 2
2024-04-06 08:53:03,141:INFO:_display_container: 2
2024-04-06 08:53:03,142:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2008, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2008, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-06 08:53:03,142:INFO:compare_models() successfully completed......................................
2024-04-06 08:53:06,691:INFO:PyCaret ClassificationExperiment
2024-04-06 08:53:06,691:INFO:Logging name: clf-default-name
2024-04-06 08:53:06,691:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 08:53:06,691:INFO:version 3.3.0
2024-04-06 08:53:06,691:INFO:Initializing setup()
2024-04-06 08:53:06,692:INFO:self.USI: 869d
2024-04-06 08:53:06,692:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 08:53:06,692:INFO:Checking environment
2024-04-06 08:53:06,692:INFO:python_version: 3.11.3
2024-04-06 08:53:06,692:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 08:53:06,692:INFO:machine: arm64
2024-04-06 08:53:06,692:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:53:06,692:INFO:Memory: svmem(total=8589934592, available=1958789120, percent=77.2, used=3184377856, free=60276736, active=1916354560, inactive=1894432768, wired=1268023296)
2024-04-06 08:53:06,692:INFO:Physical Core: 8
2024-04-06 08:53:06,692:INFO:Logical Core: 8
2024-04-06 08:53:06,692:INFO:Checking libraries
2024-04-06 08:53:06,692:INFO:System:
2024-04-06 08:53:06,692:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 08:53:06,692:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 08:53:06,692:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:53:06,692:INFO:PyCaret required dependencies:
2024-04-06 08:53:06,692:INFO:                 pip: 24.0
2024-04-06 08:53:06,692:INFO:          setuptools: 65.5.0
2024-04-06 08:53:06,692:INFO:             pycaret: 3.3.0
2024-04-06 08:53:06,692:INFO:             IPython: 8.23.0
2024-04-06 08:53:06,692:INFO:          ipywidgets: 8.1.2
2024-04-06 08:53:06,692:INFO:                tqdm: 4.66.2
2024-04-06 08:53:06,692:INFO:               numpy: 1.26.4
2024-04-06 08:53:06,692:INFO:              pandas: 2.1.4
2024-04-06 08:53:06,692:INFO:              jinja2: 3.1.3
2024-04-06 08:53:06,692:INFO:               scipy: 1.11.4
2024-04-06 08:53:06,692:INFO:              joblib: 1.3.2
2024-04-06 08:53:06,692:INFO:             sklearn: 1.4.1.post1
2024-04-06 08:53:06,692:INFO:                pyod: 1.1.3
2024-04-06 08:53:06,692:INFO:            imblearn: 0.12.2
2024-04-06 08:53:06,692:INFO:   category_encoders: 2.6.3
2024-04-06 08:53:06,692:INFO:            lightgbm: 4.3.0
2024-04-06 08:53:06,692:INFO:               numba: 0.59.1
2024-04-06 08:53:06,692:INFO:            requests: 2.31.0
2024-04-06 08:53:06,692:INFO:          matplotlib: 3.7.5
2024-04-06 08:53:06,692:INFO:          scikitplot: 0.3.7
2024-04-06 08:53:06,692:INFO:         yellowbrick: 1.5
2024-04-06 08:53:06,692:INFO:              plotly: 5.20.0
2024-04-06 08:53:06,692:INFO:    plotly-resampler: Not installed
2024-04-06 08:53:06,692:INFO:             kaleido: 0.2.1
2024-04-06 08:53:06,692:INFO:           schemdraw: 0.15
2024-04-06 08:53:06,692:INFO:         statsmodels: 0.14.1
2024-04-06 08:53:06,692:INFO:              sktime: 0.28.0
2024-04-06 08:53:06,692:INFO:               tbats: 1.1.3
2024-04-06 08:53:06,692:INFO:            pmdarima: 2.0.4
2024-04-06 08:53:06,692:INFO:              psutil: 5.9.8
2024-04-06 08:53:06,692:INFO:          markupsafe: 2.1.5
2024-04-06 08:53:06,692:INFO:             pickle5: Not installed
2024-04-06 08:53:06,692:INFO:         cloudpickle: 3.0.0
2024-04-06 08:53:06,693:INFO:         deprecation: 2.1.0
2024-04-06 08:53:06,693:INFO:              xxhash: 3.4.1
2024-04-06 08:53:06,693:INFO:           wurlitzer: 3.0.3
2024-04-06 08:53:06,693:INFO:PyCaret optional dependencies:
2024-04-06 08:53:06,693:INFO:                shap: Not installed
2024-04-06 08:53:06,693:INFO:           interpret: Not installed
2024-04-06 08:53:06,693:INFO:                umap: Not installed
2024-04-06 08:53:06,693:INFO:     ydata_profiling: Not installed
2024-04-06 08:53:06,693:INFO:  explainerdashboard: Not installed
2024-04-06 08:53:06,693:INFO:             autoviz: Not installed
2024-04-06 08:53:06,693:INFO:           fairlearn: Not installed
2024-04-06 08:53:06,693:INFO:          deepchecks: Not installed
2024-04-06 08:53:06,693:INFO:             xgboost: Not installed
2024-04-06 08:53:06,693:INFO:            catboost: Not installed
2024-04-06 08:53:06,693:INFO:              kmodes: Not installed
2024-04-06 08:53:06,693:INFO:             mlxtend: Not installed
2024-04-06 08:53:06,693:INFO:       statsforecast: Not installed
2024-04-06 08:53:06,693:INFO:        tune_sklearn: Not installed
2024-04-06 08:53:06,693:INFO:                 ray: Not installed
2024-04-06 08:53:06,693:INFO:            hyperopt: Not installed
2024-04-06 08:53:06,693:INFO:              optuna: Not installed
2024-04-06 08:53:06,693:INFO:               skopt: Not installed
2024-04-06 08:53:06,693:INFO:              mlflow: 2.11.3
2024-04-06 08:53:06,693:INFO:              gradio: Not installed
2024-04-06 08:53:06,693:INFO:             fastapi: Not installed
2024-04-06 08:53:06,693:INFO:             uvicorn: Not installed
2024-04-06 08:53:06,693:INFO:              m2cgen: Not installed
2024-04-06 08:53:06,693:INFO:           evidently: Not installed
2024-04-06 08:53:06,693:INFO:               fugue: Not installed
2024-04-06 08:53:06,693:INFO:           streamlit: 1.33.0
2024-04-06 08:53:06,693:INFO:             prophet: 1.1.5
2024-04-06 08:53:06,693:INFO:None
2024-04-06 08:53:06,693:INFO:Set up data.
2024-04-06 08:53:06,696:INFO:Set up folding strategy.
2024-04-06 08:53:06,696:INFO:Set up train/test split.
2024-04-06 08:53:06,696:INFO:Set up data.
2024-04-06 08:53:06,699:INFO:Set up index.
2024-04-06 08:53:06,699:INFO:Assigning column types.
2024-04-06 08:53:06,702:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 08:53:06,727:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 08:53:06,727:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:53:06,740:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:06,740:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:06,758:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 08:53:06,759:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:53:06,770:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:06,770:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:06,770:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 08:53:06,788:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:53:06,799:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:06,799:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:06,817:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:53:06,828:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:06,828:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:06,828:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 08:53:06,856:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:06,856:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:06,885:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:06,885:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:06,885:INFO:Preparing preprocessing pipeline...
2024-04-06 08:53:06,886:INFO:Set up simple imputation.
2024-04-06 08:53:06,886:INFO:Set up feature normalization.
2024-04-06 08:53:06,894:INFO:Finished creating preprocessing pipeline.
2024-04-06 08:53:06,895:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 08:53:06,895:INFO:Creating final display dataframe.
2024-04-06 08:53:06,924:INFO:Setup _display_container:                     Description             Value
0                    Session id              7113
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              869d
2024-04-06 08:53:06,956:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:06,956:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:06,985:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:06,985:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:06,986:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 08:53:06,986:INFO:setup() successfully completed in 0.3s...............
2024-04-06 08:53:06,987:INFO:Initializing compare_models()
2024-04-06 08:53:06,987:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x176c00c10>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x176c00c10>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 08:53:06,987:INFO:Checking exceptions
2024-04-06 08:53:06,988:INFO:Preparing display monitor
2024-04-06 08:53:06,997:INFO:Initializing Logistic Regression
2024-04-06 08:53:06,997:INFO:Total runtime is 3.3696492513020832e-06 minutes
2024-04-06 08:53:06,999:INFO:SubProcess create_model() called ==================================
2024-04-06 08:53:06,999:INFO:Initializing create_model()
2024-04-06 08:53:06,999:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x176c00c10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17767e250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:53:06,999:INFO:Checking exceptions
2024-04-06 08:53:06,999:INFO:Importing libraries
2024-04-06 08:53:06,999:INFO:Copying training dataset
2024-04-06 08:53:07,002:INFO:Defining folds
2024-04-06 08:53:07,002:INFO:Declaring metric variables
2024-04-06 08:53:07,004:INFO:Importing untrained model
2024-04-06 08:53:07,005:INFO:Logistic Regression Imported successfully
2024-04-06 08:53:07,008:INFO:Starting cross validation
2024-04-06 08:53:07,009:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 08:53:07,061:INFO:Calculating mean and std
2024-04-06 08:53:07,062:INFO:Creating metrics dataframe
2024-04-06 08:53:07,062:INFO:Uploading results into container
2024-04-06 08:53:07,063:INFO:Uploading model into container now
2024-04-06 08:53:07,063:INFO:_master_model_container: 1
2024-04-06 08:53:07,063:INFO:_display_container: 2
2024-04-06 08:53:07,063:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7113, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 08:53:07,063:INFO:create_model() successfully completed......................................
2024-04-06 08:53:07,152:INFO:SubProcess create_model() end ==================================
2024-04-06 08:53:07,152:INFO:Creating metrics dataframe
2024-04-06 08:53:07,155:INFO:Initializing Decision Tree Classifier
2024-04-06 08:53:07,155:INFO:Total runtime is 0.002634898821512858 minutes
2024-04-06 08:53:07,158:INFO:SubProcess create_model() called ==================================
2024-04-06 08:53:07,158:INFO:Initializing create_model()
2024-04-06 08:53:07,158:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x176c00c10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17767e250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:53:07,158:INFO:Checking exceptions
2024-04-06 08:53:07,158:INFO:Importing libraries
2024-04-06 08:53:07,159:INFO:Copying training dataset
2024-04-06 08:53:07,161:INFO:Defining folds
2024-04-06 08:53:07,161:INFO:Declaring metric variables
2024-04-06 08:53:07,163:INFO:Importing untrained model
2024-04-06 08:53:07,165:INFO:Decision Tree Classifier Imported successfully
2024-04-06 08:53:07,175:INFO:Starting cross validation
2024-04-06 08:53:07,175:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 08:53:07,256:INFO:Calculating mean and std
2024-04-06 08:53:07,256:INFO:Creating metrics dataframe
2024-04-06 08:53:07,257:INFO:Uploading results into container
2024-04-06 08:53:07,257:INFO:Uploading model into container now
2024-04-06 08:53:07,257:INFO:_master_model_container: 2
2024-04-06 08:53:07,257:INFO:_display_container: 2
2024-04-06 08:53:07,257:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7113, splitter='best')
2024-04-06 08:53:07,257:INFO:create_model() successfully completed......................................
2024-04-06 08:53:07,325:INFO:SubProcess create_model() end ==================================
2024-04-06 08:53:07,325:INFO:Creating metrics dataframe
2024-04-06 08:53:07,328:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 08:53:07,330:INFO:Initializing create_model()
2024-04-06 08:53:07,331:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x176c00c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7113, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:53:07,331:INFO:Checking exceptions
2024-04-06 08:53:07,331:INFO:Importing libraries
2024-04-06 08:53:07,331:INFO:Copying training dataset
2024-04-06 08:53:07,334:INFO:Defining folds
2024-04-06 08:53:07,334:INFO:Declaring metric variables
2024-04-06 08:53:07,334:INFO:Importing untrained model
2024-04-06 08:53:07,334:INFO:Declaring custom model
2024-04-06 08:53:07,334:INFO:Decision Tree Classifier Imported successfully
2024-04-06 08:53:07,334:INFO:Cross validation set to False
2024-04-06 08:53:07,334:INFO:Fitting Model
2024-04-06 08:53:07,348:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7113, splitter='best')
2024-04-06 08:53:07,348:INFO:create_model() successfully completed......................................
2024-04-06 08:53:07,421:INFO:Initializing create_model()
2024-04-06 08:53:07,421:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x176c00c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7113, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:53:07,421:INFO:Checking exceptions
2024-04-06 08:53:07,422:INFO:Importing libraries
2024-04-06 08:53:07,422:INFO:Copying training dataset
2024-04-06 08:53:07,424:INFO:Defining folds
2024-04-06 08:53:07,424:INFO:Declaring metric variables
2024-04-06 08:53:07,424:INFO:Importing untrained model
2024-04-06 08:53:07,424:INFO:Declaring custom model
2024-04-06 08:53:07,425:INFO:Logistic Regression Imported successfully
2024-04-06 08:53:07,425:INFO:Cross validation set to False
2024-04-06 08:53:07,425:INFO:Fitting Model
2024-04-06 08:53:07,437:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7113, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 08:53:07,437:INFO:create_model() successfully completed......................................
2024-04-06 08:53:07,558:INFO:_master_model_container: 2
2024-04-06 08:53:07,559:INFO:_display_container: 2
2024-04-06 08:53:07,559:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7113, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7113, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-06 08:53:07,560:INFO:compare_models() successfully completed......................................
2024-04-06 08:53:17,693:INFO:PyCaret ClassificationExperiment
2024-04-06 08:53:17,694:INFO:Logging name: clf-default-name
2024-04-06 08:53:17,694:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 08:53:17,694:INFO:version 3.3.0
2024-04-06 08:53:17,694:INFO:Initializing setup()
2024-04-06 08:53:17,694:INFO:self.USI: e564
2024-04-06 08:53:17,694:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 08:53:17,694:INFO:Checking environment
2024-04-06 08:53:17,694:INFO:python_version: 3.11.3
2024-04-06 08:53:17,694:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 08:53:17,694:INFO:machine: arm64
2024-04-06 08:53:17,694:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:53:17,694:INFO:Memory: svmem(total=8589934592, available=2039922688, percent=76.3, used=3226140672, free=65716224, active=1979318272, inactive=1972633600, wired=1246822400)
2024-04-06 08:53:17,694:INFO:Physical Core: 8
2024-04-06 08:53:17,694:INFO:Logical Core: 8
2024-04-06 08:53:17,694:INFO:Checking libraries
2024-04-06 08:53:17,694:INFO:System:
2024-04-06 08:53:17,694:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 08:53:17,694:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 08:53:17,694:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:53:17,694:INFO:PyCaret required dependencies:
2024-04-06 08:53:17,694:INFO:                 pip: 24.0
2024-04-06 08:53:17,694:INFO:          setuptools: 65.5.0
2024-04-06 08:53:17,694:INFO:             pycaret: 3.3.0
2024-04-06 08:53:17,694:INFO:             IPython: 8.23.0
2024-04-06 08:53:17,694:INFO:          ipywidgets: 8.1.2
2024-04-06 08:53:17,694:INFO:                tqdm: 4.66.2
2024-04-06 08:53:17,694:INFO:               numpy: 1.26.4
2024-04-06 08:53:17,694:INFO:              pandas: 2.1.4
2024-04-06 08:53:17,694:INFO:              jinja2: 3.1.3
2024-04-06 08:53:17,694:INFO:               scipy: 1.11.4
2024-04-06 08:53:17,694:INFO:              joblib: 1.3.2
2024-04-06 08:53:17,694:INFO:             sklearn: 1.4.1.post1
2024-04-06 08:53:17,694:INFO:                pyod: 1.1.3
2024-04-06 08:53:17,694:INFO:            imblearn: 0.12.2
2024-04-06 08:53:17,694:INFO:   category_encoders: 2.6.3
2024-04-06 08:53:17,694:INFO:            lightgbm: 4.3.0
2024-04-06 08:53:17,694:INFO:               numba: 0.59.1
2024-04-06 08:53:17,694:INFO:            requests: 2.31.0
2024-04-06 08:53:17,694:INFO:          matplotlib: 3.7.5
2024-04-06 08:53:17,694:INFO:          scikitplot: 0.3.7
2024-04-06 08:53:17,694:INFO:         yellowbrick: 1.5
2024-04-06 08:53:17,694:INFO:              plotly: 5.20.0
2024-04-06 08:53:17,694:INFO:    plotly-resampler: Not installed
2024-04-06 08:53:17,694:INFO:             kaleido: 0.2.1
2024-04-06 08:53:17,694:INFO:           schemdraw: 0.15
2024-04-06 08:53:17,694:INFO:         statsmodels: 0.14.1
2024-04-06 08:53:17,694:INFO:              sktime: 0.28.0
2024-04-06 08:53:17,694:INFO:               tbats: 1.1.3
2024-04-06 08:53:17,694:INFO:            pmdarima: 2.0.4
2024-04-06 08:53:17,694:INFO:              psutil: 5.9.8
2024-04-06 08:53:17,694:INFO:          markupsafe: 2.1.5
2024-04-06 08:53:17,694:INFO:             pickle5: Not installed
2024-04-06 08:53:17,694:INFO:         cloudpickle: 3.0.0
2024-04-06 08:53:17,694:INFO:         deprecation: 2.1.0
2024-04-06 08:53:17,694:INFO:              xxhash: 3.4.1
2024-04-06 08:53:17,694:INFO:           wurlitzer: 3.0.3
2024-04-06 08:53:17,694:INFO:PyCaret optional dependencies:
2024-04-06 08:53:17,695:INFO:                shap: Not installed
2024-04-06 08:53:17,695:INFO:           interpret: Not installed
2024-04-06 08:53:17,695:INFO:                umap: Not installed
2024-04-06 08:53:17,695:INFO:     ydata_profiling: Not installed
2024-04-06 08:53:17,695:INFO:  explainerdashboard: Not installed
2024-04-06 08:53:17,695:INFO:             autoviz: Not installed
2024-04-06 08:53:17,695:INFO:           fairlearn: Not installed
2024-04-06 08:53:17,695:INFO:          deepchecks: Not installed
2024-04-06 08:53:17,695:INFO:             xgboost: Not installed
2024-04-06 08:53:17,695:INFO:            catboost: Not installed
2024-04-06 08:53:17,695:INFO:              kmodes: Not installed
2024-04-06 08:53:17,695:INFO:             mlxtend: Not installed
2024-04-06 08:53:17,695:INFO:       statsforecast: Not installed
2024-04-06 08:53:17,695:INFO:        tune_sklearn: Not installed
2024-04-06 08:53:17,695:INFO:                 ray: Not installed
2024-04-06 08:53:17,695:INFO:            hyperopt: Not installed
2024-04-06 08:53:17,695:INFO:              optuna: Not installed
2024-04-06 08:53:17,695:INFO:               skopt: Not installed
2024-04-06 08:53:17,695:INFO:              mlflow: 2.11.3
2024-04-06 08:53:17,695:INFO:              gradio: Not installed
2024-04-06 08:53:17,695:INFO:             fastapi: Not installed
2024-04-06 08:53:17,695:INFO:             uvicorn: Not installed
2024-04-06 08:53:17,695:INFO:              m2cgen: Not installed
2024-04-06 08:53:17,695:INFO:           evidently: Not installed
2024-04-06 08:53:17,695:INFO:               fugue: Not installed
2024-04-06 08:53:17,695:INFO:           streamlit: 1.33.0
2024-04-06 08:53:17,695:INFO:             prophet: 1.1.5
2024-04-06 08:53:17,695:INFO:None
2024-04-06 08:53:17,695:INFO:Set up data.
2024-04-06 08:53:17,697:INFO:Set up folding strategy.
2024-04-06 08:53:17,697:INFO:Set up train/test split.
2024-04-06 08:53:17,697:INFO:Set up data.
2024-04-06 08:53:17,700:INFO:Set up index.
2024-04-06 08:53:17,700:INFO:Assigning column types.
2024-04-06 08:53:17,703:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 08:53:17,725:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 08:53:17,725:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:53:17,737:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:17,738:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:17,756:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 08:53:17,756:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:53:17,767:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:17,767:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:17,768:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 08:53:17,786:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:53:17,797:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:17,797:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:17,815:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:53:17,826:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:17,826:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:17,826:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 08:53:17,855:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:17,855:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:17,885:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:17,885:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:17,885:INFO:Preparing preprocessing pipeline...
2024-04-06 08:53:17,886:INFO:Set up simple imputation.
2024-04-06 08:53:17,886:INFO:Set up feature normalization.
2024-04-06 08:53:17,894:INFO:Finished creating preprocessing pipeline.
2024-04-06 08:53:17,895:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 08:53:17,895:INFO:Creating final display dataframe.
2024-04-06 08:53:17,926:INFO:Setup _display_container:                     Description             Value
0                    Session id              2961
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              e564
2024-04-06 08:53:17,958:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:17,958:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:17,988:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:17,988:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:53:17,988:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 08:53:17,989:INFO:setup() successfully completed in 0.3s...............
2024-04-06 08:53:17,989:INFO:Initializing compare_models()
2024-04-06 08:53:17,989:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174a63c90>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x174a63c90>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 08:53:17,989:INFO:Checking exceptions
2024-04-06 08:53:17,991:INFO:Preparing display monitor
2024-04-06 08:53:18,000:INFO:Initializing Logistic Regression
2024-04-06 08:53:18,000:INFO:Total runtime is 3.0676523844401043e-06 minutes
2024-04-06 08:53:18,001:INFO:SubProcess create_model() called ==================================
2024-04-06 08:53:18,001:INFO:Initializing create_model()
2024-04-06 08:53:18,001:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174a63c90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x177918b50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:53:18,001:INFO:Checking exceptions
2024-04-06 08:53:18,001:INFO:Importing libraries
2024-04-06 08:53:18,002:INFO:Copying training dataset
2024-04-06 08:53:18,005:INFO:Defining folds
2024-04-06 08:53:18,005:INFO:Declaring metric variables
2024-04-06 08:53:18,006:INFO:Importing untrained model
2024-04-06 08:53:18,009:INFO:Logistic Regression Imported successfully
2024-04-06 08:53:18,018:INFO:Starting cross validation
2024-04-06 08:53:18,019:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 08:53:18,105:INFO:Calculating mean and std
2024-04-06 08:53:18,106:INFO:Creating metrics dataframe
2024-04-06 08:53:18,108:INFO:Uploading results into container
2024-04-06 08:53:18,109:INFO:Uploading model into container now
2024-04-06 08:53:18,110:INFO:_master_model_container: 1
2024-04-06 08:53:18,110:INFO:_display_container: 2
2024-04-06 08:53:18,110:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2961, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 08:53:18,110:INFO:create_model() successfully completed......................................
2024-04-06 08:53:18,185:INFO:SubProcess create_model() end ==================================
2024-04-06 08:53:18,185:INFO:Creating metrics dataframe
2024-04-06 08:53:18,188:INFO:Initializing Decision Tree Classifier
2024-04-06 08:53:18,188:INFO:Total runtime is 0.0031292200088500976 minutes
2024-04-06 08:53:18,189:INFO:SubProcess create_model() called ==================================
2024-04-06 08:53:18,189:INFO:Initializing create_model()
2024-04-06 08:53:18,189:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174a63c90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x177918b50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:53:18,189:INFO:Checking exceptions
2024-04-06 08:53:18,189:INFO:Importing libraries
2024-04-06 08:53:18,189:INFO:Copying training dataset
2024-04-06 08:53:18,191:INFO:Defining folds
2024-04-06 08:53:18,191:INFO:Declaring metric variables
2024-04-06 08:53:18,192:INFO:Importing untrained model
2024-04-06 08:53:18,194:INFO:Decision Tree Classifier Imported successfully
2024-04-06 08:53:18,196:INFO:Starting cross validation
2024-04-06 08:53:18,196:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 08:53:18,271:INFO:Calculating mean and std
2024-04-06 08:53:18,272:INFO:Creating metrics dataframe
2024-04-06 08:53:18,272:INFO:Uploading results into container
2024-04-06 08:53:18,272:INFO:Uploading model into container now
2024-04-06 08:53:18,273:INFO:_master_model_container: 2
2024-04-06 08:53:18,273:INFO:_display_container: 2
2024-04-06 08:53:18,273:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2961, splitter='best')
2024-04-06 08:53:18,273:INFO:create_model() successfully completed......................................
2024-04-06 08:53:18,342:INFO:SubProcess create_model() end ==================================
2024-04-06 08:53:18,342:INFO:Creating metrics dataframe
2024-04-06 08:53:18,345:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 08:53:18,347:INFO:Initializing create_model()
2024-04-06 08:53:18,347:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174a63c90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2961, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:53:18,348:INFO:Checking exceptions
2024-04-06 08:53:18,348:INFO:Importing libraries
2024-04-06 08:53:18,348:INFO:Copying training dataset
2024-04-06 08:53:18,351:INFO:Defining folds
2024-04-06 08:53:18,351:INFO:Declaring metric variables
2024-04-06 08:53:18,351:INFO:Importing untrained model
2024-04-06 08:53:18,351:INFO:Declaring custom model
2024-04-06 08:53:18,351:INFO:Logistic Regression Imported successfully
2024-04-06 08:53:18,351:INFO:Cross validation set to False
2024-04-06 08:53:18,351:INFO:Fitting Model
2024-04-06 08:53:18,357:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2961, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 08:53:18,358:INFO:create_model() successfully completed......................................
2024-04-06 08:53:18,500:INFO:Initializing create_model()
2024-04-06 08:53:18,500:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174a63c90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2961, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:53:18,500:INFO:Checking exceptions
2024-04-06 08:53:18,502:INFO:Importing libraries
2024-04-06 08:53:18,502:INFO:Copying training dataset
2024-04-06 08:53:18,507:INFO:Defining folds
2024-04-06 08:53:18,507:INFO:Declaring metric variables
2024-04-06 08:53:18,508:INFO:Importing untrained model
2024-04-06 08:53:18,508:INFO:Declaring custom model
2024-04-06 08:53:18,508:INFO:Decision Tree Classifier Imported successfully
2024-04-06 08:53:18,509:INFO:Cross validation set to False
2024-04-06 08:53:18,509:INFO:Fitting Model
2024-04-06 08:53:18,535:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2961, splitter='best')
2024-04-06 08:53:18,535:INFO:create_model() successfully completed......................................
2024-04-06 08:53:18,637:INFO:_master_model_container: 2
2024-04-06 08:53:18,638:INFO:_display_container: 2
2024-04-06 08:53:18,638:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2961, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2961, splitter='best')]
2024-04-06 08:53:18,638:INFO:compare_models() successfully completed......................................
2024-04-06 08:54:36,625:INFO:PyCaret ClassificationExperiment
2024-04-06 08:54:36,625:INFO:Logging name: clf-default-name
2024-04-06 08:54:36,625:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 08:54:36,625:INFO:version 3.3.0
2024-04-06 08:54:36,625:INFO:Initializing setup()
2024-04-06 08:54:36,625:INFO:self.USI: 71b8
2024-04-06 08:54:36,625:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 08:54:36,625:INFO:Checking environment
2024-04-06 08:54:36,625:INFO:python_version: 3.11.3
2024-04-06 08:54:36,625:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 08:54:36,625:INFO:machine: arm64
2024-04-06 08:54:36,625:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:54:36,626:INFO:Memory: svmem(total=8589934592, available=1897824256, percent=77.9, used=3138109440, free=40730624, active=1875853312, inactive=1852047360, wired=1262256128)
2024-04-06 08:54:36,626:INFO:Physical Core: 8
2024-04-06 08:54:36,626:INFO:Logical Core: 8
2024-04-06 08:54:36,626:INFO:Checking libraries
2024-04-06 08:54:36,626:INFO:System:
2024-04-06 08:54:36,626:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 08:54:36,626:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 08:54:36,626:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:54:36,626:INFO:PyCaret required dependencies:
2024-04-06 08:54:36,626:INFO:                 pip: 24.0
2024-04-06 08:54:36,626:INFO:          setuptools: 65.5.0
2024-04-06 08:54:36,626:INFO:             pycaret: 3.3.0
2024-04-06 08:54:36,626:INFO:             IPython: 8.23.0
2024-04-06 08:54:36,626:INFO:          ipywidgets: 8.1.2
2024-04-06 08:54:36,626:INFO:                tqdm: 4.66.2
2024-04-06 08:54:36,626:INFO:               numpy: 1.26.4
2024-04-06 08:54:36,626:INFO:              pandas: 2.1.4
2024-04-06 08:54:36,626:INFO:              jinja2: 3.1.3
2024-04-06 08:54:36,626:INFO:               scipy: 1.11.4
2024-04-06 08:54:36,626:INFO:              joblib: 1.3.2
2024-04-06 08:54:36,626:INFO:             sklearn: 1.4.1.post1
2024-04-06 08:54:36,626:INFO:                pyod: 1.1.3
2024-04-06 08:54:36,626:INFO:            imblearn: 0.12.2
2024-04-06 08:54:36,626:INFO:   category_encoders: 2.6.3
2024-04-06 08:54:36,626:INFO:            lightgbm: 4.3.0
2024-04-06 08:54:36,626:INFO:               numba: 0.59.1
2024-04-06 08:54:36,626:INFO:            requests: 2.31.0
2024-04-06 08:54:36,626:INFO:          matplotlib: 3.7.5
2024-04-06 08:54:36,626:INFO:          scikitplot: 0.3.7
2024-04-06 08:54:36,626:INFO:         yellowbrick: 1.5
2024-04-06 08:54:36,627:INFO:              plotly: 5.20.0
2024-04-06 08:54:36,627:INFO:    plotly-resampler: Not installed
2024-04-06 08:54:36,627:INFO:             kaleido: 0.2.1
2024-04-06 08:54:36,627:INFO:           schemdraw: 0.15
2024-04-06 08:54:36,627:INFO:         statsmodels: 0.14.1
2024-04-06 08:54:36,627:INFO:              sktime: 0.28.0
2024-04-06 08:54:36,627:INFO:               tbats: 1.1.3
2024-04-06 08:54:36,627:INFO:            pmdarima: 2.0.4
2024-04-06 08:54:36,627:INFO:              psutil: 5.9.8
2024-04-06 08:54:36,627:INFO:          markupsafe: 2.1.5
2024-04-06 08:54:36,627:INFO:             pickle5: Not installed
2024-04-06 08:54:36,627:INFO:         cloudpickle: 3.0.0
2024-04-06 08:54:36,627:INFO:         deprecation: 2.1.0
2024-04-06 08:54:36,627:INFO:              xxhash: 3.4.1
2024-04-06 08:54:36,627:INFO:           wurlitzer: 3.0.3
2024-04-06 08:54:36,627:INFO:PyCaret optional dependencies:
2024-04-06 08:54:36,627:INFO:                shap: Not installed
2024-04-06 08:54:36,627:INFO:           interpret: Not installed
2024-04-06 08:54:36,627:INFO:                umap: Not installed
2024-04-06 08:54:36,627:INFO:     ydata_profiling: Not installed
2024-04-06 08:54:36,627:INFO:  explainerdashboard: Not installed
2024-04-06 08:54:36,627:INFO:             autoviz: Not installed
2024-04-06 08:54:36,627:INFO:           fairlearn: Not installed
2024-04-06 08:54:36,627:INFO:          deepchecks: Not installed
2024-04-06 08:54:36,627:INFO:             xgboost: Not installed
2024-04-06 08:54:36,627:INFO:            catboost: Not installed
2024-04-06 08:54:36,627:INFO:              kmodes: Not installed
2024-04-06 08:54:36,627:INFO:             mlxtend: Not installed
2024-04-06 08:54:36,627:INFO:       statsforecast: Not installed
2024-04-06 08:54:36,627:INFO:        tune_sklearn: Not installed
2024-04-06 08:54:36,627:INFO:                 ray: Not installed
2024-04-06 08:54:36,627:INFO:            hyperopt: Not installed
2024-04-06 08:54:36,627:INFO:              optuna: Not installed
2024-04-06 08:54:36,627:INFO:               skopt: Not installed
2024-04-06 08:54:36,627:INFO:              mlflow: 2.11.3
2024-04-06 08:54:36,627:INFO:              gradio: Not installed
2024-04-06 08:54:36,627:INFO:             fastapi: Not installed
2024-04-06 08:54:36,627:INFO:             uvicorn: Not installed
2024-04-06 08:54:36,627:INFO:              m2cgen: Not installed
2024-04-06 08:54:36,627:INFO:           evidently: Not installed
2024-04-06 08:54:36,627:INFO:               fugue: Not installed
2024-04-06 08:54:36,627:INFO:           streamlit: 1.33.0
2024-04-06 08:54:36,627:INFO:             prophet: 1.1.5
2024-04-06 08:54:36,627:INFO:None
2024-04-06 08:54:36,627:INFO:Set up data.
2024-04-06 08:54:36,644:INFO:Set up folding strategy.
2024-04-06 08:54:36,645:INFO:Set up train/test split.
2024-04-06 08:54:36,645:INFO:Set up data.
2024-04-06 08:54:36,650:INFO:Set up index.
2024-04-06 08:54:36,650:INFO:Assigning column types.
2024-04-06 08:54:36,653:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 08:54:36,673:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 08:54:36,674:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:54:36,686:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:54:36,686:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:54:36,704:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 08:54:36,704:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:54:36,715:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:54:36,715:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:54:36,716:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 08:54:36,734:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:54:36,745:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:54:36,745:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:54:36,763:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:54:36,774:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:54:36,774:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:54:36,774:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 08:54:36,804:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:54:36,804:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:54:36,833:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:54:36,833:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:54:36,834:INFO:Preparing preprocessing pipeline...
2024-04-06 08:54:36,835:INFO:Set up simple imputation.
2024-04-06 08:54:36,835:INFO:Set up feature normalization.
2024-04-06 08:54:36,846:INFO:Finished creating preprocessing pipeline.
2024-04-06 08:54:36,847:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 08:54:36,847:INFO:Creating final display dataframe.
2024-04-06 08:54:36,877:INFO:Setup _display_container:                     Description             Value
0                    Session id              7984
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              71b8
2024-04-06 08:54:36,911:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:54:36,912:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:54:36,941:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:54:36,941:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:54:36,942:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 08:54:36,942:INFO:setup() successfully completed in 0.32s...............
2024-04-06 08:54:36,943:INFO:Initializing compare_models()
2024-04-06 08:54:36,943:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177a95990>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x177a95990>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 08:54:36,943:INFO:Checking exceptions
2024-04-06 08:54:36,945:INFO:Preparing display monitor
2024-04-06 08:54:36,954:INFO:Initializing Logistic Regression
2024-04-06 08:54:36,954:INFO:Total runtime is 3.321965535481771e-06 minutes
2024-04-06 08:54:36,955:INFO:SubProcess create_model() called ==================================
2024-04-06 08:54:36,955:INFO:Initializing create_model()
2024-04-06 08:54:36,955:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177a95990>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x177767810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:54:36,955:INFO:Checking exceptions
2024-04-06 08:54:36,955:INFO:Importing libraries
2024-04-06 08:54:36,955:INFO:Copying training dataset
2024-04-06 08:54:36,960:INFO:Defining folds
2024-04-06 08:54:36,960:INFO:Declaring metric variables
2024-04-06 08:54:36,962:INFO:Importing untrained model
2024-04-06 08:54:36,964:INFO:Logistic Regression Imported successfully
2024-04-06 08:54:36,967:INFO:Starting cross validation
2024-04-06 08:54:36,968:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 08:54:37,067:INFO:Calculating mean and std
2024-04-06 08:54:37,067:INFO:Creating metrics dataframe
2024-04-06 08:54:37,068:INFO:Uploading results into container
2024-04-06 08:54:37,068:INFO:Uploading model into container now
2024-04-06 08:54:37,068:INFO:_master_model_container: 1
2024-04-06 08:54:37,068:INFO:_display_container: 2
2024-04-06 08:54:37,068:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7984, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 08:54:37,068:INFO:create_model() successfully completed......................................
2024-04-06 08:54:37,208:INFO:SubProcess create_model() end ==================================
2024-04-06 08:54:37,208:INFO:Creating metrics dataframe
2024-04-06 08:54:37,211:INFO:Initializing Decision Tree Classifier
2024-04-06 08:54:37,211:INFO:Total runtime is 0.0042831023534139 minutes
2024-04-06 08:54:37,212:INFO:SubProcess create_model() called ==================================
2024-04-06 08:54:37,212:INFO:Initializing create_model()
2024-04-06 08:54:37,212:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177a95990>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x177767810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:54:37,212:INFO:Checking exceptions
2024-04-06 08:54:37,212:INFO:Importing libraries
2024-04-06 08:54:37,212:INFO:Copying training dataset
2024-04-06 08:54:37,215:INFO:Defining folds
2024-04-06 08:54:37,215:INFO:Declaring metric variables
2024-04-06 08:54:37,216:INFO:Importing untrained model
2024-04-06 08:54:37,217:INFO:Decision Tree Classifier Imported successfully
2024-04-06 08:54:37,219:INFO:Starting cross validation
2024-04-06 08:54:37,220:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 08:54:37,286:INFO:Calculating mean and std
2024-04-06 08:54:37,286:INFO:Creating metrics dataframe
2024-04-06 08:54:37,287:INFO:Uploading results into container
2024-04-06 08:54:37,287:INFO:Uploading model into container now
2024-04-06 08:54:37,287:INFO:_master_model_container: 2
2024-04-06 08:54:37,287:INFO:_display_container: 2
2024-04-06 08:54:37,287:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7984, splitter='best')
2024-04-06 08:54:37,287:INFO:create_model() successfully completed......................................
2024-04-06 08:54:37,358:INFO:SubProcess create_model() end ==================================
2024-04-06 08:54:37,358:INFO:Creating metrics dataframe
2024-04-06 08:54:37,360:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 08:54:37,364:INFO:Initializing create_model()
2024-04-06 08:54:37,364:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177a95990>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7984, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:54:37,364:INFO:Checking exceptions
2024-04-06 08:54:37,365:INFO:Importing libraries
2024-04-06 08:54:37,365:INFO:Copying training dataset
2024-04-06 08:54:37,368:INFO:Defining folds
2024-04-06 08:54:37,368:INFO:Declaring metric variables
2024-04-06 08:54:37,368:INFO:Importing untrained model
2024-04-06 08:54:37,368:INFO:Declaring custom model
2024-04-06 08:54:37,368:INFO:Decision Tree Classifier Imported successfully
2024-04-06 08:54:37,368:INFO:Cross validation set to False
2024-04-06 08:54:37,368:INFO:Fitting Model
2024-04-06 08:54:37,382:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7984, splitter='best')
2024-04-06 08:54:37,383:INFO:create_model() successfully completed......................................
2024-04-06 08:54:37,460:INFO:Initializing create_model()
2024-04-06 08:54:37,460:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177a95990>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7984, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:54:37,460:INFO:Checking exceptions
2024-04-06 08:54:37,460:INFO:Importing libraries
2024-04-06 08:54:37,460:INFO:Copying training dataset
2024-04-06 08:54:37,462:INFO:Defining folds
2024-04-06 08:54:37,462:INFO:Declaring metric variables
2024-04-06 08:54:37,463:INFO:Importing untrained model
2024-04-06 08:54:37,463:INFO:Declaring custom model
2024-04-06 08:54:37,463:INFO:Logistic Regression Imported successfully
2024-04-06 08:54:37,463:INFO:Cross validation set to False
2024-04-06 08:54:37,463:INFO:Fitting Model
2024-04-06 08:54:37,473:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7984, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 08:54:37,473:INFO:create_model() successfully completed......................................
2024-04-06 08:54:37,702:INFO:_master_model_container: 2
2024-04-06 08:54:37,702:INFO:_display_container: 2
2024-04-06 08:54:37,703:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7984, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7984, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-06 08:54:37,703:INFO:compare_models() successfully completed......................................
2024-04-06 08:56:31,187:INFO:PyCaret ClassificationExperiment
2024-04-06 08:56:31,188:INFO:Logging name: clf-default-name
2024-04-06 08:56:31,188:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 08:56:31,188:INFO:version 3.3.0
2024-04-06 08:56:31,188:INFO:Initializing setup()
2024-04-06 08:56:31,188:INFO:self.USI: 08c9
2024-04-06 08:56:31,188:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 08:56:31,188:INFO:Checking environment
2024-04-06 08:56:31,188:INFO:python_version: 3.11.3
2024-04-06 08:56:31,188:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 08:56:31,188:INFO:machine: arm64
2024-04-06 08:56:31,188:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:56:31,188:INFO:Memory: svmem(total=8589934592, available=1904574464, percent=77.8, used=3123462144, free=59047936, active=1859518464, inactive=1842348032, wired=1263943680)
2024-04-06 08:56:31,188:INFO:Physical Core: 8
2024-04-06 08:56:31,188:INFO:Logical Core: 8
2024-04-06 08:56:31,188:INFO:Checking libraries
2024-04-06 08:56:31,188:INFO:System:
2024-04-06 08:56:31,188:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 08:56:31,188:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 08:56:31,188:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:56:31,188:INFO:PyCaret required dependencies:
2024-04-06 08:56:31,188:INFO:                 pip: 24.0
2024-04-06 08:56:31,188:INFO:          setuptools: 65.5.0
2024-04-06 08:56:31,188:INFO:             pycaret: 3.3.0
2024-04-06 08:56:31,188:INFO:             IPython: 8.23.0
2024-04-06 08:56:31,188:INFO:          ipywidgets: 8.1.2
2024-04-06 08:56:31,188:INFO:                tqdm: 4.66.2
2024-04-06 08:56:31,188:INFO:               numpy: 1.26.4
2024-04-06 08:56:31,188:INFO:              pandas: 2.1.4
2024-04-06 08:56:31,188:INFO:              jinja2: 3.1.3
2024-04-06 08:56:31,188:INFO:               scipy: 1.11.4
2024-04-06 08:56:31,188:INFO:              joblib: 1.3.2
2024-04-06 08:56:31,189:INFO:             sklearn: 1.4.1.post1
2024-04-06 08:56:31,189:INFO:                pyod: 1.1.3
2024-04-06 08:56:31,189:INFO:            imblearn: 0.12.2
2024-04-06 08:56:31,189:INFO:   category_encoders: 2.6.3
2024-04-06 08:56:31,189:INFO:            lightgbm: 4.3.0
2024-04-06 08:56:31,189:INFO:               numba: 0.59.1
2024-04-06 08:56:31,189:INFO:            requests: 2.31.0
2024-04-06 08:56:31,189:INFO:          matplotlib: 3.7.5
2024-04-06 08:56:31,189:INFO:          scikitplot: 0.3.7
2024-04-06 08:56:31,189:INFO:         yellowbrick: 1.5
2024-04-06 08:56:31,189:INFO:              plotly: 5.20.0
2024-04-06 08:56:31,189:INFO:    plotly-resampler: Not installed
2024-04-06 08:56:31,189:INFO:             kaleido: 0.2.1
2024-04-06 08:56:31,189:INFO:           schemdraw: 0.15
2024-04-06 08:56:31,189:INFO:         statsmodels: 0.14.1
2024-04-06 08:56:31,189:INFO:              sktime: 0.28.0
2024-04-06 08:56:31,189:INFO:               tbats: 1.1.3
2024-04-06 08:56:31,189:INFO:            pmdarima: 2.0.4
2024-04-06 08:56:31,189:INFO:              psutil: 5.9.8
2024-04-06 08:56:31,189:INFO:          markupsafe: 2.1.5
2024-04-06 08:56:31,189:INFO:             pickle5: Not installed
2024-04-06 08:56:31,189:INFO:         cloudpickle: 3.0.0
2024-04-06 08:56:31,189:INFO:         deprecation: 2.1.0
2024-04-06 08:56:31,189:INFO:              xxhash: 3.4.1
2024-04-06 08:56:31,189:INFO:           wurlitzer: 3.0.3
2024-04-06 08:56:31,189:INFO:PyCaret optional dependencies:
2024-04-06 08:56:31,189:INFO:                shap: Not installed
2024-04-06 08:56:31,189:INFO:           interpret: Not installed
2024-04-06 08:56:31,189:INFO:                umap: Not installed
2024-04-06 08:56:31,189:INFO:     ydata_profiling: Not installed
2024-04-06 08:56:31,189:INFO:  explainerdashboard: Not installed
2024-04-06 08:56:31,189:INFO:             autoviz: Not installed
2024-04-06 08:56:31,189:INFO:           fairlearn: Not installed
2024-04-06 08:56:31,189:INFO:          deepchecks: Not installed
2024-04-06 08:56:31,189:INFO:             xgboost: Not installed
2024-04-06 08:56:31,189:INFO:            catboost: Not installed
2024-04-06 08:56:31,189:INFO:              kmodes: Not installed
2024-04-06 08:56:31,189:INFO:             mlxtend: Not installed
2024-04-06 08:56:31,189:INFO:       statsforecast: Not installed
2024-04-06 08:56:31,189:INFO:        tune_sklearn: Not installed
2024-04-06 08:56:31,189:INFO:                 ray: Not installed
2024-04-06 08:56:31,189:INFO:            hyperopt: Not installed
2024-04-06 08:56:31,189:INFO:              optuna: Not installed
2024-04-06 08:56:31,189:INFO:               skopt: Not installed
2024-04-06 08:56:31,189:INFO:              mlflow: 2.11.3
2024-04-06 08:56:31,189:INFO:              gradio: Not installed
2024-04-06 08:56:31,189:INFO:             fastapi: Not installed
2024-04-06 08:56:31,189:INFO:             uvicorn: Not installed
2024-04-06 08:56:31,189:INFO:              m2cgen: Not installed
2024-04-06 08:56:31,189:INFO:           evidently: Not installed
2024-04-06 08:56:31,189:INFO:               fugue: Not installed
2024-04-06 08:56:31,189:INFO:           streamlit: 1.33.0
2024-04-06 08:56:31,189:INFO:             prophet: 1.1.5
2024-04-06 08:56:31,189:INFO:None
2024-04-06 08:56:31,189:INFO:Set up data.
2024-04-06 08:56:31,195:INFO:Set up folding strategy.
2024-04-06 08:56:31,195:INFO:Set up train/test split.
2024-04-06 08:56:31,195:INFO:Set up data.
2024-04-06 08:56:31,197:INFO:Set up index.
2024-04-06 08:56:31,197:INFO:Assigning column types.
2024-04-06 08:56:31,200:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 08:56:31,220:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 08:56:31,221:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:56:31,233:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:56:31,233:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:56:31,251:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 08:56:31,252:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:56:31,263:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:56:31,263:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:56:31,263:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 08:56:31,281:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:56:31,292:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:56:31,292:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:56:31,310:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:56:31,323:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:56:31,323:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:56:31,323:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 08:56:31,352:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:56:31,352:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:56:31,381:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:56:31,381:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:56:31,382:INFO:Preparing preprocessing pipeline...
2024-04-06 08:56:31,383:INFO:Set up simple imputation.
2024-04-06 08:56:31,383:INFO:Set up feature normalization.
2024-04-06 08:56:31,394:INFO:Finished creating preprocessing pipeline.
2024-04-06 08:56:31,396:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 08:56:31,396:INFO:Creating final display dataframe.
2024-04-06 08:56:31,434:INFO:Setup _display_container:                     Description             Value
0                    Session id              2236
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              08c9
2024-04-06 08:56:31,467:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:56:31,467:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:56:31,497:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:56:31,497:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:56:31,497:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 08:56:31,498:INFO:setup() successfully completed in 0.31s...............
2024-04-06 08:56:31,499:INFO:Initializing compare_models()
2024-04-06 08:56:31,499:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177a08c10>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x177a08c10>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 08:56:31,499:INFO:Checking exceptions
2024-04-06 08:56:31,502:INFO:Preparing display monitor
2024-04-06 08:56:31,511:INFO:Initializing Logistic Regression
2024-04-06 08:56:31,511:INFO:Total runtime is 3.5842259724934896e-06 minutes
2024-04-06 08:56:31,514:INFO:SubProcess create_model() called ==================================
2024-04-06 08:56:31,514:INFO:Initializing create_model()
2024-04-06 08:56:31,514:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177a08c10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x177a08710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:56:31,514:INFO:Checking exceptions
2024-04-06 08:56:31,514:INFO:Importing libraries
2024-04-06 08:56:31,514:INFO:Copying training dataset
2024-04-06 08:56:31,520:INFO:Defining folds
2024-04-06 08:56:31,520:INFO:Declaring metric variables
2024-04-06 08:56:31,521:INFO:Importing untrained model
2024-04-06 08:56:31,523:INFO:Logistic Regression Imported successfully
2024-04-06 08:56:31,528:INFO:Starting cross validation
2024-04-06 08:56:31,529:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 08:56:31,685:INFO:Calculating mean and std
2024-04-06 08:56:31,685:INFO:Creating metrics dataframe
2024-04-06 08:56:31,686:INFO:Uploading results into container
2024-04-06 08:56:31,686:INFO:Uploading model into container now
2024-04-06 08:56:31,686:INFO:_master_model_container: 1
2024-04-06 08:56:31,686:INFO:_display_container: 2
2024-04-06 08:56:31,686:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2236, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 08:56:31,686:INFO:create_model() successfully completed......................................
2024-04-06 08:56:31,805:INFO:SubProcess create_model() end ==================================
2024-04-06 08:56:31,805:INFO:Creating metrics dataframe
2024-04-06 08:56:31,808:INFO:Initializing Decision Tree Classifier
2024-04-06 08:56:31,808:INFO:Total runtime is 0.004944352308909098 minutes
2024-04-06 08:56:31,809:INFO:SubProcess create_model() called ==================================
2024-04-06 08:56:31,809:INFO:Initializing create_model()
2024-04-06 08:56:31,809:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177a08c10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x177a08710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:56:31,809:INFO:Checking exceptions
2024-04-06 08:56:31,809:INFO:Importing libraries
2024-04-06 08:56:31,809:INFO:Copying training dataset
2024-04-06 08:56:31,812:INFO:Defining folds
2024-04-06 08:56:31,812:INFO:Declaring metric variables
2024-04-06 08:56:31,813:INFO:Importing untrained model
2024-04-06 08:56:31,814:INFO:Decision Tree Classifier Imported successfully
2024-04-06 08:56:31,816:INFO:Starting cross validation
2024-04-06 08:56:31,816:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 08:56:31,891:INFO:Calculating mean and std
2024-04-06 08:56:31,892:INFO:Creating metrics dataframe
2024-04-06 08:56:31,892:INFO:Uploading results into container
2024-04-06 08:56:31,892:INFO:Uploading model into container now
2024-04-06 08:56:31,893:INFO:_master_model_container: 2
2024-04-06 08:56:31,893:INFO:_display_container: 2
2024-04-06 08:56:31,893:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2236, splitter='best')
2024-04-06 08:56:31,893:INFO:create_model() successfully completed......................................
2024-04-06 08:56:31,968:INFO:SubProcess create_model() end ==================================
2024-04-06 08:56:31,968:INFO:Creating metrics dataframe
2024-04-06 08:56:31,971:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 08:56:31,974:INFO:Initializing create_model()
2024-04-06 08:56:31,974:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177a08c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2236, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:56:31,974:INFO:Checking exceptions
2024-04-06 08:56:31,974:INFO:Importing libraries
2024-04-06 08:56:31,975:INFO:Copying training dataset
2024-04-06 08:56:31,977:INFO:Defining folds
2024-04-06 08:56:31,977:INFO:Declaring metric variables
2024-04-06 08:56:31,977:INFO:Importing untrained model
2024-04-06 08:56:31,977:INFO:Declaring custom model
2024-04-06 08:56:31,977:INFO:Decision Tree Classifier Imported successfully
2024-04-06 08:56:31,977:INFO:Cross validation set to False
2024-04-06 08:56:31,977:INFO:Fitting Model
2024-04-06 08:56:31,991:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2236, splitter='best')
2024-04-06 08:56:31,991:INFO:create_model() successfully completed......................................
2024-04-06 08:56:32,065:INFO:Initializing create_model()
2024-04-06 08:56:32,065:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177a08c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2236, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:56:32,065:INFO:Checking exceptions
2024-04-06 08:56:32,065:INFO:Importing libraries
2024-04-06 08:56:32,065:INFO:Copying training dataset
2024-04-06 08:56:32,067:INFO:Defining folds
2024-04-06 08:56:32,068:INFO:Declaring metric variables
2024-04-06 08:56:32,068:INFO:Importing untrained model
2024-04-06 08:56:32,068:INFO:Declaring custom model
2024-04-06 08:56:32,068:INFO:Logistic Regression Imported successfully
2024-04-06 08:56:32,068:INFO:Cross validation set to False
2024-04-06 08:56:32,068:INFO:Fitting Model
2024-04-06 08:56:32,075:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2236, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 08:56:32,075:INFO:create_model() successfully completed......................................
2024-04-06 08:56:32,216:INFO:_master_model_container: 2
2024-04-06 08:56:32,216:INFO:_display_container: 2
2024-04-06 08:56:32,218:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2236, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2236, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-06 08:56:32,218:INFO:compare_models() successfully completed......................................
2024-04-06 08:56:32,222:INFO:Initializing predict_model()
2024-04-06 08:56:32,222:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177a08c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2236, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x177a4f380>)
2024-04-06 08:56:32,222:INFO:Checking exceptions
2024-04-06 08:56:32,222:INFO:Preloading libraries
2024-04-06 08:58:24,259:INFO:PyCaret ClassificationExperiment
2024-04-06 08:58:24,259:INFO:Logging name: clf-default-name
2024-04-06 08:58:24,260:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 08:58:24,260:INFO:version 3.3.0
2024-04-06 08:58:24,260:INFO:Initializing setup()
2024-04-06 08:58:24,260:INFO:self.USI: bf26
2024-04-06 08:58:24,260:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 08:58:24,260:INFO:Checking environment
2024-04-06 08:58:24,260:INFO:python_version: 3.11.3
2024-04-06 08:58:24,260:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 08:58:24,260:INFO:machine: arm64
2024-04-06 08:58:24,260:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:58:24,260:INFO:Memory: svmem(total=8589934592, available=1929117696, percent=77.5, used=3111714816, free=49364992, active=1894563840, inactive=1877360640, wired=1217150976)
2024-04-06 08:58:24,260:INFO:Physical Core: 8
2024-04-06 08:58:24,260:INFO:Logical Core: 8
2024-04-06 08:58:24,260:INFO:Checking libraries
2024-04-06 08:58:24,260:INFO:System:
2024-04-06 08:58:24,260:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 08:58:24,260:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 08:58:24,260:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:58:24,260:INFO:PyCaret required dependencies:
2024-04-06 08:58:24,260:INFO:                 pip: 24.0
2024-04-06 08:58:24,260:INFO:          setuptools: 65.5.0
2024-04-06 08:58:24,260:INFO:             pycaret: 3.3.0
2024-04-06 08:58:24,260:INFO:             IPython: 8.23.0
2024-04-06 08:58:24,260:INFO:          ipywidgets: 8.1.2
2024-04-06 08:58:24,260:INFO:                tqdm: 4.66.2
2024-04-06 08:58:24,260:INFO:               numpy: 1.26.4
2024-04-06 08:58:24,260:INFO:              pandas: 2.1.4
2024-04-06 08:58:24,260:INFO:              jinja2: 3.1.3
2024-04-06 08:58:24,260:INFO:               scipy: 1.11.4
2024-04-06 08:58:24,260:INFO:              joblib: 1.3.2
2024-04-06 08:58:24,260:INFO:             sklearn: 1.4.1.post1
2024-04-06 08:58:24,260:INFO:                pyod: 1.1.3
2024-04-06 08:58:24,260:INFO:            imblearn: 0.12.2
2024-04-06 08:58:24,260:INFO:   category_encoders: 2.6.3
2024-04-06 08:58:24,260:INFO:            lightgbm: 4.3.0
2024-04-06 08:58:24,260:INFO:               numba: 0.59.1
2024-04-06 08:58:24,260:INFO:            requests: 2.31.0
2024-04-06 08:58:24,260:INFO:          matplotlib: 3.7.5
2024-04-06 08:58:24,260:INFO:          scikitplot: 0.3.7
2024-04-06 08:58:24,260:INFO:         yellowbrick: 1.5
2024-04-06 08:58:24,261:INFO:              plotly: 5.20.0
2024-04-06 08:58:24,261:INFO:    plotly-resampler: Not installed
2024-04-06 08:58:24,261:INFO:             kaleido: 0.2.1
2024-04-06 08:58:24,261:INFO:           schemdraw: 0.15
2024-04-06 08:58:24,261:INFO:         statsmodels: 0.14.1
2024-04-06 08:58:24,261:INFO:              sktime: 0.28.0
2024-04-06 08:58:24,261:INFO:               tbats: 1.1.3
2024-04-06 08:58:24,261:INFO:            pmdarima: 2.0.4
2024-04-06 08:58:24,261:INFO:              psutil: 5.9.8
2024-04-06 08:58:24,261:INFO:          markupsafe: 2.1.5
2024-04-06 08:58:24,261:INFO:             pickle5: Not installed
2024-04-06 08:58:24,261:INFO:         cloudpickle: 3.0.0
2024-04-06 08:58:24,261:INFO:         deprecation: 2.1.0
2024-04-06 08:58:24,261:INFO:              xxhash: 3.4.1
2024-04-06 08:58:24,261:INFO:           wurlitzer: 3.0.3
2024-04-06 08:58:24,261:INFO:PyCaret optional dependencies:
2024-04-06 08:58:24,261:INFO:                shap: Not installed
2024-04-06 08:58:24,261:INFO:           interpret: Not installed
2024-04-06 08:58:24,261:INFO:                umap: Not installed
2024-04-06 08:58:24,261:INFO:     ydata_profiling: Not installed
2024-04-06 08:58:24,261:INFO:  explainerdashboard: Not installed
2024-04-06 08:58:24,261:INFO:             autoviz: Not installed
2024-04-06 08:58:24,261:INFO:           fairlearn: Not installed
2024-04-06 08:58:24,261:INFO:          deepchecks: Not installed
2024-04-06 08:58:24,261:INFO:             xgboost: Not installed
2024-04-06 08:58:24,261:INFO:            catboost: Not installed
2024-04-06 08:58:24,261:INFO:              kmodes: Not installed
2024-04-06 08:58:24,261:INFO:             mlxtend: Not installed
2024-04-06 08:58:24,261:INFO:       statsforecast: Not installed
2024-04-06 08:58:24,261:INFO:        tune_sklearn: Not installed
2024-04-06 08:58:24,261:INFO:                 ray: Not installed
2024-04-06 08:58:24,261:INFO:            hyperopt: Not installed
2024-04-06 08:58:24,261:INFO:              optuna: Not installed
2024-04-06 08:58:24,261:INFO:               skopt: Not installed
2024-04-06 08:58:24,261:INFO:              mlflow: 2.11.3
2024-04-06 08:58:24,261:INFO:              gradio: Not installed
2024-04-06 08:58:24,261:INFO:             fastapi: Not installed
2024-04-06 08:58:24,261:INFO:             uvicorn: Not installed
2024-04-06 08:58:24,261:INFO:              m2cgen: Not installed
2024-04-06 08:58:24,261:INFO:           evidently: Not installed
2024-04-06 08:58:24,261:INFO:               fugue: Not installed
2024-04-06 08:58:24,261:INFO:           streamlit: 1.33.0
2024-04-06 08:58:24,261:INFO:             prophet: 1.1.5
2024-04-06 08:58:24,261:INFO:None
2024-04-06 08:58:24,261:INFO:Set up data.
2024-04-06 08:58:24,266:INFO:Set up folding strategy.
2024-04-06 08:58:24,266:INFO:Set up train/test split.
2024-04-06 08:58:24,267:INFO:Set up data.
2024-04-06 08:58:24,269:INFO:Set up index.
2024-04-06 08:58:24,269:INFO:Assigning column types.
2024-04-06 08:58:24,272:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 08:58:24,293:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 08:58:24,294:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:58:24,306:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:58:24,306:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:58:24,324:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 08:58:24,325:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:58:24,336:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:58:24,336:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:58:24,336:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 08:58:24,354:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:58:24,365:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:58:24,365:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:58:24,383:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:58:24,394:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:58:24,394:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:58:24,394:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 08:58:24,423:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:58:24,423:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:58:24,453:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:58:24,453:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:58:24,454:INFO:Preparing preprocessing pipeline...
2024-04-06 08:58:24,454:INFO:Set up simple imputation.
2024-04-06 08:58:24,454:INFO:Set up feature normalization.
2024-04-06 08:58:24,466:INFO:Finished creating preprocessing pipeline.
2024-04-06 08:58:24,468:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 08:58:24,468:INFO:Creating final display dataframe.
2024-04-06 08:58:24,498:INFO:Setup _display_container:                     Description             Value
0                    Session id              4985
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              bf26
2024-04-06 08:58:24,532:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:58:24,533:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:58:24,564:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:58:24,565:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:58:24,565:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 08:58:24,569:INFO:setup() successfully completed in 0.31s...............
2024-04-06 08:58:24,571:INFO:Initializing compare_models()
2024-04-06 08:58:24,571:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177668610>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x177668610>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 08:58:24,571:INFO:Checking exceptions
2024-04-06 08:58:24,573:INFO:Preparing display monitor
2024-04-06 08:58:24,585:INFO:Initializing Logistic Regression
2024-04-06 08:58:24,585:INFO:Total runtime is 2.280871073404948e-06 minutes
2024-04-06 08:58:24,587:INFO:SubProcess create_model() called ==================================
2024-04-06 08:58:24,587:INFO:Initializing create_model()
2024-04-06 08:58:24,587:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177668610>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x177a99f10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:58:24,587:INFO:Checking exceptions
2024-04-06 08:58:24,587:INFO:Importing libraries
2024-04-06 08:58:24,587:INFO:Copying training dataset
2024-04-06 08:58:24,591:INFO:Defining folds
2024-04-06 08:58:24,591:INFO:Declaring metric variables
2024-04-06 08:58:24,593:INFO:Importing untrained model
2024-04-06 08:58:24,594:INFO:Logistic Regression Imported successfully
2024-04-06 08:58:24,596:INFO:Starting cross validation
2024-04-06 08:58:24,596:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 08:58:24,719:INFO:Calculating mean and std
2024-04-06 08:58:24,719:INFO:Creating metrics dataframe
2024-04-06 08:58:24,720:INFO:Uploading results into container
2024-04-06 08:58:24,720:INFO:Uploading model into container now
2024-04-06 08:58:24,720:INFO:_master_model_container: 1
2024-04-06 08:58:24,720:INFO:_display_container: 2
2024-04-06 08:58:24,721:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4985, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 08:58:24,721:INFO:create_model() successfully completed......................................
2024-04-06 08:58:24,838:INFO:SubProcess create_model() end ==================================
2024-04-06 08:58:24,838:INFO:Creating metrics dataframe
2024-04-06 08:58:24,841:INFO:Initializing Decision Tree Classifier
2024-04-06 08:58:24,841:INFO:Total runtime is 0.004266536235809326 minutes
2024-04-06 08:58:24,843:INFO:SubProcess create_model() called ==================================
2024-04-06 08:58:24,843:INFO:Initializing create_model()
2024-04-06 08:58:24,843:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177668610>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x177a99f10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:58:24,843:INFO:Checking exceptions
2024-04-06 08:58:24,843:INFO:Importing libraries
2024-04-06 08:58:24,843:INFO:Copying training dataset
2024-04-06 08:58:24,845:INFO:Defining folds
2024-04-06 08:58:24,845:INFO:Declaring metric variables
2024-04-06 08:58:24,846:INFO:Importing untrained model
2024-04-06 08:58:24,848:INFO:Decision Tree Classifier Imported successfully
2024-04-06 08:58:24,850:INFO:Starting cross validation
2024-04-06 08:58:24,850:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 08:58:24,928:INFO:Calculating mean and std
2024-04-06 08:58:24,928:INFO:Creating metrics dataframe
2024-04-06 08:58:24,929:INFO:Uploading results into container
2024-04-06 08:58:24,929:INFO:Uploading model into container now
2024-04-06 08:58:24,929:INFO:_master_model_container: 2
2024-04-06 08:58:24,929:INFO:_display_container: 2
2024-04-06 08:58:24,929:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4985, splitter='best')
2024-04-06 08:58:24,929:INFO:create_model() successfully completed......................................
2024-04-06 08:58:25,003:INFO:SubProcess create_model() end ==================================
2024-04-06 08:58:25,004:INFO:Creating metrics dataframe
2024-04-06 08:58:25,006:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 08:58:25,009:INFO:Initializing create_model()
2024-04-06 08:58:25,009:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177668610>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4985, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:58:25,009:INFO:Checking exceptions
2024-04-06 08:58:25,010:INFO:Importing libraries
2024-04-06 08:58:25,010:INFO:Copying training dataset
2024-04-06 08:58:25,012:INFO:Defining folds
2024-04-06 08:58:25,012:INFO:Declaring metric variables
2024-04-06 08:58:25,012:INFO:Importing untrained model
2024-04-06 08:58:25,012:INFO:Declaring custom model
2024-04-06 08:58:25,012:INFO:Decision Tree Classifier Imported successfully
2024-04-06 08:58:25,013:INFO:Cross validation set to False
2024-04-06 08:58:25,013:INFO:Fitting Model
2024-04-06 08:58:25,027:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4985, splitter='best')
2024-04-06 08:58:25,027:INFO:create_model() successfully completed......................................
2024-04-06 08:58:25,102:INFO:Initializing create_model()
2024-04-06 08:58:25,102:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177668610>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4985, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:58:25,102:INFO:Checking exceptions
2024-04-06 08:58:25,102:INFO:Importing libraries
2024-04-06 08:58:25,102:INFO:Copying training dataset
2024-04-06 08:58:25,105:INFO:Defining folds
2024-04-06 08:58:25,105:INFO:Declaring metric variables
2024-04-06 08:58:25,105:INFO:Importing untrained model
2024-04-06 08:58:25,105:INFO:Declaring custom model
2024-04-06 08:58:25,105:INFO:Logistic Regression Imported successfully
2024-04-06 08:58:25,105:INFO:Cross validation set to False
2024-04-06 08:58:25,105:INFO:Fitting Model
2024-04-06 08:58:25,116:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4985, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 08:58:25,116:INFO:create_model() successfully completed......................................
2024-04-06 08:58:25,358:INFO:_master_model_container: 2
2024-04-06 08:58:25,359:INFO:_display_container: 2
2024-04-06 08:58:25,361:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4985, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4985, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-06 08:58:25,361:INFO:compare_models() successfully completed......................................
2024-04-06 08:58:25,363:INFO:Initializing predict_model()
2024-04-06 08:58:25,363:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177668610>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4985, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x107f30720>)
2024-04-06 08:58:25,363:INFO:Checking exceptions
2024-04-06 08:58:25,363:INFO:Preloading libraries
2024-04-06 08:59:05,080:INFO:PyCaret ClassificationExperiment
2024-04-06 08:59:05,081:INFO:Logging name: clf-default-name
2024-04-06 08:59:05,081:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 08:59:05,081:INFO:version 3.3.0
2024-04-06 08:59:05,081:INFO:Initializing setup()
2024-04-06 08:59:05,081:INFO:self.USI: 253e
2024-04-06 08:59:05,081:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 08:59:05,081:INFO:Checking environment
2024-04-06 08:59:05,081:INFO:python_version: 3.11.3
2024-04-06 08:59:05,081:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 08:59:05,081:INFO:machine: arm64
2024-04-06 08:59:05,081:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:59:05,081:INFO:Memory: svmem(total=8589934592, available=1917845504, percent=77.7, used=3001974784, free=115310592, active=1813987328, inactive=1798717440, wired=1187987456)
2024-04-06 08:59:05,081:INFO:Physical Core: 8
2024-04-06 08:59:05,081:INFO:Logical Core: 8
2024-04-06 08:59:05,081:INFO:Checking libraries
2024-04-06 08:59:05,081:INFO:System:
2024-04-06 08:59:05,081:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 08:59:05,081:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 08:59:05,081:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:59:05,081:INFO:PyCaret required dependencies:
2024-04-06 08:59:05,082:INFO:                 pip: 24.0
2024-04-06 08:59:05,082:INFO:          setuptools: 65.5.0
2024-04-06 08:59:05,082:INFO:             pycaret: 3.3.0
2024-04-06 08:59:05,082:INFO:             IPython: 8.23.0
2024-04-06 08:59:05,082:INFO:          ipywidgets: 8.1.2
2024-04-06 08:59:05,082:INFO:                tqdm: 4.66.2
2024-04-06 08:59:05,082:INFO:               numpy: 1.26.4
2024-04-06 08:59:05,082:INFO:              pandas: 2.1.4
2024-04-06 08:59:05,082:INFO:              jinja2: 3.1.3
2024-04-06 08:59:05,082:INFO:               scipy: 1.11.4
2024-04-06 08:59:05,082:INFO:              joblib: 1.3.2
2024-04-06 08:59:05,082:INFO:             sklearn: 1.4.1.post1
2024-04-06 08:59:05,082:INFO:                pyod: 1.1.3
2024-04-06 08:59:05,082:INFO:            imblearn: 0.12.2
2024-04-06 08:59:05,082:INFO:   category_encoders: 2.6.3
2024-04-06 08:59:05,082:INFO:            lightgbm: 4.3.0
2024-04-06 08:59:05,082:INFO:               numba: 0.59.1
2024-04-06 08:59:05,082:INFO:            requests: 2.31.0
2024-04-06 08:59:05,082:INFO:          matplotlib: 3.7.5
2024-04-06 08:59:05,082:INFO:          scikitplot: 0.3.7
2024-04-06 08:59:05,082:INFO:         yellowbrick: 1.5
2024-04-06 08:59:05,082:INFO:              plotly: 5.20.0
2024-04-06 08:59:05,082:INFO:    plotly-resampler: Not installed
2024-04-06 08:59:05,082:INFO:             kaleido: 0.2.1
2024-04-06 08:59:05,082:INFO:           schemdraw: 0.15
2024-04-06 08:59:05,082:INFO:         statsmodels: 0.14.1
2024-04-06 08:59:05,082:INFO:              sktime: 0.28.0
2024-04-06 08:59:05,082:INFO:               tbats: 1.1.3
2024-04-06 08:59:05,082:INFO:            pmdarima: 2.0.4
2024-04-06 08:59:05,082:INFO:              psutil: 5.9.8
2024-04-06 08:59:05,082:INFO:          markupsafe: 2.1.5
2024-04-06 08:59:05,082:INFO:             pickle5: Not installed
2024-04-06 08:59:05,082:INFO:         cloudpickle: 3.0.0
2024-04-06 08:59:05,082:INFO:         deprecation: 2.1.0
2024-04-06 08:59:05,082:INFO:              xxhash: 3.4.1
2024-04-06 08:59:05,082:INFO:           wurlitzer: 3.0.3
2024-04-06 08:59:05,082:INFO:PyCaret optional dependencies:
2024-04-06 08:59:05,082:INFO:                shap: Not installed
2024-04-06 08:59:05,082:INFO:           interpret: Not installed
2024-04-06 08:59:05,082:INFO:                umap: Not installed
2024-04-06 08:59:05,082:INFO:     ydata_profiling: Not installed
2024-04-06 08:59:05,082:INFO:  explainerdashboard: Not installed
2024-04-06 08:59:05,082:INFO:             autoviz: Not installed
2024-04-06 08:59:05,082:INFO:           fairlearn: Not installed
2024-04-06 08:59:05,082:INFO:          deepchecks: Not installed
2024-04-06 08:59:05,082:INFO:             xgboost: Not installed
2024-04-06 08:59:05,082:INFO:            catboost: Not installed
2024-04-06 08:59:05,083:INFO:              kmodes: Not installed
2024-04-06 08:59:05,083:INFO:             mlxtend: Not installed
2024-04-06 08:59:05,083:INFO:       statsforecast: Not installed
2024-04-06 08:59:05,083:INFO:        tune_sklearn: Not installed
2024-04-06 08:59:05,083:INFO:                 ray: Not installed
2024-04-06 08:59:05,083:INFO:            hyperopt: Not installed
2024-04-06 08:59:05,083:INFO:              optuna: Not installed
2024-04-06 08:59:05,083:INFO:               skopt: Not installed
2024-04-06 08:59:05,083:INFO:              mlflow: 2.11.3
2024-04-06 08:59:05,083:INFO:              gradio: Not installed
2024-04-06 08:59:05,083:INFO:             fastapi: Not installed
2024-04-06 08:59:05,083:INFO:             uvicorn: Not installed
2024-04-06 08:59:05,083:INFO:              m2cgen: Not installed
2024-04-06 08:59:05,083:INFO:           evidently: Not installed
2024-04-06 08:59:05,083:INFO:               fugue: Not installed
2024-04-06 08:59:05,083:INFO:           streamlit: 1.33.0
2024-04-06 08:59:05,083:INFO:             prophet: 1.1.5
2024-04-06 08:59:05,083:INFO:None
2024-04-06 08:59:05,083:INFO:Set up data.
2024-04-06 08:59:05,086:INFO:Set up folding strategy.
2024-04-06 08:59:05,086:INFO:Set up train/test split.
2024-04-06 08:59:05,086:INFO:Set up data.
2024-04-06 08:59:20,051:INFO:PyCaret ClassificationExperiment
2024-04-06 08:59:20,051:INFO:Logging name: clf-default-name
2024-04-06 08:59:20,051:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 08:59:20,051:INFO:version 3.3.0
2024-04-06 08:59:20,051:INFO:Initializing setup()
2024-04-06 08:59:20,051:INFO:self.USI: e5ae
2024-04-06 08:59:20,051:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 08:59:20,051:INFO:Checking environment
2024-04-06 08:59:20,051:INFO:python_version: 3.11.3
2024-04-06 08:59:20,051:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 08:59:20,051:INFO:machine: arm64
2024-04-06 08:59:20,051:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:59:20,052:INFO:Memory: svmem(total=8589934592, available=1916780544, percent=77.7, used=3036495872, free=82280448, active=1847001088, inactive=1832976384, wired=1189494784)
2024-04-06 08:59:20,052:INFO:Physical Core: 8
2024-04-06 08:59:20,052:INFO:Logical Core: 8
2024-04-06 08:59:20,052:INFO:Checking libraries
2024-04-06 08:59:20,052:INFO:System:
2024-04-06 08:59:20,052:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 08:59:20,052:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 08:59:20,052:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:59:20,052:INFO:PyCaret required dependencies:
2024-04-06 08:59:20,052:INFO:                 pip: 24.0
2024-04-06 08:59:20,052:INFO:          setuptools: 65.5.0
2024-04-06 08:59:20,052:INFO:             pycaret: 3.3.0
2024-04-06 08:59:20,052:INFO:             IPython: 8.23.0
2024-04-06 08:59:20,052:INFO:          ipywidgets: 8.1.2
2024-04-06 08:59:20,052:INFO:                tqdm: 4.66.2
2024-04-06 08:59:20,052:INFO:               numpy: 1.26.4
2024-04-06 08:59:20,052:INFO:              pandas: 2.1.4
2024-04-06 08:59:20,052:INFO:              jinja2: 3.1.3
2024-04-06 08:59:20,052:INFO:               scipy: 1.11.4
2024-04-06 08:59:20,052:INFO:              joblib: 1.3.2
2024-04-06 08:59:20,052:INFO:             sklearn: 1.4.1.post1
2024-04-06 08:59:20,052:INFO:                pyod: 1.1.3
2024-04-06 08:59:20,052:INFO:            imblearn: 0.12.2
2024-04-06 08:59:20,052:INFO:   category_encoders: 2.6.3
2024-04-06 08:59:20,052:INFO:            lightgbm: 4.3.0
2024-04-06 08:59:20,052:INFO:               numba: 0.59.1
2024-04-06 08:59:20,052:INFO:            requests: 2.31.0
2024-04-06 08:59:20,052:INFO:          matplotlib: 3.7.5
2024-04-06 08:59:20,052:INFO:          scikitplot: 0.3.7
2024-04-06 08:59:20,052:INFO:         yellowbrick: 1.5
2024-04-06 08:59:20,052:INFO:              plotly: 5.20.0
2024-04-06 08:59:20,052:INFO:    plotly-resampler: Not installed
2024-04-06 08:59:20,052:INFO:             kaleido: 0.2.1
2024-04-06 08:59:20,052:INFO:           schemdraw: 0.15
2024-04-06 08:59:20,052:INFO:         statsmodels: 0.14.1
2024-04-06 08:59:20,052:INFO:              sktime: 0.28.0
2024-04-06 08:59:20,052:INFO:               tbats: 1.1.3
2024-04-06 08:59:20,052:INFO:            pmdarima: 2.0.4
2024-04-06 08:59:20,052:INFO:              psutil: 5.9.8
2024-04-06 08:59:20,052:INFO:          markupsafe: 2.1.5
2024-04-06 08:59:20,052:INFO:             pickle5: Not installed
2024-04-06 08:59:20,052:INFO:         cloudpickle: 3.0.0
2024-04-06 08:59:20,052:INFO:         deprecation: 2.1.0
2024-04-06 08:59:20,052:INFO:              xxhash: 3.4.1
2024-04-06 08:59:20,052:INFO:           wurlitzer: 3.0.3
2024-04-06 08:59:20,052:INFO:PyCaret optional dependencies:
2024-04-06 08:59:20,052:INFO:                shap: Not installed
2024-04-06 08:59:20,052:INFO:           interpret: Not installed
2024-04-06 08:59:20,052:INFO:                umap: Not installed
2024-04-06 08:59:20,052:INFO:     ydata_profiling: Not installed
2024-04-06 08:59:20,053:INFO:  explainerdashboard: Not installed
2024-04-06 08:59:20,053:INFO:             autoviz: Not installed
2024-04-06 08:59:20,053:INFO:           fairlearn: Not installed
2024-04-06 08:59:20,053:INFO:          deepchecks: Not installed
2024-04-06 08:59:20,053:INFO:             xgboost: Not installed
2024-04-06 08:59:20,053:INFO:            catboost: Not installed
2024-04-06 08:59:20,053:INFO:              kmodes: Not installed
2024-04-06 08:59:20,053:INFO:             mlxtend: Not installed
2024-04-06 08:59:20,053:INFO:       statsforecast: Not installed
2024-04-06 08:59:20,053:INFO:        tune_sklearn: Not installed
2024-04-06 08:59:20,053:INFO:                 ray: Not installed
2024-04-06 08:59:20,053:INFO:            hyperopt: Not installed
2024-04-06 08:59:20,053:INFO:              optuna: Not installed
2024-04-06 08:59:20,053:INFO:               skopt: Not installed
2024-04-06 08:59:20,053:INFO:              mlflow: 2.11.3
2024-04-06 08:59:20,053:INFO:              gradio: Not installed
2024-04-06 08:59:20,053:INFO:             fastapi: Not installed
2024-04-06 08:59:20,053:INFO:             uvicorn: Not installed
2024-04-06 08:59:20,053:INFO:              m2cgen: Not installed
2024-04-06 08:59:20,053:INFO:           evidently: Not installed
2024-04-06 08:59:20,053:INFO:               fugue: Not installed
2024-04-06 08:59:20,053:INFO:           streamlit: 1.33.0
2024-04-06 08:59:20,053:INFO:             prophet: 1.1.5
2024-04-06 08:59:20,053:INFO:None
2024-04-06 08:59:20,053:INFO:Set up data.
2024-04-06 08:59:20,055:INFO:Set up folding strategy.
2024-04-06 08:59:20,055:INFO:Set up train/test split.
2024-04-06 08:59:20,055:INFO:Set up data.
2024-04-06 08:59:38,519:INFO:PyCaret ClassificationExperiment
2024-04-06 08:59:38,519:INFO:Logging name: clf-default-name
2024-04-06 08:59:38,519:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 08:59:38,519:INFO:version 3.3.0
2024-04-06 08:59:38,519:INFO:Initializing setup()
2024-04-06 08:59:38,519:INFO:self.USI: a659
2024-04-06 08:59:38,519:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 08:59:38,519:INFO:Checking environment
2024-04-06 08:59:38,519:INFO:python_version: 3.11.3
2024-04-06 08:59:38,519:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 08:59:38,519:INFO:machine: arm64
2024-04-06 08:59:38,519:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:59:38,519:INFO:Memory: svmem(total=8589934592, available=1922252800, percent=77.6, used=3064266752, free=61046784, active=1870151680, inactive=1848721408, wired=1194115072)
2024-04-06 08:59:38,519:INFO:Physical Core: 8
2024-04-06 08:59:38,519:INFO:Logical Core: 8
2024-04-06 08:59:38,519:INFO:Checking libraries
2024-04-06 08:59:38,519:INFO:System:
2024-04-06 08:59:38,519:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 08:59:38,519:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 08:59:38,519:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 08:59:38,519:INFO:PyCaret required dependencies:
2024-04-06 08:59:38,519:INFO:                 pip: 24.0
2024-04-06 08:59:38,519:INFO:          setuptools: 65.5.0
2024-04-06 08:59:38,519:INFO:             pycaret: 3.3.0
2024-04-06 08:59:38,519:INFO:             IPython: 8.23.0
2024-04-06 08:59:38,519:INFO:          ipywidgets: 8.1.2
2024-04-06 08:59:38,519:INFO:                tqdm: 4.66.2
2024-04-06 08:59:38,519:INFO:               numpy: 1.26.4
2024-04-06 08:59:38,519:INFO:              pandas: 2.1.4
2024-04-06 08:59:38,519:INFO:              jinja2: 3.1.3
2024-04-06 08:59:38,519:INFO:               scipy: 1.11.4
2024-04-06 08:59:38,519:INFO:              joblib: 1.3.2
2024-04-06 08:59:38,519:INFO:             sklearn: 1.4.1.post1
2024-04-06 08:59:38,519:INFO:                pyod: 1.1.3
2024-04-06 08:59:38,519:INFO:            imblearn: 0.12.2
2024-04-06 08:59:38,519:INFO:   category_encoders: 2.6.3
2024-04-06 08:59:38,519:INFO:            lightgbm: 4.3.0
2024-04-06 08:59:38,519:INFO:               numba: 0.59.1
2024-04-06 08:59:38,519:INFO:            requests: 2.31.0
2024-04-06 08:59:38,519:INFO:          matplotlib: 3.7.5
2024-04-06 08:59:38,519:INFO:          scikitplot: 0.3.7
2024-04-06 08:59:38,519:INFO:         yellowbrick: 1.5
2024-04-06 08:59:38,519:INFO:              plotly: 5.20.0
2024-04-06 08:59:38,519:INFO:    plotly-resampler: Not installed
2024-04-06 08:59:38,519:INFO:             kaleido: 0.2.1
2024-04-06 08:59:38,519:INFO:           schemdraw: 0.15
2024-04-06 08:59:38,520:INFO:         statsmodels: 0.14.1
2024-04-06 08:59:38,520:INFO:              sktime: 0.28.0
2024-04-06 08:59:38,520:INFO:               tbats: 1.1.3
2024-04-06 08:59:38,520:INFO:            pmdarima: 2.0.4
2024-04-06 08:59:38,520:INFO:              psutil: 5.9.8
2024-04-06 08:59:38,520:INFO:          markupsafe: 2.1.5
2024-04-06 08:59:38,520:INFO:             pickle5: Not installed
2024-04-06 08:59:38,520:INFO:         cloudpickle: 3.0.0
2024-04-06 08:59:38,520:INFO:         deprecation: 2.1.0
2024-04-06 08:59:38,520:INFO:              xxhash: 3.4.1
2024-04-06 08:59:38,520:INFO:           wurlitzer: 3.0.3
2024-04-06 08:59:38,520:INFO:PyCaret optional dependencies:
2024-04-06 08:59:38,520:INFO:                shap: Not installed
2024-04-06 08:59:38,520:INFO:           interpret: Not installed
2024-04-06 08:59:38,520:INFO:                umap: Not installed
2024-04-06 08:59:38,520:INFO:     ydata_profiling: Not installed
2024-04-06 08:59:38,520:INFO:  explainerdashboard: Not installed
2024-04-06 08:59:38,520:INFO:             autoviz: Not installed
2024-04-06 08:59:38,520:INFO:           fairlearn: Not installed
2024-04-06 08:59:38,520:INFO:          deepchecks: Not installed
2024-04-06 08:59:38,520:INFO:             xgboost: Not installed
2024-04-06 08:59:38,520:INFO:            catboost: Not installed
2024-04-06 08:59:38,520:INFO:              kmodes: Not installed
2024-04-06 08:59:38,520:INFO:             mlxtend: Not installed
2024-04-06 08:59:38,520:INFO:       statsforecast: Not installed
2024-04-06 08:59:38,520:INFO:        tune_sklearn: Not installed
2024-04-06 08:59:38,520:INFO:                 ray: Not installed
2024-04-06 08:59:38,520:INFO:            hyperopt: Not installed
2024-04-06 08:59:38,520:INFO:              optuna: Not installed
2024-04-06 08:59:38,520:INFO:               skopt: Not installed
2024-04-06 08:59:38,520:INFO:              mlflow: 2.11.3
2024-04-06 08:59:38,520:INFO:              gradio: Not installed
2024-04-06 08:59:38,520:INFO:             fastapi: Not installed
2024-04-06 08:59:38,520:INFO:             uvicorn: Not installed
2024-04-06 08:59:38,520:INFO:              m2cgen: Not installed
2024-04-06 08:59:38,520:INFO:           evidently: Not installed
2024-04-06 08:59:38,520:INFO:               fugue: Not installed
2024-04-06 08:59:38,520:INFO:           streamlit: 1.33.0
2024-04-06 08:59:38,520:INFO:             prophet: 1.1.5
2024-04-06 08:59:38,520:INFO:None
2024-04-06 08:59:38,520:INFO:Set up data.
2024-04-06 08:59:38,522:INFO:Set up folding strategy.
2024-04-06 08:59:38,522:INFO:Set up train/test split.
2024-04-06 08:59:38,522:INFO:Set up data.
2024-04-06 08:59:38,525:INFO:Set up index.
2024-04-06 08:59:38,525:INFO:Assigning column types.
2024-04-06 08:59:38,528:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 08:59:38,551:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 08:59:38,552:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:59:38,565:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:59:38,565:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:59:38,584:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 08:59:38,584:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:59:38,596:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:59:38,596:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:59:38,596:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 08:59:38,614:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:59:38,625:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:59:38,625:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:59:38,643:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 08:59:38,654:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:59:38,654:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:59:38,654:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 08:59:38,683:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:59:38,684:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:59:38,713:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:59:38,713:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:59:38,713:INFO:Preparing preprocessing pipeline...
2024-04-06 08:59:38,714:INFO:Set up simple imputation.
2024-04-06 08:59:38,714:INFO:Set up feature normalization.
2024-04-06 08:59:38,725:INFO:Finished creating preprocessing pipeline.
2024-04-06 08:59:38,726:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 08:59:38,726:INFO:Creating final display dataframe.
2024-04-06 08:59:38,757:INFO:Setup _display_container:                     Description             Value
0                    Session id              5749
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              a659
2024-04-06 08:59:38,790:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:59:38,790:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:59:38,820:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:59:38,820:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 08:59:38,820:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 08:59:38,821:INFO:setup() successfully completed in 0.3s...............
2024-04-06 08:59:38,821:INFO:Initializing compare_models()
2024-04-06 08:59:38,821:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1749824d0>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x1749824d0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 08:59:38,821:INFO:Checking exceptions
2024-04-06 08:59:38,823:INFO:Preparing display monitor
2024-04-06 08:59:38,831:INFO:Initializing Logistic Regression
2024-04-06 08:59:38,832:INFO:Total runtime is 3.2703081766764323e-06 minutes
2024-04-06 08:59:38,833:INFO:SubProcess create_model() called ==================================
2024-04-06 08:59:38,833:INFO:Initializing create_model()
2024-04-06 08:59:38,833:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1749824d0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x177bda010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:59:38,833:INFO:Checking exceptions
2024-04-06 08:59:38,833:INFO:Importing libraries
2024-04-06 08:59:38,833:INFO:Copying training dataset
2024-04-06 08:59:38,837:INFO:Defining folds
2024-04-06 08:59:38,837:INFO:Declaring metric variables
2024-04-06 08:59:38,839:INFO:Importing untrained model
2024-04-06 08:59:38,853:INFO:Logistic Regression Imported successfully
2024-04-06 08:59:38,868:INFO:Starting cross validation
2024-04-06 08:59:38,869:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 08:59:39,013:INFO:Calculating mean and std
2024-04-06 08:59:39,013:INFO:Creating metrics dataframe
2024-04-06 08:59:39,014:INFO:Uploading results into container
2024-04-06 08:59:39,014:INFO:Uploading model into container now
2024-04-06 08:59:39,014:INFO:_master_model_container: 1
2024-04-06 08:59:39,014:INFO:_display_container: 2
2024-04-06 08:59:39,014:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5749, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 08:59:39,014:INFO:create_model() successfully completed......................................
2024-04-06 08:59:39,154:INFO:SubProcess create_model() end ==================================
2024-04-06 08:59:39,154:INFO:Creating metrics dataframe
2024-04-06 08:59:39,157:INFO:Initializing Decision Tree Classifier
2024-04-06 08:59:39,157:INFO:Total runtime is 0.0054217179616292315 minutes
2024-04-06 08:59:39,158:INFO:SubProcess create_model() called ==================================
2024-04-06 08:59:39,158:INFO:Initializing create_model()
2024-04-06 08:59:39,158:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1749824d0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x177bda010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:59:39,158:INFO:Checking exceptions
2024-04-06 08:59:39,158:INFO:Importing libraries
2024-04-06 08:59:39,158:INFO:Copying training dataset
2024-04-06 08:59:39,161:INFO:Defining folds
2024-04-06 08:59:39,161:INFO:Declaring metric variables
2024-04-06 08:59:39,162:INFO:Importing untrained model
2024-04-06 08:59:39,163:INFO:Decision Tree Classifier Imported successfully
2024-04-06 08:59:39,165:INFO:Starting cross validation
2024-04-06 08:59:39,165:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 08:59:39,235:INFO:Calculating mean and std
2024-04-06 08:59:39,235:INFO:Creating metrics dataframe
2024-04-06 08:59:39,236:INFO:Uploading results into container
2024-04-06 08:59:39,236:INFO:Uploading model into container now
2024-04-06 08:59:39,236:INFO:_master_model_container: 2
2024-04-06 08:59:39,236:INFO:_display_container: 2
2024-04-06 08:59:39,236:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5749, splitter='best')
2024-04-06 08:59:39,236:INFO:create_model() successfully completed......................................
2024-04-06 08:59:39,310:INFO:SubProcess create_model() end ==================================
2024-04-06 08:59:39,310:INFO:Creating metrics dataframe
2024-04-06 08:59:39,313:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 08:59:39,315:INFO:Initializing create_model()
2024-04-06 08:59:39,315:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1749824d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5749, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:59:39,315:INFO:Checking exceptions
2024-04-06 08:59:39,316:INFO:Importing libraries
2024-04-06 08:59:39,316:INFO:Copying training dataset
2024-04-06 08:59:39,318:INFO:Defining folds
2024-04-06 08:59:39,318:INFO:Declaring metric variables
2024-04-06 08:59:39,318:INFO:Importing untrained model
2024-04-06 08:59:39,318:INFO:Declaring custom model
2024-04-06 08:59:39,318:INFO:Decision Tree Classifier Imported successfully
2024-04-06 08:59:39,319:INFO:Cross validation set to False
2024-04-06 08:59:39,319:INFO:Fitting Model
2024-04-06 08:59:39,332:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5749, splitter='best')
2024-04-06 08:59:39,332:INFO:create_model() successfully completed......................................
2024-04-06 08:59:39,409:INFO:Initializing create_model()
2024-04-06 08:59:39,409:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1749824d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5749, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 08:59:39,409:INFO:Checking exceptions
2024-04-06 08:59:39,409:INFO:Importing libraries
2024-04-06 08:59:39,409:INFO:Copying training dataset
2024-04-06 08:59:39,411:INFO:Defining folds
2024-04-06 08:59:39,411:INFO:Declaring metric variables
2024-04-06 08:59:39,412:INFO:Importing untrained model
2024-04-06 08:59:39,412:INFO:Declaring custom model
2024-04-06 08:59:39,412:INFO:Logistic Regression Imported successfully
2024-04-06 08:59:39,412:INFO:Cross validation set to False
2024-04-06 08:59:39,412:INFO:Fitting Model
2024-04-06 08:59:39,422:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5749, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 08:59:39,422:INFO:create_model() successfully completed......................................
2024-04-06 08:59:39,562:INFO:_master_model_container: 2
2024-04-06 08:59:39,562:INFO:_display_container: 2
2024-04-06 08:59:39,563:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5749, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5749, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-06 08:59:39,563:INFO:compare_models() successfully completed......................................
2024-04-06 08:59:39,564:INFO:Initializing predict_model()
2024-04-06 08:59:39,564:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1749824d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5749, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x308096200>)
2024-04-06 08:59:39,564:INFO:Checking exceptions
2024-04-06 08:59:39,564:INFO:Preloading libraries
2024-04-06 09:01:08,129:INFO:PyCaret ClassificationExperiment
2024-04-06 09:01:08,129:INFO:Logging name: clf-default-name
2024-04-06 09:01:08,129:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 09:01:08,129:INFO:version 3.3.0
2024-04-06 09:01:08,129:INFO:Initializing setup()
2024-04-06 09:01:08,129:INFO:self.USI: d550
2024-04-06 09:01:08,129:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 09:01:08,129:INFO:Checking environment
2024-04-06 09:01:08,129:INFO:python_version: 3.11.3
2024-04-06 09:01:08,129:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 09:01:08,129:INFO:machine: arm64
2024-04-06 09:01:08,129:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 09:01:08,129:INFO:Memory: svmem(total=8589934592, available=1931198464, percent=77.5, used=3050536960, free=62914560, active=1876017152, inactive=1867726848, wired=1174519808)
2024-04-06 09:01:08,129:INFO:Physical Core: 8
2024-04-06 09:01:08,129:INFO:Logical Core: 8
2024-04-06 09:01:08,129:INFO:Checking libraries
2024-04-06 09:01:08,129:INFO:System:
2024-04-06 09:01:08,129:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 09:01:08,129:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 09:01:08,129:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 09:01:08,129:INFO:PyCaret required dependencies:
2024-04-06 09:01:08,129:INFO:                 pip: 24.0
2024-04-06 09:01:08,130:INFO:          setuptools: 65.5.0
2024-04-06 09:01:08,130:INFO:             pycaret: 3.3.0
2024-04-06 09:01:08,130:INFO:             IPython: 8.23.0
2024-04-06 09:01:08,130:INFO:          ipywidgets: 8.1.2
2024-04-06 09:01:08,130:INFO:                tqdm: 4.66.2
2024-04-06 09:01:08,130:INFO:               numpy: 1.26.4
2024-04-06 09:01:08,130:INFO:              pandas: 2.1.4
2024-04-06 09:01:08,130:INFO:              jinja2: 3.1.3
2024-04-06 09:01:08,130:INFO:               scipy: 1.11.4
2024-04-06 09:01:08,130:INFO:              joblib: 1.3.2
2024-04-06 09:01:08,130:INFO:             sklearn: 1.4.1.post1
2024-04-06 09:01:08,130:INFO:                pyod: 1.1.3
2024-04-06 09:01:08,130:INFO:            imblearn: 0.12.2
2024-04-06 09:01:08,130:INFO:   category_encoders: 2.6.3
2024-04-06 09:01:08,130:INFO:            lightgbm: 4.3.0
2024-04-06 09:01:08,130:INFO:               numba: 0.59.1
2024-04-06 09:01:08,130:INFO:            requests: 2.31.0
2024-04-06 09:01:08,130:INFO:          matplotlib: 3.7.5
2024-04-06 09:01:08,130:INFO:          scikitplot: 0.3.7
2024-04-06 09:01:08,130:INFO:         yellowbrick: 1.5
2024-04-06 09:01:08,130:INFO:              plotly: 5.20.0
2024-04-06 09:01:08,130:INFO:    plotly-resampler: Not installed
2024-04-06 09:01:08,130:INFO:             kaleido: 0.2.1
2024-04-06 09:01:08,130:INFO:           schemdraw: 0.15
2024-04-06 09:01:08,130:INFO:         statsmodels: 0.14.1
2024-04-06 09:01:08,130:INFO:              sktime: 0.28.0
2024-04-06 09:01:08,130:INFO:               tbats: 1.1.3
2024-04-06 09:01:08,130:INFO:            pmdarima: 2.0.4
2024-04-06 09:01:08,130:INFO:              psutil: 5.9.8
2024-04-06 09:01:08,130:INFO:          markupsafe: 2.1.5
2024-04-06 09:01:08,130:INFO:             pickle5: Not installed
2024-04-06 09:01:08,130:INFO:         cloudpickle: 3.0.0
2024-04-06 09:01:08,130:INFO:         deprecation: 2.1.0
2024-04-06 09:01:08,130:INFO:              xxhash: 3.4.1
2024-04-06 09:01:08,130:INFO:           wurlitzer: 3.0.3
2024-04-06 09:01:08,130:INFO:PyCaret optional dependencies:
2024-04-06 09:01:08,130:INFO:                shap: Not installed
2024-04-06 09:01:08,130:INFO:           interpret: Not installed
2024-04-06 09:01:08,130:INFO:                umap: Not installed
2024-04-06 09:01:08,130:INFO:     ydata_profiling: Not installed
2024-04-06 09:01:08,130:INFO:  explainerdashboard: Not installed
2024-04-06 09:01:08,130:INFO:             autoviz: Not installed
2024-04-06 09:01:08,130:INFO:           fairlearn: Not installed
2024-04-06 09:01:08,130:INFO:          deepchecks: Not installed
2024-04-06 09:01:08,130:INFO:             xgboost: Not installed
2024-04-06 09:01:08,130:INFO:            catboost: Not installed
2024-04-06 09:01:08,130:INFO:              kmodes: Not installed
2024-04-06 09:01:08,130:INFO:             mlxtend: Not installed
2024-04-06 09:01:08,130:INFO:       statsforecast: Not installed
2024-04-06 09:01:08,130:INFO:        tune_sklearn: Not installed
2024-04-06 09:01:08,130:INFO:                 ray: Not installed
2024-04-06 09:01:08,130:INFO:            hyperopt: Not installed
2024-04-06 09:01:08,130:INFO:              optuna: Not installed
2024-04-06 09:01:08,130:INFO:               skopt: Not installed
2024-04-06 09:01:08,130:INFO:              mlflow: 2.11.3
2024-04-06 09:01:08,130:INFO:              gradio: Not installed
2024-04-06 09:01:08,130:INFO:             fastapi: Not installed
2024-04-06 09:01:08,130:INFO:             uvicorn: Not installed
2024-04-06 09:01:08,130:INFO:              m2cgen: Not installed
2024-04-06 09:01:08,130:INFO:           evidently: Not installed
2024-04-06 09:01:08,130:INFO:               fugue: Not installed
2024-04-06 09:01:08,130:INFO:           streamlit: 1.33.0
2024-04-06 09:01:08,130:INFO:             prophet: 1.1.5
2024-04-06 09:01:08,130:INFO:None
2024-04-06 09:01:08,130:INFO:Set up data.
2024-04-06 09:01:08,134:INFO:Set up folding strategy.
2024-04-06 09:01:08,134:INFO:Set up train/test split.
2024-04-06 09:01:08,134:INFO:Set up data.
2024-04-06 09:01:08,135:INFO:Set up index.
2024-04-06 09:01:08,136:INFO:Assigning column types.
2024-04-06 09:01:08,138:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 09:01:08,157:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 09:01:08,157:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:01:08,169:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:01:08,169:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:01:08,187:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 09:01:08,188:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:01:08,199:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:01:08,199:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:01:08,199:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 09:01:08,217:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:01:08,228:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:01:08,229:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:01:08,247:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:01:08,258:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:01:08,258:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:01:08,258:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 09:01:08,287:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:01:08,287:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:01:08,317:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:01:08,317:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:01:08,318:INFO:Preparing preprocessing pipeline...
2024-04-06 09:01:08,318:INFO:Set up simple imputation.
2024-04-06 09:01:08,319:INFO:Set up feature normalization.
2024-04-06 09:01:08,330:INFO:Finished creating preprocessing pipeline.
2024-04-06 09:01:08,332:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 09:01:08,332:INFO:Creating final display dataframe.
2024-04-06 09:01:08,364:INFO:Setup _display_container:                     Description             Value
0                    Session id              6068
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              d550
2024-04-06 09:01:08,410:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:01:08,411:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:01:08,446:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:01:08,447:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:01:08,447:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 09:01:08,448:INFO:setup() successfully completed in 0.32s...............
2024-04-06 09:01:08,451:INFO:Initializing compare_models()
2024-04-06 09:01:08,451:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3081eee90>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x3081eee90>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 09:01:08,451:INFO:Checking exceptions
2024-04-06 09:01:08,453:INFO:Preparing display monitor
2024-04-06 09:01:08,473:INFO:Initializing Logistic Regression
2024-04-06 09:01:08,474:INFO:Total runtime is 2.932548522949219e-06 minutes
2024-04-06 09:01:08,476:INFO:SubProcess create_model() called ==================================
2024-04-06 09:01:08,476:INFO:Initializing create_model()
2024-04-06 09:01:08,476:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3081eee90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x175618190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:01:08,477:INFO:Checking exceptions
2024-04-06 09:01:08,477:INFO:Importing libraries
2024-04-06 09:01:08,477:INFO:Copying training dataset
2024-04-06 09:01:08,481:INFO:Defining folds
2024-04-06 09:01:08,481:INFO:Declaring metric variables
2024-04-06 09:01:08,483:INFO:Importing untrained model
2024-04-06 09:01:08,484:INFO:Logistic Regression Imported successfully
2024-04-06 09:01:08,489:INFO:Starting cross validation
2024-04-06 09:01:08,490:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:01:08,610:INFO:Calculating mean and std
2024-04-06 09:01:08,610:INFO:Creating metrics dataframe
2024-04-06 09:01:08,611:INFO:Uploading results into container
2024-04-06 09:01:08,611:INFO:Uploading model into container now
2024-04-06 09:01:08,611:INFO:_master_model_container: 1
2024-04-06 09:01:08,611:INFO:_display_container: 2
2024-04-06 09:01:08,611:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6068, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:01:08,611:INFO:create_model() successfully completed......................................
2024-04-06 09:01:08,738:INFO:SubProcess create_model() end ==================================
2024-04-06 09:01:08,738:INFO:Creating metrics dataframe
2024-04-06 09:01:08,740:INFO:Initializing Decision Tree Classifier
2024-04-06 09:01:08,740:INFO:Total runtime is 0.004445203145345052 minutes
2024-04-06 09:01:08,741:INFO:SubProcess create_model() called ==================================
2024-04-06 09:01:08,741:INFO:Initializing create_model()
2024-04-06 09:01:08,741:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3081eee90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x175618190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:01:08,741:INFO:Checking exceptions
2024-04-06 09:01:08,741:INFO:Importing libraries
2024-04-06 09:01:08,742:INFO:Copying training dataset
2024-04-06 09:01:08,744:INFO:Defining folds
2024-04-06 09:01:08,744:INFO:Declaring metric variables
2024-04-06 09:01:08,745:INFO:Importing untrained model
2024-04-06 09:01:08,747:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:01:08,749:INFO:Starting cross validation
2024-04-06 09:01:08,749:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:01:08,841:INFO:Calculating mean and std
2024-04-06 09:01:08,841:INFO:Creating metrics dataframe
2024-04-06 09:01:08,842:INFO:Uploading results into container
2024-04-06 09:01:08,842:INFO:Uploading model into container now
2024-04-06 09:01:08,842:INFO:_master_model_container: 2
2024-04-06 09:01:08,842:INFO:_display_container: 2
2024-04-06 09:01:08,842:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6068, splitter='best')
2024-04-06 09:01:08,842:INFO:create_model() successfully completed......................................
2024-04-06 09:01:08,920:INFO:SubProcess create_model() end ==================================
2024-04-06 09:01:08,920:INFO:Creating metrics dataframe
2024-04-06 09:01:08,923:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 09:01:08,927:INFO:Initializing create_model()
2024-04-06 09:01:08,927:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3081eee90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6068, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:01:08,927:INFO:Checking exceptions
2024-04-06 09:01:08,928:INFO:Importing libraries
2024-04-06 09:01:08,928:INFO:Copying training dataset
2024-04-06 09:01:08,934:INFO:Defining folds
2024-04-06 09:01:08,934:INFO:Declaring metric variables
2024-04-06 09:01:08,934:INFO:Importing untrained model
2024-04-06 09:01:08,934:INFO:Declaring custom model
2024-04-06 09:01:08,934:INFO:Logistic Regression Imported successfully
2024-04-06 09:01:08,934:INFO:Cross validation set to False
2024-04-06 09:01:08,934:INFO:Fitting Model
2024-04-06 09:01:08,963:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6068, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:01:08,963:INFO:create_model() successfully completed......................................
2024-04-06 09:01:09,143:INFO:Initializing create_model()
2024-04-06 09:01:09,143:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3081eee90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6068, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:01:09,143:INFO:Checking exceptions
2024-04-06 09:01:09,146:INFO:Importing libraries
2024-04-06 09:01:09,147:INFO:Copying training dataset
2024-04-06 09:01:09,152:INFO:Defining folds
2024-04-06 09:01:09,153:INFO:Declaring metric variables
2024-04-06 09:01:09,153:INFO:Importing untrained model
2024-04-06 09:01:09,153:INFO:Declaring custom model
2024-04-06 09:01:09,153:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:01:09,158:INFO:Cross validation set to False
2024-04-06 09:01:09,158:INFO:Fitting Model
2024-04-06 09:01:09,184:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6068, splitter='best')
2024-04-06 09:01:09,185:INFO:create_model() successfully completed......................................
2024-04-06 09:01:09,283:INFO:_master_model_container: 2
2024-04-06 09:01:09,283:INFO:_display_container: 2
2024-04-06 09:01:09,283:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6068, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6068, splitter='best')]
2024-04-06 09:01:09,284:INFO:compare_models() successfully completed......................................
2024-04-06 09:01:09,284:INFO:Initializing predict_model()
2024-04-06 09:01:09,284:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3081eee90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6068, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1778fade0>)
2024-04-06 09:01:09,284:INFO:Checking exceptions
2024-04-06 09:01:09,284:INFO:Preloading libraries
2024-04-06 09:01:09,916:INFO:Initializing predict_model()
2024-04-06 09:01:09,916:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3081eee90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6068, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x177a551c0>)
2024-04-06 09:01:09,916:INFO:Checking exceptions
2024-04-06 09:01:09,916:INFO:Preloading libraries
2024-04-06 09:02:07,029:INFO:PyCaret ClassificationExperiment
2024-04-06 09:02:07,029:INFO:Logging name: clf-default-name
2024-04-06 09:02:07,029:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 09:02:07,029:INFO:version 3.3.0
2024-04-06 09:02:07,029:INFO:Initializing setup()
2024-04-06 09:02:07,029:INFO:self.USI: a7b5
2024-04-06 09:02:07,029:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 09:02:07,029:INFO:Checking environment
2024-04-06 09:02:07,030:INFO:python_version: 3.11.3
2024-04-06 09:02:07,030:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 09:02:07,030:INFO:machine: arm64
2024-04-06 09:02:07,030:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 09:02:07,030:INFO:Memory: svmem(total=8589934592, available=1830715392, percent=78.7, used=3022012416, free=40337408, active=1805959168, inactive=1772519424, wired=1216053248)
2024-04-06 09:02:07,030:INFO:Physical Core: 8
2024-04-06 09:02:07,030:INFO:Logical Core: 8
2024-04-06 09:02:07,030:INFO:Checking libraries
2024-04-06 09:02:07,030:INFO:System:
2024-04-06 09:02:07,030:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 09:02:07,030:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 09:02:07,030:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 09:02:07,030:INFO:PyCaret required dependencies:
2024-04-06 09:02:07,030:INFO:                 pip: 24.0
2024-04-06 09:02:07,030:INFO:          setuptools: 65.5.0
2024-04-06 09:02:07,030:INFO:             pycaret: 3.3.0
2024-04-06 09:02:07,030:INFO:             IPython: 8.23.0
2024-04-06 09:02:07,031:INFO:          ipywidgets: 8.1.2
2024-04-06 09:02:07,031:INFO:                tqdm: 4.66.2
2024-04-06 09:02:07,031:INFO:               numpy: 1.26.4
2024-04-06 09:02:07,031:INFO:              pandas: 2.1.4
2024-04-06 09:02:07,031:INFO:              jinja2: 3.1.3
2024-04-06 09:02:07,031:INFO:               scipy: 1.11.4
2024-04-06 09:02:07,031:INFO:              joblib: 1.3.2
2024-04-06 09:02:07,031:INFO:             sklearn: 1.4.1.post1
2024-04-06 09:02:07,031:INFO:                pyod: 1.1.3
2024-04-06 09:02:07,031:INFO:            imblearn: 0.12.2
2024-04-06 09:02:07,031:INFO:   category_encoders: 2.6.3
2024-04-06 09:02:07,031:INFO:            lightgbm: 4.3.0
2024-04-06 09:02:07,031:INFO:               numba: 0.59.1
2024-04-06 09:02:07,031:INFO:            requests: 2.31.0
2024-04-06 09:02:07,031:INFO:          matplotlib: 3.7.5
2024-04-06 09:02:07,031:INFO:          scikitplot: 0.3.7
2024-04-06 09:02:07,031:INFO:         yellowbrick: 1.5
2024-04-06 09:02:07,031:INFO:              plotly: 5.20.0
2024-04-06 09:02:07,031:INFO:    plotly-resampler: Not installed
2024-04-06 09:02:07,031:INFO:             kaleido: 0.2.1
2024-04-06 09:02:07,031:INFO:           schemdraw: 0.15
2024-04-06 09:02:07,031:INFO:         statsmodels: 0.14.1
2024-04-06 09:02:07,031:INFO:              sktime: 0.28.0
2024-04-06 09:02:07,031:INFO:               tbats: 1.1.3
2024-04-06 09:02:07,031:INFO:            pmdarima: 2.0.4
2024-04-06 09:02:07,031:INFO:              psutil: 5.9.8
2024-04-06 09:02:07,031:INFO:          markupsafe: 2.1.5
2024-04-06 09:02:07,031:INFO:             pickle5: Not installed
2024-04-06 09:02:07,031:INFO:         cloudpickle: 3.0.0
2024-04-06 09:02:07,031:INFO:         deprecation: 2.1.0
2024-04-06 09:02:07,031:INFO:              xxhash: 3.4.1
2024-04-06 09:02:07,031:INFO:           wurlitzer: 3.0.3
2024-04-06 09:02:07,031:INFO:PyCaret optional dependencies:
2024-04-06 09:02:07,031:INFO:                shap: Not installed
2024-04-06 09:02:07,031:INFO:           interpret: Not installed
2024-04-06 09:02:07,031:INFO:                umap: Not installed
2024-04-06 09:02:07,031:INFO:     ydata_profiling: Not installed
2024-04-06 09:02:07,031:INFO:  explainerdashboard: Not installed
2024-04-06 09:02:07,031:INFO:             autoviz: Not installed
2024-04-06 09:02:07,031:INFO:           fairlearn: Not installed
2024-04-06 09:02:07,031:INFO:          deepchecks: Not installed
2024-04-06 09:02:07,031:INFO:             xgboost: Not installed
2024-04-06 09:02:07,031:INFO:            catboost: Not installed
2024-04-06 09:02:07,031:INFO:              kmodes: Not installed
2024-04-06 09:02:07,031:INFO:             mlxtend: Not installed
2024-04-06 09:02:07,031:INFO:       statsforecast: Not installed
2024-04-06 09:02:07,031:INFO:        tune_sklearn: Not installed
2024-04-06 09:02:07,031:INFO:                 ray: Not installed
2024-04-06 09:02:07,031:INFO:            hyperopt: Not installed
2024-04-06 09:02:07,031:INFO:              optuna: Not installed
2024-04-06 09:02:07,031:INFO:               skopt: Not installed
2024-04-06 09:02:07,031:INFO:              mlflow: 2.11.3
2024-04-06 09:02:07,031:INFO:              gradio: Not installed
2024-04-06 09:02:07,031:INFO:             fastapi: Not installed
2024-04-06 09:02:07,031:INFO:             uvicorn: Not installed
2024-04-06 09:02:07,031:INFO:              m2cgen: Not installed
2024-04-06 09:02:07,031:INFO:           evidently: Not installed
2024-04-06 09:02:07,031:INFO:               fugue: Not installed
2024-04-06 09:02:07,031:INFO:           streamlit: 1.33.0
2024-04-06 09:02:07,031:INFO:             prophet: 1.1.5
2024-04-06 09:02:07,031:INFO:None
2024-04-06 09:02:07,031:INFO:Set up data.
2024-04-06 09:02:07,039:INFO:Set up folding strategy.
2024-04-06 09:02:07,039:INFO:Set up train/test split.
2024-04-06 09:02:07,039:INFO:Set up data.
2024-04-06 09:02:07,042:INFO:Set up index.
2024-04-06 09:02:07,043:INFO:Assigning column types.
2024-04-06 09:02:07,048:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 09:02:07,068:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 09:02:07,069:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:02:07,081:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:07,081:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:07,100:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 09:02:07,100:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:02:07,115:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:07,115:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:07,115:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 09:02:07,133:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:02:07,145:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:07,145:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:07,163:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:02:07,175:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:07,175:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:07,175:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 09:02:07,204:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:07,205:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:07,234:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:07,235:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:07,235:INFO:Preparing preprocessing pipeline...
2024-04-06 09:02:07,236:INFO:Set up simple imputation.
2024-04-06 09:02:07,236:INFO:Set up feature normalization.
2024-04-06 09:02:07,247:INFO:Finished creating preprocessing pipeline.
2024-04-06 09:02:07,248:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 09:02:07,248:INFO:Creating final display dataframe.
2024-04-06 09:02:07,277:INFO:Setup _display_container:                     Description             Value
0                    Session id              2063
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              a7b5
2024-04-06 09:02:07,310:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:07,310:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:07,340:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:07,341:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:07,341:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 09:02:07,341:INFO:setup() successfully completed in 0.32s...............
2024-04-06 09:02:07,342:INFO:Initializing compare_models()
2024-04-06 09:02:07,342:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177668ad0>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x177668ad0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 09:02:07,342:INFO:Checking exceptions
2024-04-06 09:02:07,344:INFO:Preparing display monitor
2024-04-06 09:02:07,352:INFO:Initializing Logistic Regression
2024-04-06 09:02:07,352:INFO:Total runtime is 3.047784169514974e-06 minutes
2024-04-06 09:02:07,354:INFO:SubProcess create_model() called ==================================
2024-04-06 09:02:07,355:INFO:Initializing create_model()
2024-04-06 09:02:07,355:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177668ad0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x173fad990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:02:07,355:INFO:Checking exceptions
2024-04-06 09:02:07,355:INFO:Importing libraries
2024-04-06 09:02:07,355:INFO:Copying training dataset
2024-04-06 09:02:07,358:INFO:Defining folds
2024-04-06 09:02:07,358:INFO:Declaring metric variables
2024-04-06 09:02:07,373:INFO:Importing untrained model
2024-04-06 09:02:07,384:INFO:Logistic Regression Imported successfully
2024-04-06 09:02:07,396:INFO:Starting cross validation
2024-04-06 09:02:07,397:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:02:07,554:INFO:Calculating mean and std
2024-04-06 09:02:07,554:INFO:Creating metrics dataframe
2024-04-06 09:02:07,555:INFO:Uploading results into container
2024-04-06 09:02:07,555:INFO:Uploading model into container now
2024-04-06 09:02:07,555:INFO:_master_model_container: 1
2024-04-06 09:02:07,555:INFO:_display_container: 2
2024-04-06 09:02:07,555:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2063, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:02:07,555:INFO:create_model() successfully completed......................................
2024-04-06 09:02:07,661:INFO:SubProcess create_model() end ==================================
2024-04-06 09:02:07,661:INFO:Creating metrics dataframe
2024-04-06 09:02:07,664:INFO:Initializing Decision Tree Classifier
2024-04-06 09:02:07,664:INFO:Total runtime is 0.005192383130391439 minutes
2024-04-06 09:02:07,665:INFO:SubProcess create_model() called ==================================
2024-04-06 09:02:07,665:INFO:Initializing create_model()
2024-04-06 09:02:07,665:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177668ad0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x173fad990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:02:07,665:INFO:Checking exceptions
2024-04-06 09:02:07,666:INFO:Importing libraries
2024-04-06 09:02:07,666:INFO:Copying training dataset
2024-04-06 09:02:07,668:INFO:Defining folds
2024-04-06 09:02:07,668:INFO:Declaring metric variables
2024-04-06 09:02:07,669:INFO:Importing untrained model
2024-04-06 09:02:07,670:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:02:07,672:INFO:Starting cross validation
2024-04-06 09:02:07,672:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:02:07,748:INFO:Calculating mean and std
2024-04-06 09:02:07,748:INFO:Creating metrics dataframe
2024-04-06 09:02:07,748:INFO:Uploading results into container
2024-04-06 09:02:07,749:INFO:Uploading model into container now
2024-04-06 09:02:07,749:INFO:_master_model_container: 2
2024-04-06 09:02:07,749:INFO:_display_container: 2
2024-04-06 09:02:07,749:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2063, splitter='best')
2024-04-06 09:02:07,749:INFO:create_model() successfully completed......................................
2024-04-06 09:02:07,822:INFO:SubProcess create_model() end ==================================
2024-04-06 09:02:07,822:INFO:Creating metrics dataframe
2024-04-06 09:02:07,824:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 09:02:07,827:INFO:Initializing create_model()
2024-04-06 09:02:07,827:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177668ad0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2063, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:02:07,827:INFO:Checking exceptions
2024-04-06 09:02:07,828:INFO:Importing libraries
2024-04-06 09:02:07,828:INFO:Copying training dataset
2024-04-06 09:02:07,831:INFO:Defining folds
2024-04-06 09:02:07,831:INFO:Declaring metric variables
2024-04-06 09:02:07,831:INFO:Importing untrained model
2024-04-06 09:02:07,831:INFO:Declaring custom model
2024-04-06 09:02:07,831:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:02:07,832:INFO:Cross validation set to False
2024-04-06 09:02:07,832:INFO:Fitting Model
2024-04-06 09:02:07,844:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2063, splitter='best')
2024-04-06 09:02:07,844:INFO:create_model() successfully completed......................................
2024-04-06 09:02:07,921:INFO:Initializing create_model()
2024-04-06 09:02:07,921:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177668ad0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2063, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:02:07,921:INFO:Checking exceptions
2024-04-06 09:02:07,922:INFO:Importing libraries
2024-04-06 09:02:07,922:INFO:Copying training dataset
2024-04-06 09:02:07,924:INFO:Defining folds
2024-04-06 09:02:07,924:INFO:Declaring metric variables
2024-04-06 09:02:07,924:INFO:Importing untrained model
2024-04-06 09:02:07,924:INFO:Declaring custom model
2024-04-06 09:02:07,925:INFO:Logistic Regression Imported successfully
2024-04-06 09:02:07,925:INFO:Cross validation set to False
2024-04-06 09:02:07,925:INFO:Fitting Model
2024-04-06 09:02:07,931:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2063, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:02:07,932:INFO:create_model() successfully completed......................................
2024-04-06 09:02:08,096:INFO:_master_model_container: 2
2024-04-06 09:02:08,096:INFO:_display_container: 2
2024-04-06 09:02:08,097:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2063, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2063, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-06 09:02:08,097:INFO:compare_models() successfully completed......................................
2024-04-06 09:02:08,098:INFO:Initializing predict_model()
2024-04-06 09:02:08,098:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177668ad0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2063, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1778faca0>)
2024-04-06 09:02:08,098:INFO:Checking exceptions
2024-04-06 09:02:08,098:INFO:Preloading libraries
2024-04-06 09:02:08,680:INFO:Initializing predict_model()
2024-04-06 09:02:08,680:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177668ad0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2063, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x308094720>)
2024-04-06 09:02:08,680:INFO:Checking exceptions
2024-04-06 09:02:08,680:INFO:Preloading libraries
2024-04-06 09:02:54,395:INFO:PyCaret ClassificationExperiment
2024-04-06 09:02:54,395:INFO:Logging name: clf-default-name
2024-04-06 09:02:54,395:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 09:02:54,395:INFO:version 3.3.0
2024-04-06 09:02:54,395:INFO:Initializing setup()
2024-04-06 09:02:54,395:INFO:self.USI: 2c76
2024-04-06 09:02:54,395:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 09:02:54,395:INFO:Checking environment
2024-04-06 09:02:54,396:INFO:python_version: 3.11.3
2024-04-06 09:02:54,396:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 09:02:54,396:INFO:machine: arm64
2024-04-06 09:02:54,396:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 09:02:54,396:INFO:Memory: svmem(total=8589934592, available=1893367808, percent=78.0, used=2996699136, free=78168064, active=1825275904, inactive=1812480000, wired=1171423232)
2024-04-06 09:02:54,396:INFO:Physical Core: 8
2024-04-06 09:02:54,396:INFO:Logical Core: 8
2024-04-06 09:02:54,396:INFO:Checking libraries
2024-04-06 09:02:54,396:INFO:System:
2024-04-06 09:02:54,396:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 09:02:54,396:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 09:02:54,396:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 09:02:54,396:INFO:PyCaret required dependencies:
2024-04-06 09:02:54,396:INFO:                 pip: 24.0
2024-04-06 09:02:54,396:INFO:          setuptools: 65.5.0
2024-04-06 09:02:54,396:INFO:             pycaret: 3.3.0
2024-04-06 09:02:54,396:INFO:             IPython: 8.23.0
2024-04-06 09:02:54,396:INFO:          ipywidgets: 8.1.2
2024-04-06 09:02:54,396:INFO:                tqdm: 4.66.2
2024-04-06 09:02:54,396:INFO:               numpy: 1.26.4
2024-04-06 09:02:54,396:INFO:              pandas: 2.1.4
2024-04-06 09:02:54,396:INFO:              jinja2: 3.1.3
2024-04-06 09:02:54,396:INFO:               scipy: 1.11.4
2024-04-06 09:02:54,396:INFO:              joblib: 1.3.2
2024-04-06 09:02:54,396:INFO:             sklearn: 1.4.1.post1
2024-04-06 09:02:54,396:INFO:                pyod: 1.1.3
2024-04-06 09:02:54,396:INFO:            imblearn: 0.12.2
2024-04-06 09:02:54,396:INFO:   category_encoders: 2.6.3
2024-04-06 09:02:54,396:INFO:            lightgbm: 4.3.0
2024-04-06 09:02:54,396:INFO:               numba: 0.59.1
2024-04-06 09:02:54,396:INFO:            requests: 2.31.0
2024-04-06 09:02:54,396:INFO:          matplotlib: 3.7.5
2024-04-06 09:02:54,396:INFO:          scikitplot: 0.3.7
2024-04-06 09:02:54,396:INFO:         yellowbrick: 1.5
2024-04-06 09:02:54,396:INFO:              plotly: 5.20.0
2024-04-06 09:02:54,396:INFO:    plotly-resampler: Not installed
2024-04-06 09:02:54,396:INFO:             kaleido: 0.2.1
2024-04-06 09:02:54,396:INFO:           schemdraw: 0.15
2024-04-06 09:02:54,396:INFO:         statsmodels: 0.14.1
2024-04-06 09:02:54,396:INFO:              sktime: 0.28.0
2024-04-06 09:02:54,396:INFO:               tbats: 1.1.3
2024-04-06 09:02:54,396:INFO:            pmdarima: 2.0.4
2024-04-06 09:02:54,396:INFO:              psutil: 5.9.8
2024-04-06 09:02:54,396:INFO:          markupsafe: 2.1.5
2024-04-06 09:02:54,396:INFO:             pickle5: Not installed
2024-04-06 09:02:54,396:INFO:         cloudpickle: 3.0.0
2024-04-06 09:02:54,396:INFO:         deprecation: 2.1.0
2024-04-06 09:02:54,396:INFO:              xxhash: 3.4.1
2024-04-06 09:02:54,396:INFO:           wurlitzer: 3.0.3
2024-04-06 09:02:54,396:INFO:PyCaret optional dependencies:
2024-04-06 09:02:54,396:INFO:                shap: Not installed
2024-04-06 09:02:54,396:INFO:           interpret: Not installed
2024-04-06 09:02:54,396:INFO:                umap: Not installed
2024-04-06 09:02:54,396:INFO:     ydata_profiling: Not installed
2024-04-06 09:02:54,397:INFO:  explainerdashboard: Not installed
2024-04-06 09:02:54,397:INFO:             autoviz: Not installed
2024-04-06 09:02:54,397:INFO:           fairlearn: Not installed
2024-04-06 09:02:54,397:INFO:          deepchecks: Not installed
2024-04-06 09:02:54,397:INFO:             xgboost: Not installed
2024-04-06 09:02:54,397:INFO:            catboost: Not installed
2024-04-06 09:02:54,397:INFO:              kmodes: Not installed
2024-04-06 09:02:54,397:INFO:             mlxtend: Not installed
2024-04-06 09:02:54,397:INFO:       statsforecast: Not installed
2024-04-06 09:02:54,397:INFO:        tune_sklearn: Not installed
2024-04-06 09:02:54,397:INFO:                 ray: Not installed
2024-04-06 09:02:54,397:INFO:            hyperopt: Not installed
2024-04-06 09:02:54,397:INFO:              optuna: Not installed
2024-04-06 09:02:54,397:INFO:               skopt: Not installed
2024-04-06 09:02:54,397:INFO:              mlflow: 2.11.3
2024-04-06 09:02:54,397:INFO:              gradio: Not installed
2024-04-06 09:02:54,397:INFO:             fastapi: Not installed
2024-04-06 09:02:54,397:INFO:             uvicorn: Not installed
2024-04-06 09:02:54,397:INFO:              m2cgen: Not installed
2024-04-06 09:02:54,397:INFO:           evidently: Not installed
2024-04-06 09:02:54,397:INFO:               fugue: Not installed
2024-04-06 09:02:54,397:INFO:           streamlit: 1.33.0
2024-04-06 09:02:54,397:INFO:             prophet: 1.1.5
2024-04-06 09:02:54,397:INFO:None
2024-04-06 09:02:54,397:INFO:Set up data.
2024-04-06 09:02:54,401:INFO:Set up folding strategy.
2024-04-06 09:02:54,401:INFO:Set up train/test split.
2024-04-06 09:02:54,401:INFO:Set up data.
2024-04-06 09:02:54,403:INFO:Set up index.
2024-04-06 09:02:54,404:INFO:Assigning column types.
2024-04-06 09:02:54,406:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 09:02:54,426:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 09:02:54,427:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:02:54,440:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:54,440:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:54,462:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 09:02:54,462:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:02:54,477:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:54,477:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:54,477:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 09:02:54,495:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:02:54,507:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:54,507:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:54,525:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:02:54,536:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:54,536:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:54,536:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 09:02:54,566:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:54,566:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:54,595:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:54,595:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:54,596:INFO:Preparing preprocessing pipeline...
2024-04-06 09:02:54,597:INFO:Set up simple imputation.
2024-04-06 09:02:54,597:INFO:Set up feature normalization.
2024-04-06 09:02:54,607:INFO:Finished creating preprocessing pipeline.
2024-04-06 09:02:54,608:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 09:02:54,608:INFO:Creating final display dataframe.
2024-04-06 09:02:54,637:INFO:Setup _display_container:                     Description             Value
0                    Session id              8851
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              2c76
2024-04-06 09:02:54,669:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:54,670:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:54,699:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:54,699:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:02:54,699:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 09:02:54,700:INFO:setup() successfully completed in 0.31s...............
2024-04-06 09:02:54,701:INFO:Initializing compare_models()
2024-04-06 09:02:54,701:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3080d0ad0>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x3080d0ad0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 09:02:54,701:INFO:Checking exceptions
2024-04-06 09:02:54,703:INFO:Preparing display monitor
2024-04-06 09:02:54,711:INFO:Initializing Logistic Regression
2024-04-06 09:02:54,711:INFO:Total runtime is 2.769629160563151e-06 minutes
2024-04-06 09:02:54,712:INFO:SubProcess create_model() called ==================================
2024-04-06 09:02:54,713:INFO:Initializing create_model()
2024-04-06 09:02:54,713:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3080d0ad0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x177a5fe10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:02:54,713:INFO:Checking exceptions
2024-04-06 09:02:54,713:INFO:Importing libraries
2024-04-06 09:02:54,713:INFO:Copying training dataset
2024-04-06 09:02:54,717:INFO:Defining folds
2024-04-06 09:02:54,717:INFO:Declaring metric variables
2024-04-06 09:02:54,718:INFO:Importing untrained model
2024-04-06 09:02:54,720:INFO:Logistic Regression Imported successfully
2024-04-06 09:02:54,723:INFO:Starting cross validation
2024-04-06 09:02:54,723:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:02:54,852:INFO:Calculating mean and std
2024-04-06 09:02:54,853:INFO:Creating metrics dataframe
2024-04-06 09:02:54,853:INFO:Uploading results into container
2024-04-06 09:02:54,853:INFO:Uploading model into container now
2024-04-06 09:02:54,854:INFO:_master_model_container: 1
2024-04-06 09:02:54,854:INFO:_display_container: 2
2024-04-06 09:02:54,854:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8851, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:02:54,854:INFO:create_model() successfully completed......................................
2024-04-06 09:02:54,970:INFO:SubProcess create_model() end ==================================
2024-04-06 09:02:54,970:INFO:Creating metrics dataframe
2024-04-06 09:02:54,973:INFO:Initializing Decision Tree Classifier
2024-04-06 09:02:54,973:INFO:Total runtime is 0.004370967547098795 minutes
2024-04-06 09:02:54,974:INFO:SubProcess create_model() called ==================================
2024-04-06 09:02:54,974:INFO:Initializing create_model()
2024-04-06 09:02:54,974:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3080d0ad0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x177a5fe10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:02:54,974:INFO:Checking exceptions
2024-04-06 09:02:54,974:INFO:Importing libraries
2024-04-06 09:02:54,974:INFO:Copying training dataset
2024-04-06 09:02:54,977:INFO:Defining folds
2024-04-06 09:02:54,977:INFO:Declaring metric variables
2024-04-06 09:02:54,978:INFO:Importing untrained model
2024-04-06 09:02:54,979:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:02:54,981:INFO:Starting cross validation
2024-04-06 09:02:54,982:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:02:55,051:INFO:Calculating mean and std
2024-04-06 09:02:55,051:INFO:Creating metrics dataframe
2024-04-06 09:02:55,052:INFO:Uploading results into container
2024-04-06 09:02:55,052:INFO:Uploading model into container now
2024-04-06 09:02:55,052:INFO:_master_model_container: 2
2024-04-06 09:02:55,052:INFO:_display_container: 2
2024-04-06 09:02:55,052:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8851, splitter='best')
2024-04-06 09:02:55,052:INFO:create_model() successfully completed......................................
2024-04-06 09:02:55,126:INFO:SubProcess create_model() end ==================================
2024-04-06 09:02:55,127:INFO:Creating metrics dataframe
2024-04-06 09:02:55,139:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 09:02:55,146:INFO:Initializing create_model()
2024-04-06 09:02:55,146:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3080d0ad0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8851, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:02:55,146:INFO:Checking exceptions
2024-04-06 09:02:55,147:INFO:Importing libraries
2024-04-06 09:02:55,147:INFO:Copying training dataset
2024-04-06 09:02:55,151:INFO:Defining folds
2024-04-06 09:02:55,151:INFO:Declaring metric variables
2024-04-06 09:02:55,151:INFO:Importing untrained model
2024-04-06 09:02:55,151:INFO:Declaring custom model
2024-04-06 09:02:55,151:INFO:Logistic Regression Imported successfully
2024-04-06 09:02:55,151:INFO:Cross validation set to False
2024-04-06 09:02:55,152:INFO:Fitting Model
2024-04-06 09:02:55,224:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8851, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:02:55,224:INFO:create_model() successfully completed......................................
2024-04-06 09:02:55,487:INFO:Initializing create_model()
2024-04-06 09:02:55,487:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3080d0ad0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8851, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:02:55,487:INFO:Checking exceptions
2024-04-06 09:02:55,488:INFO:Importing libraries
2024-04-06 09:02:55,488:INFO:Copying training dataset
2024-04-06 09:02:55,491:INFO:Defining folds
2024-04-06 09:02:55,491:INFO:Declaring metric variables
2024-04-06 09:02:55,491:INFO:Importing untrained model
2024-04-06 09:02:55,491:INFO:Declaring custom model
2024-04-06 09:02:55,491:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:02:55,491:INFO:Cross validation set to False
2024-04-06 09:02:55,491:INFO:Fitting Model
2024-04-06 09:02:55,506:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8851, splitter='best')
2024-04-06 09:02:55,506:INFO:create_model() successfully completed......................................
2024-04-06 09:02:55,592:INFO:_master_model_container: 2
2024-04-06 09:02:55,592:INFO:_display_container: 2
2024-04-06 09:02:55,593:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8851, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8851, splitter='best')]
2024-04-06 09:02:55,593:INFO:compare_models() successfully completed......................................
2024-04-06 09:02:55,593:INFO:Initializing predict_model()
2024-04-06 09:02:55,593:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3080d0ad0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8851, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x107f30720>)
2024-04-06 09:02:55,593:INFO:Checking exceptions
2024-04-06 09:02:55,593:INFO:Preloading libraries
2024-04-06 09:02:56,242:INFO:Initializing predict_model()
2024-04-06 09:02:56,242:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3080d0ad0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8851, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x177a57880>)
2024-04-06 09:02:56,242:INFO:Checking exceptions
2024-04-06 09:02:56,242:INFO:Preloading libraries
2024-04-06 09:07:01,115:INFO:PyCaret ClassificationExperiment
2024-04-06 09:07:01,115:INFO:Logging name: clf-default-name
2024-04-06 09:07:01,115:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 09:07:01,115:INFO:version 3.3.0
2024-04-06 09:07:01,115:INFO:Initializing setup()
2024-04-06 09:07:01,115:INFO:self.USI: acdc
2024-04-06 09:07:01,115:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 09:07:01,115:INFO:Checking environment
2024-04-06 09:07:01,115:INFO:python_version: 3.11.3
2024-04-06 09:07:01,115:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 09:07:01,115:INFO:machine: arm64
2024-04-06 09:07:01,115:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 09:07:01,115:INFO:Memory: svmem(total=8589934592, available=1928773632, percent=77.5, used=3058565120, free=54362112, active=1886945280, inactive=1871003648, wired=1171619840)
2024-04-06 09:07:01,115:INFO:Physical Core: 8
2024-04-06 09:07:01,115:INFO:Logical Core: 8
2024-04-06 09:07:01,115:INFO:Checking libraries
2024-04-06 09:07:01,115:INFO:System:
2024-04-06 09:07:01,115:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 09:07:01,115:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 09:07:01,115:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 09:07:01,115:INFO:PyCaret required dependencies:
2024-04-06 09:07:01,116:INFO:                 pip: 24.0
2024-04-06 09:07:01,116:INFO:          setuptools: 65.5.0
2024-04-06 09:07:01,116:INFO:             pycaret: 3.3.0
2024-04-06 09:07:01,116:INFO:             IPython: 8.23.0
2024-04-06 09:07:01,116:INFO:          ipywidgets: 8.1.2
2024-04-06 09:07:01,116:INFO:                tqdm: 4.66.2
2024-04-06 09:07:01,116:INFO:               numpy: 1.26.4
2024-04-06 09:07:01,116:INFO:              pandas: 2.1.4
2024-04-06 09:07:01,116:INFO:              jinja2: 3.1.3
2024-04-06 09:07:01,116:INFO:               scipy: 1.11.4
2024-04-06 09:07:01,116:INFO:              joblib: 1.3.2
2024-04-06 09:07:01,116:INFO:             sklearn: 1.4.1.post1
2024-04-06 09:07:01,116:INFO:                pyod: 1.1.3
2024-04-06 09:07:01,116:INFO:            imblearn: 0.12.2
2024-04-06 09:07:01,116:INFO:   category_encoders: 2.6.3
2024-04-06 09:07:01,116:INFO:            lightgbm: 4.3.0
2024-04-06 09:07:01,116:INFO:               numba: 0.59.1
2024-04-06 09:07:01,116:INFO:            requests: 2.31.0
2024-04-06 09:07:01,116:INFO:          matplotlib: 3.7.5
2024-04-06 09:07:01,116:INFO:          scikitplot: 0.3.7
2024-04-06 09:07:01,116:INFO:         yellowbrick: 1.5
2024-04-06 09:07:01,116:INFO:              plotly: 5.20.0
2024-04-06 09:07:01,116:INFO:    plotly-resampler: Not installed
2024-04-06 09:07:01,116:INFO:             kaleido: 0.2.1
2024-04-06 09:07:01,116:INFO:           schemdraw: 0.15
2024-04-06 09:07:01,116:INFO:         statsmodels: 0.14.1
2024-04-06 09:07:01,116:INFO:              sktime: 0.28.0
2024-04-06 09:07:01,116:INFO:               tbats: 1.1.3
2024-04-06 09:07:01,116:INFO:            pmdarima: 2.0.4
2024-04-06 09:07:01,116:INFO:              psutil: 5.9.8
2024-04-06 09:07:01,116:INFO:          markupsafe: 2.1.5
2024-04-06 09:07:01,116:INFO:             pickle5: Not installed
2024-04-06 09:07:01,116:INFO:         cloudpickle: 3.0.0
2024-04-06 09:07:01,116:INFO:         deprecation: 2.1.0
2024-04-06 09:07:01,116:INFO:              xxhash: 3.4.1
2024-04-06 09:07:01,116:INFO:           wurlitzer: 3.0.3
2024-04-06 09:07:01,116:INFO:PyCaret optional dependencies:
2024-04-06 09:07:01,116:INFO:                shap: Not installed
2024-04-06 09:07:01,116:INFO:           interpret: Not installed
2024-04-06 09:07:01,116:INFO:                umap: Not installed
2024-04-06 09:07:01,116:INFO:     ydata_profiling: Not installed
2024-04-06 09:07:01,116:INFO:  explainerdashboard: Not installed
2024-04-06 09:07:01,116:INFO:             autoviz: Not installed
2024-04-06 09:07:01,116:INFO:           fairlearn: Not installed
2024-04-06 09:07:01,116:INFO:          deepchecks: Not installed
2024-04-06 09:07:01,116:INFO:             xgboost: Not installed
2024-04-06 09:07:01,116:INFO:            catboost: Not installed
2024-04-06 09:07:01,116:INFO:              kmodes: Not installed
2024-04-06 09:07:01,116:INFO:             mlxtend: Not installed
2024-04-06 09:07:01,116:INFO:       statsforecast: Not installed
2024-04-06 09:07:01,116:INFO:        tune_sklearn: Not installed
2024-04-06 09:07:01,116:INFO:                 ray: Not installed
2024-04-06 09:07:01,116:INFO:            hyperopt: Not installed
2024-04-06 09:07:01,116:INFO:              optuna: Not installed
2024-04-06 09:07:01,116:INFO:               skopt: Not installed
2024-04-06 09:07:01,116:INFO:              mlflow: 2.11.3
2024-04-06 09:07:01,116:INFO:              gradio: Not installed
2024-04-06 09:07:01,116:INFO:             fastapi: Not installed
2024-04-06 09:07:01,116:INFO:             uvicorn: Not installed
2024-04-06 09:07:01,116:INFO:              m2cgen: Not installed
2024-04-06 09:07:01,116:INFO:           evidently: Not installed
2024-04-06 09:07:01,116:INFO:               fugue: Not installed
2024-04-06 09:07:01,116:INFO:           streamlit: 1.33.0
2024-04-06 09:07:01,116:INFO:             prophet: 1.1.5
2024-04-06 09:07:01,116:INFO:None
2024-04-06 09:07:01,116:INFO:Set up data.
2024-04-06 09:07:01,120:INFO:Set up folding strategy.
2024-04-06 09:07:01,120:INFO:Set up train/test split.
2024-04-06 09:07:01,120:INFO:Set up data.
2024-04-06 09:07:01,122:INFO:Set up index.
2024-04-06 09:07:01,123:INFO:Assigning column types.
2024-04-06 09:07:01,125:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 09:07:01,145:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 09:07:01,145:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:07:01,157:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:07:01,157:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:07:01,175:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 09:07:01,178:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:07:01,189:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:07:01,189:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:07:01,189:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 09:07:01,208:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:07:01,219:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:07:01,219:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:07:01,237:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:07:01,249:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:07:01,249:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:07:01,249:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 09:07:01,278:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:07:01,278:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:07:01,307:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:07:01,307:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:07:01,308:INFO:Preparing preprocessing pipeline...
2024-04-06 09:07:01,309:INFO:Set up simple imputation.
2024-04-06 09:07:01,309:INFO:Set up feature normalization.
2024-04-06 09:07:01,319:INFO:Finished creating preprocessing pipeline.
2024-04-06 09:07:01,320:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 09:07:01,320:INFO:Creating final display dataframe.
2024-04-06 09:07:01,349:INFO:Setup _display_container:                     Description             Value
0                    Session id              7610
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              acdc
2024-04-06 09:07:01,387:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:07:01,387:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:07:01,421:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:07:01,422:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:07:01,422:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 09:07:01,423:INFO:setup() successfully completed in 0.31s...............
2024-04-06 09:07:01,424:INFO:Initializing compare_models()
2024-04-06 09:07:01,424:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177e80c10>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x177e80c10>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 09:07:01,424:INFO:Checking exceptions
2024-04-06 09:07:01,426:INFO:Preparing display monitor
2024-04-06 09:07:01,444:INFO:Initializing Logistic Regression
2024-04-06 09:07:01,444:INFO:Total runtime is 3.0517578125e-06 minutes
2024-04-06 09:07:01,447:INFO:SubProcess create_model() called ==================================
2024-04-06 09:07:01,447:INFO:Initializing create_model()
2024-04-06 09:07:01,447:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177e80c10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x177a3c450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:07:01,447:INFO:Checking exceptions
2024-04-06 09:07:01,447:INFO:Importing libraries
2024-04-06 09:07:01,447:INFO:Copying training dataset
2024-04-06 09:07:01,452:INFO:Defining folds
2024-04-06 09:07:01,452:INFO:Declaring metric variables
2024-04-06 09:07:01,454:INFO:Importing untrained model
2024-04-06 09:07:01,455:INFO:Logistic Regression Imported successfully
2024-04-06 09:07:01,458:INFO:Starting cross validation
2024-04-06 09:07:01,458:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:07:01,594:INFO:Calculating mean and std
2024-04-06 09:07:01,594:INFO:Creating metrics dataframe
2024-04-06 09:07:01,595:INFO:Uploading results into container
2024-04-06 09:07:01,595:INFO:Uploading model into container now
2024-04-06 09:07:01,596:INFO:_master_model_container: 1
2024-04-06 09:07:01,596:INFO:_display_container: 2
2024-04-06 09:07:01,596:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7610, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:07:01,596:INFO:create_model() successfully completed......................................
2024-04-06 09:07:01,722:INFO:SubProcess create_model() end ==================================
2024-04-06 09:07:01,722:INFO:Creating metrics dataframe
2024-04-06 09:07:01,724:INFO:Initializing Decision Tree Classifier
2024-04-06 09:07:01,724:INFO:Total runtime is 0.004675451914469401 minutes
2024-04-06 09:07:01,726:INFO:SubProcess create_model() called ==================================
2024-04-06 09:07:01,726:INFO:Initializing create_model()
2024-04-06 09:07:01,726:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177e80c10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x177a3c450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:07:01,726:INFO:Checking exceptions
2024-04-06 09:07:01,726:INFO:Importing libraries
2024-04-06 09:07:01,726:INFO:Copying training dataset
2024-04-06 09:07:01,728:INFO:Defining folds
2024-04-06 09:07:01,728:INFO:Declaring metric variables
2024-04-06 09:07:01,730:INFO:Importing untrained model
2024-04-06 09:07:01,731:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:07:01,733:INFO:Starting cross validation
2024-04-06 09:07:01,733:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:07:01,799:INFO:Calculating mean and std
2024-04-06 09:07:01,800:INFO:Creating metrics dataframe
2024-04-06 09:07:01,800:INFO:Uploading results into container
2024-04-06 09:07:01,800:INFO:Uploading model into container now
2024-04-06 09:07:01,801:INFO:_master_model_container: 2
2024-04-06 09:07:01,801:INFO:_display_container: 2
2024-04-06 09:07:01,801:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7610, splitter='best')
2024-04-06 09:07:01,801:INFO:create_model() successfully completed......................................
2024-04-06 09:07:01,875:INFO:SubProcess create_model() end ==================================
2024-04-06 09:07:01,875:INFO:Creating metrics dataframe
2024-04-06 09:07:01,878:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 09:07:01,881:INFO:Initializing create_model()
2024-04-06 09:07:01,881:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177e80c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7610, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:07:01,881:INFO:Checking exceptions
2024-04-06 09:07:01,882:INFO:Importing libraries
2024-04-06 09:07:01,882:INFO:Copying training dataset
2024-04-06 09:07:01,884:INFO:Defining folds
2024-04-06 09:07:01,884:INFO:Declaring metric variables
2024-04-06 09:07:01,884:INFO:Importing untrained model
2024-04-06 09:07:01,884:INFO:Declaring custom model
2024-04-06 09:07:01,884:INFO:Logistic Regression Imported successfully
2024-04-06 09:07:01,885:INFO:Cross validation set to False
2024-04-06 09:07:01,885:INFO:Fitting Model
2024-04-06 09:07:01,891:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7610, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:07:01,891:INFO:create_model() successfully completed......................................
2024-04-06 09:07:02,025:INFO:Initializing create_model()
2024-04-06 09:07:02,025:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177e80c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7610, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:07:02,025:INFO:Checking exceptions
2024-04-06 09:07:02,027:INFO:Importing libraries
2024-04-06 09:07:02,027:INFO:Copying training dataset
2024-04-06 09:07:02,031:INFO:Defining folds
2024-04-06 09:07:02,031:INFO:Declaring metric variables
2024-04-06 09:07:02,031:INFO:Importing untrained model
2024-04-06 09:07:02,031:INFO:Declaring custom model
2024-04-06 09:07:02,031:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:07:02,031:INFO:Cross validation set to False
2024-04-06 09:07:02,031:INFO:Fitting Model
2024-04-06 09:07:02,054:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7610, splitter='best')
2024-04-06 09:07:02,054:INFO:create_model() successfully completed......................................
2024-04-06 09:07:02,192:INFO:_master_model_container: 2
2024-04-06 09:07:02,192:INFO:_display_container: 2
2024-04-06 09:07:02,193:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7610, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7610, splitter='best')]
2024-04-06 09:07:02,193:INFO:compare_models() successfully completed......................................
2024-04-06 09:07:02,193:INFO:Initializing predict_model()
2024-04-06 09:07:02,194:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177e80c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7610, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x107f30720>)
2024-04-06 09:07:02,194:INFO:Checking exceptions
2024-04-06 09:07:02,194:INFO:Preloading libraries
2024-04-06 09:07:02,912:INFO:Initializing predict_model()
2024-04-06 09:07:02,912:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177e80c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7610, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x177a577e0>)
2024-04-06 09:07:02,912:INFO:Checking exceptions
2024-04-06 09:07:02,912:INFO:Preloading libraries
2024-04-06 09:08:18,497:INFO:PyCaret ClassificationExperiment
2024-04-06 09:08:18,497:INFO:Logging name: clf-default-name
2024-04-06 09:08:18,497:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 09:08:18,497:INFO:version 3.3.0
2024-04-06 09:08:18,497:INFO:Initializing setup()
2024-04-06 09:08:18,497:INFO:self.USI: eec6
2024-04-06 09:08:18,497:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 09:08:18,497:INFO:Checking environment
2024-04-06 09:08:18,497:INFO:python_version: 3.11.3
2024-04-06 09:08:18,497:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 09:08:18,497:INFO:machine: arm64
2024-04-06 09:08:18,497:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 09:08:18,498:INFO:Memory: svmem(total=8589934592, available=1938800640, percent=77.4, used=3075571712, free=43909120, active=1909555200, inactive=1892925440, wired=1166016512)
2024-04-06 09:08:18,498:INFO:Physical Core: 8
2024-04-06 09:08:18,498:INFO:Logical Core: 8
2024-04-06 09:08:18,498:INFO:Checking libraries
2024-04-06 09:08:18,498:INFO:System:
2024-04-06 09:08:18,498:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 09:08:18,498:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 09:08:18,498:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 09:08:18,498:INFO:PyCaret required dependencies:
2024-04-06 09:08:18,498:INFO:                 pip: 24.0
2024-04-06 09:08:18,498:INFO:          setuptools: 65.5.0
2024-04-06 09:08:18,498:INFO:             pycaret: 3.3.0
2024-04-06 09:08:18,498:INFO:             IPython: 8.23.0
2024-04-06 09:08:18,498:INFO:          ipywidgets: 8.1.2
2024-04-06 09:08:18,498:INFO:                tqdm: 4.66.2
2024-04-06 09:08:18,498:INFO:               numpy: 1.26.4
2024-04-06 09:08:18,498:INFO:              pandas: 2.1.4
2024-04-06 09:08:18,498:INFO:              jinja2: 3.1.3
2024-04-06 09:08:18,498:INFO:               scipy: 1.11.4
2024-04-06 09:08:18,498:INFO:              joblib: 1.3.2
2024-04-06 09:08:18,498:INFO:             sklearn: 1.4.1.post1
2024-04-06 09:08:18,498:INFO:                pyod: 1.1.3
2024-04-06 09:08:18,498:INFO:            imblearn: 0.12.2
2024-04-06 09:08:18,498:INFO:   category_encoders: 2.6.3
2024-04-06 09:08:18,498:INFO:            lightgbm: 4.3.0
2024-04-06 09:08:18,498:INFO:               numba: 0.59.1
2024-04-06 09:08:18,498:INFO:            requests: 2.31.0
2024-04-06 09:08:18,498:INFO:          matplotlib: 3.7.5
2024-04-06 09:08:18,498:INFO:          scikitplot: 0.3.7
2024-04-06 09:08:18,498:INFO:         yellowbrick: 1.5
2024-04-06 09:08:18,498:INFO:              plotly: 5.20.0
2024-04-06 09:08:18,498:INFO:    plotly-resampler: Not installed
2024-04-06 09:08:18,498:INFO:             kaleido: 0.2.1
2024-04-06 09:08:18,498:INFO:           schemdraw: 0.15
2024-04-06 09:08:18,498:INFO:         statsmodels: 0.14.1
2024-04-06 09:08:18,498:INFO:              sktime: 0.28.0
2024-04-06 09:08:18,498:INFO:               tbats: 1.1.3
2024-04-06 09:08:18,498:INFO:            pmdarima: 2.0.4
2024-04-06 09:08:18,498:INFO:              psutil: 5.9.8
2024-04-06 09:08:18,498:INFO:          markupsafe: 2.1.5
2024-04-06 09:08:18,498:INFO:             pickle5: Not installed
2024-04-06 09:08:18,498:INFO:         cloudpickle: 3.0.0
2024-04-06 09:08:18,498:INFO:         deprecation: 2.1.0
2024-04-06 09:08:18,498:INFO:              xxhash: 3.4.1
2024-04-06 09:08:18,498:INFO:           wurlitzer: 3.0.3
2024-04-06 09:08:18,498:INFO:PyCaret optional dependencies:
2024-04-06 09:08:18,498:INFO:                shap: Not installed
2024-04-06 09:08:18,498:INFO:           interpret: Not installed
2024-04-06 09:08:18,498:INFO:                umap: Not installed
2024-04-06 09:08:18,498:INFO:     ydata_profiling: Not installed
2024-04-06 09:08:18,498:INFO:  explainerdashboard: Not installed
2024-04-06 09:08:18,498:INFO:             autoviz: Not installed
2024-04-06 09:08:18,498:INFO:           fairlearn: Not installed
2024-04-06 09:08:18,498:INFO:          deepchecks: Not installed
2024-04-06 09:08:18,498:INFO:             xgboost: Not installed
2024-04-06 09:08:18,498:INFO:            catboost: Not installed
2024-04-06 09:08:18,498:INFO:              kmodes: Not installed
2024-04-06 09:08:18,498:INFO:             mlxtend: Not installed
2024-04-06 09:08:18,498:INFO:       statsforecast: Not installed
2024-04-06 09:08:18,499:INFO:        tune_sklearn: Not installed
2024-04-06 09:08:18,499:INFO:                 ray: Not installed
2024-04-06 09:08:18,499:INFO:            hyperopt: Not installed
2024-04-06 09:08:18,499:INFO:              optuna: Not installed
2024-04-06 09:08:18,499:INFO:               skopt: Not installed
2024-04-06 09:08:18,499:INFO:              mlflow: 2.11.3
2024-04-06 09:08:18,499:INFO:              gradio: Not installed
2024-04-06 09:08:18,499:INFO:             fastapi: Not installed
2024-04-06 09:08:18,499:INFO:             uvicorn: Not installed
2024-04-06 09:08:18,499:INFO:              m2cgen: Not installed
2024-04-06 09:08:18,499:INFO:           evidently: Not installed
2024-04-06 09:08:18,499:INFO:               fugue: Not installed
2024-04-06 09:08:18,499:INFO:           streamlit: 1.33.0
2024-04-06 09:08:18,499:INFO:             prophet: 1.1.5
2024-04-06 09:08:18,499:INFO:None
2024-04-06 09:08:18,499:INFO:Set up data.
2024-04-06 09:08:18,502:INFO:Set up folding strategy.
2024-04-06 09:08:18,502:INFO:Set up train/test split.
2024-04-06 09:08:18,502:INFO:Set up data.
2024-04-06 09:08:18,504:INFO:Set up index.
2024-04-06 09:08:18,505:INFO:Assigning column types.
2024-04-06 09:08:18,507:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 09:08:18,527:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 09:08:18,528:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:08:18,540:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:08:18,541:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:08:18,559:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 09:08:18,562:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:08:18,572:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:08:18,573:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:08:18,573:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 09:08:18,591:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:08:18,602:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:08:18,602:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:08:18,621:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:08:18,632:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:08:18,632:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:08:18,633:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 09:08:18,662:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:08:18,662:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:08:18,691:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:08:18,691:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:08:18,692:INFO:Preparing preprocessing pipeline...
2024-04-06 09:08:18,692:INFO:Set up simple imputation.
2024-04-06 09:08:18,692:INFO:Set up feature normalization.
2024-04-06 09:08:18,702:INFO:Finished creating preprocessing pipeline.
2024-04-06 09:08:18,704:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 09:08:18,704:INFO:Creating final display dataframe.
2024-04-06 09:08:18,740:INFO:Setup _display_container:                     Description             Value
0                    Session id              8983
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              eec6
2024-04-06 09:08:18,773:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:08:18,773:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:08:18,802:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:08:18,802:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:08:18,802:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 09:08:18,803:INFO:setup() successfully completed in 0.31s...............
2024-04-06 09:08:18,804:INFO:Initializing compare_models()
2024-04-06 09:08:18,804:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177c88ad0>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x177c88ad0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 09:08:18,804:INFO:Checking exceptions
2024-04-06 09:08:18,806:INFO:Preparing display monitor
2024-04-06 09:08:18,814:INFO:Initializing Logistic Regression
2024-04-06 09:08:18,814:INFO:Total runtime is 3.2981236775716147e-06 minutes
2024-04-06 09:08:18,815:INFO:SubProcess create_model() called ==================================
2024-04-06 09:08:18,816:INFO:Initializing create_model()
2024-04-06 09:08:18,816:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177c88ad0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x177f79590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:08:18,816:INFO:Checking exceptions
2024-04-06 09:08:18,816:INFO:Importing libraries
2024-04-06 09:08:18,816:INFO:Copying training dataset
2024-04-06 09:08:18,820:INFO:Defining folds
2024-04-06 09:08:18,820:INFO:Declaring metric variables
2024-04-06 09:08:18,821:INFO:Importing untrained model
2024-04-06 09:08:18,822:INFO:Logistic Regression Imported successfully
2024-04-06 09:08:18,825:INFO:Starting cross validation
2024-04-06 09:08:18,826:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:08:19,006:INFO:Calculating mean and std
2024-04-06 09:08:19,006:INFO:Creating metrics dataframe
2024-04-06 09:08:19,008:INFO:Uploading results into container
2024-04-06 09:08:19,008:INFO:Uploading model into container now
2024-04-06 09:08:19,008:INFO:_master_model_container: 1
2024-04-06 09:08:19,008:INFO:_display_container: 2
2024-04-06 09:08:19,008:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8983, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:08:19,008:INFO:create_model() successfully completed......................................
2024-04-06 09:08:19,134:INFO:SubProcess create_model() end ==================================
2024-04-06 09:08:19,134:INFO:Creating metrics dataframe
2024-04-06 09:08:19,137:INFO:Initializing Decision Tree Classifier
2024-04-06 09:08:19,137:INFO:Total runtime is 0.00538949966430664 minutes
2024-04-06 09:08:19,138:INFO:SubProcess create_model() called ==================================
2024-04-06 09:08:19,138:INFO:Initializing create_model()
2024-04-06 09:08:19,138:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177c88ad0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x177f79590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:08:19,138:INFO:Checking exceptions
2024-04-06 09:08:19,138:INFO:Importing libraries
2024-04-06 09:08:19,138:INFO:Copying training dataset
2024-04-06 09:08:19,141:INFO:Defining folds
2024-04-06 09:08:19,141:INFO:Declaring metric variables
2024-04-06 09:08:19,142:INFO:Importing untrained model
2024-04-06 09:08:19,143:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:08:19,145:INFO:Starting cross validation
2024-04-06 09:08:19,146:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:08:19,236:INFO:Calculating mean and std
2024-04-06 09:08:19,236:INFO:Creating metrics dataframe
2024-04-06 09:08:19,237:INFO:Uploading results into container
2024-04-06 09:08:19,237:INFO:Uploading model into container now
2024-04-06 09:08:19,237:INFO:_master_model_container: 2
2024-04-06 09:08:19,237:INFO:_display_container: 2
2024-04-06 09:08:19,237:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8983, splitter='best')
2024-04-06 09:08:19,237:INFO:create_model() successfully completed......................................
2024-04-06 09:08:19,319:INFO:SubProcess create_model() end ==================================
2024-04-06 09:08:19,319:INFO:Creating metrics dataframe
2024-04-06 09:08:19,321:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 09:08:19,324:INFO:Initializing create_model()
2024-04-06 09:08:19,325:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177c88ad0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8983, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:08:19,325:INFO:Checking exceptions
2024-04-06 09:08:19,326:INFO:Importing libraries
2024-04-06 09:08:19,326:INFO:Copying training dataset
2024-04-06 09:08:19,328:INFO:Defining folds
2024-04-06 09:08:19,328:INFO:Declaring metric variables
2024-04-06 09:08:19,328:INFO:Importing untrained model
2024-04-06 09:08:19,328:INFO:Declaring custom model
2024-04-06 09:08:19,328:INFO:Logistic Regression Imported successfully
2024-04-06 09:08:19,328:INFO:Cross validation set to False
2024-04-06 09:08:19,328:INFO:Fitting Model
2024-04-06 09:08:19,342:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8983, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:08:19,342:INFO:create_model() successfully completed......................................
2024-04-06 09:08:19,478:INFO:Initializing create_model()
2024-04-06 09:08:19,479:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177c88ad0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8983, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:08:19,479:INFO:Checking exceptions
2024-04-06 09:08:19,482:INFO:Importing libraries
2024-04-06 09:08:19,482:INFO:Copying training dataset
2024-04-06 09:08:19,484:INFO:Defining folds
2024-04-06 09:08:19,484:INFO:Declaring metric variables
2024-04-06 09:08:19,484:INFO:Importing untrained model
2024-04-06 09:08:19,484:INFO:Declaring custom model
2024-04-06 09:08:19,484:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:08:19,485:INFO:Cross validation set to False
2024-04-06 09:08:19,485:INFO:Fitting Model
2024-04-06 09:08:19,510:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8983, splitter='best')
2024-04-06 09:08:19,510:INFO:create_model() successfully completed......................................
2024-04-06 09:08:19,629:INFO:_master_model_container: 2
2024-04-06 09:08:19,629:INFO:_display_container: 2
2024-04-06 09:08:19,629:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8983, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8983, splitter='best')]
2024-04-06 09:08:19,629:INFO:compare_models() successfully completed......................................
2024-04-06 09:08:19,630:INFO:Initializing predict_model()
2024-04-06 09:08:19,630:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177c88ad0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8983, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1778faca0>)
2024-04-06 09:08:19,630:INFO:Checking exceptions
2024-04-06 09:08:19,630:INFO:Preloading libraries
2024-04-06 09:08:20,221:INFO:Initializing predict_model()
2024-04-06 09:08:20,221:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177c88ad0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8983, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3080965c0>)
2024-04-06 09:08:20,221:INFO:Checking exceptions
2024-04-06 09:08:20,221:INFO:Preloading libraries
2024-04-06 09:12:50,939:INFO:PyCaret ClassificationExperiment
2024-04-06 09:12:50,939:INFO:Logging name: clf-default-name
2024-04-06 09:12:50,939:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 09:12:50,939:INFO:version 3.3.0
2024-04-06 09:12:50,939:INFO:Initializing setup()
2024-04-06 09:12:50,939:INFO:self.USI: f31f
2024-04-06 09:12:50,939:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 09:12:50,939:INFO:Checking environment
2024-04-06 09:12:50,939:INFO:python_version: 3.11.3
2024-04-06 09:12:50,939:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 09:12:50,939:INFO:machine: arm64
2024-04-06 09:12:50,939:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 09:12:50,940:INFO:Memory: svmem(total=8589934592, available=1832108032, percent=78.7, used=3016736768, free=24215552, active=1822343168, inactive=1803730944, wired=1194393600)
2024-04-06 09:12:50,940:INFO:Physical Core: 8
2024-04-06 09:12:50,940:INFO:Logical Core: 8
2024-04-06 09:12:50,940:INFO:Checking libraries
2024-04-06 09:12:50,940:INFO:System:
2024-04-06 09:12:50,940:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 09:12:50,940:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 09:12:50,940:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 09:12:50,940:INFO:PyCaret required dependencies:
2024-04-06 09:12:50,941:INFO:                 pip: 24.0
2024-04-06 09:12:50,941:INFO:          setuptools: 65.5.0
2024-04-06 09:12:50,941:INFO:             pycaret: 3.3.0
2024-04-06 09:12:50,941:INFO:             IPython: 8.23.0
2024-04-06 09:12:50,941:INFO:          ipywidgets: 8.1.2
2024-04-06 09:12:50,941:INFO:                tqdm: 4.66.2
2024-04-06 09:12:50,941:INFO:               numpy: 1.26.4
2024-04-06 09:12:50,941:INFO:              pandas: 2.1.4
2024-04-06 09:12:50,941:INFO:              jinja2: 3.1.3
2024-04-06 09:12:50,941:INFO:               scipy: 1.11.4
2024-04-06 09:12:50,941:INFO:              joblib: 1.3.2
2024-04-06 09:12:50,941:INFO:             sklearn: 1.4.1.post1
2024-04-06 09:12:50,941:INFO:                pyod: 1.1.3
2024-04-06 09:12:50,941:INFO:            imblearn: 0.12.2
2024-04-06 09:12:50,941:INFO:   category_encoders: 2.6.3
2024-04-06 09:12:50,941:INFO:            lightgbm: 4.3.0
2024-04-06 09:12:50,941:INFO:               numba: 0.59.1
2024-04-06 09:12:50,941:INFO:            requests: 2.31.0
2024-04-06 09:12:50,941:INFO:          matplotlib: 3.7.5
2024-04-06 09:12:50,941:INFO:          scikitplot: 0.3.7
2024-04-06 09:12:50,942:INFO:         yellowbrick: 1.5
2024-04-06 09:12:50,942:INFO:              plotly: 5.20.0
2024-04-06 09:12:50,942:INFO:    plotly-resampler: Not installed
2024-04-06 09:12:50,942:INFO:             kaleido: 0.2.1
2024-04-06 09:12:50,942:INFO:           schemdraw: 0.15
2024-04-06 09:12:50,942:INFO:         statsmodels: 0.14.1
2024-04-06 09:12:50,942:INFO:              sktime: 0.28.0
2024-04-06 09:12:50,942:INFO:               tbats: 1.1.3
2024-04-06 09:12:50,942:INFO:            pmdarima: 2.0.4
2024-04-06 09:12:50,942:INFO:              psutil: 5.9.8
2024-04-06 09:12:50,942:INFO:          markupsafe: 2.1.5
2024-04-06 09:12:50,942:INFO:             pickle5: Not installed
2024-04-06 09:12:50,942:INFO:         cloudpickle: 3.0.0
2024-04-06 09:12:50,942:INFO:         deprecation: 2.1.0
2024-04-06 09:12:50,942:INFO:              xxhash: 3.4.1
2024-04-06 09:12:50,942:INFO:           wurlitzer: 3.0.3
2024-04-06 09:12:50,942:INFO:PyCaret optional dependencies:
2024-04-06 09:12:50,942:INFO:                shap: Not installed
2024-04-06 09:12:50,942:INFO:           interpret: Not installed
2024-04-06 09:12:50,942:INFO:                umap: Not installed
2024-04-06 09:12:50,942:INFO:     ydata_profiling: Not installed
2024-04-06 09:12:50,942:INFO:  explainerdashboard: Not installed
2024-04-06 09:12:50,942:INFO:             autoviz: Not installed
2024-04-06 09:12:50,942:INFO:           fairlearn: Not installed
2024-04-06 09:12:50,942:INFO:          deepchecks: Not installed
2024-04-06 09:12:50,942:INFO:             xgboost: Not installed
2024-04-06 09:12:50,942:INFO:            catboost: Not installed
2024-04-06 09:12:50,942:INFO:              kmodes: Not installed
2024-04-06 09:12:50,942:INFO:             mlxtend: Not installed
2024-04-06 09:12:50,942:INFO:       statsforecast: Not installed
2024-04-06 09:12:50,942:INFO:        tune_sklearn: Not installed
2024-04-06 09:12:50,942:INFO:                 ray: Not installed
2024-04-06 09:12:50,942:INFO:            hyperopt: Not installed
2024-04-06 09:12:50,942:INFO:              optuna: Not installed
2024-04-06 09:12:50,942:INFO:               skopt: Not installed
2024-04-06 09:12:50,942:INFO:              mlflow: 2.11.3
2024-04-06 09:12:50,942:INFO:              gradio: Not installed
2024-04-06 09:12:50,942:INFO:             fastapi: Not installed
2024-04-06 09:12:50,942:INFO:             uvicorn: Not installed
2024-04-06 09:12:50,942:INFO:              m2cgen: Not installed
2024-04-06 09:12:50,942:INFO:           evidently: Not installed
2024-04-06 09:12:50,942:INFO:               fugue: Not installed
2024-04-06 09:12:50,942:INFO:           streamlit: 1.33.0
2024-04-06 09:12:50,942:INFO:             prophet: 1.1.5
2024-04-06 09:12:50,942:INFO:None
2024-04-06 09:12:50,942:INFO:Set up data.
2024-04-06 09:12:50,950:INFO:Set up folding strategy.
2024-04-06 09:12:50,950:INFO:Set up train/test split.
2024-04-06 09:12:50,950:INFO:Set up data.
2024-04-06 09:12:50,952:INFO:Set up index.
2024-04-06 09:12:50,952:INFO:Assigning column types.
2024-04-06 09:12:50,955:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 09:12:50,975:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 09:12:50,975:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:12:50,987:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:12:50,987:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:12:51,005:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 09:12:51,006:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:12:51,018:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:12:51,018:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:12:51,018:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 09:12:51,038:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:12:51,051:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:12:51,051:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:12:51,070:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:12:51,081:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:12:51,081:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:12:51,081:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 09:12:51,110:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:12:51,111:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:12:51,140:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:12:51,140:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:12:51,141:INFO:Preparing preprocessing pipeline...
2024-04-06 09:12:51,141:INFO:Set up simple imputation.
2024-04-06 09:12:51,142:INFO:Set up feature normalization.
2024-04-06 09:12:51,152:INFO:Finished creating preprocessing pipeline.
2024-04-06 09:12:51,154:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 09:12:51,154:INFO:Creating final display dataframe.
2024-04-06 09:12:51,185:INFO:Setup _display_container:                     Description             Value
0                    Session id              8598
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              f31f
2024-04-06 09:12:51,219:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:12:51,219:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:12:51,253:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:12:51,253:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:12:51,253:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 09:12:51,254:INFO:setup() successfully completed in 0.32s...............
2024-04-06 09:12:51,255:INFO:Initializing compare_models()
2024-04-06 09:12:51,255:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17529f190>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x17529f190>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 09:12:51,255:INFO:Checking exceptions
2024-04-06 09:12:51,258:INFO:Preparing display monitor
2024-04-06 09:12:51,272:INFO:Initializing Logistic Regression
2024-04-06 09:12:51,272:INFO:Total runtime is 5.2531560262044275e-06 minutes
2024-04-06 09:12:51,275:INFO:SubProcess create_model() called ==================================
2024-04-06 09:12:51,275:INFO:Initializing create_model()
2024-04-06 09:12:51,275:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17529f190>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1752398d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:12:51,275:INFO:Checking exceptions
2024-04-06 09:12:51,276:INFO:Importing libraries
2024-04-06 09:12:51,276:INFO:Copying training dataset
2024-04-06 09:12:51,282:INFO:Defining folds
2024-04-06 09:12:51,282:INFO:Declaring metric variables
2024-04-06 09:12:51,283:INFO:Importing untrained model
2024-04-06 09:12:51,285:INFO:Logistic Regression Imported successfully
2024-04-06 09:12:51,314:INFO:Starting cross validation
2024-04-06 09:12:51,315:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:12:51,468:INFO:Calculating mean and std
2024-04-06 09:12:51,468:INFO:Creating metrics dataframe
2024-04-06 09:12:51,469:INFO:Uploading results into container
2024-04-06 09:12:51,469:INFO:Uploading model into container now
2024-04-06 09:12:51,469:INFO:_master_model_container: 1
2024-04-06 09:12:51,469:INFO:_display_container: 2
2024-04-06 09:12:51,469:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8598, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:12:51,469:INFO:create_model() successfully completed......................................
2024-04-06 09:12:51,610:INFO:SubProcess create_model() end ==================================
2024-04-06 09:12:51,610:INFO:Creating metrics dataframe
2024-04-06 09:12:51,613:INFO:Initializing Decision Tree Classifier
2024-04-06 09:12:51,613:INFO:Total runtime is 0.005680485566457113 minutes
2024-04-06 09:12:51,614:INFO:SubProcess create_model() called ==================================
2024-04-06 09:12:51,614:INFO:Initializing create_model()
2024-04-06 09:12:51,614:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17529f190>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1752398d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:12:51,614:INFO:Checking exceptions
2024-04-06 09:12:51,614:INFO:Importing libraries
2024-04-06 09:12:51,614:INFO:Copying training dataset
2024-04-06 09:12:51,617:INFO:Defining folds
2024-04-06 09:12:51,617:INFO:Declaring metric variables
2024-04-06 09:12:51,618:INFO:Importing untrained model
2024-04-06 09:12:51,619:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:12:51,621:INFO:Starting cross validation
2024-04-06 09:12:51,622:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:12:51,686:INFO:Calculating mean and std
2024-04-06 09:12:51,687:INFO:Creating metrics dataframe
2024-04-06 09:12:51,687:INFO:Uploading results into container
2024-04-06 09:12:51,687:INFO:Uploading model into container now
2024-04-06 09:12:51,688:INFO:_master_model_container: 2
2024-04-06 09:12:51,688:INFO:_display_container: 2
2024-04-06 09:12:51,688:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8598, splitter='best')
2024-04-06 09:12:51,688:INFO:create_model() successfully completed......................................
2024-04-06 09:12:51,764:INFO:SubProcess create_model() end ==================================
2024-04-06 09:12:51,764:INFO:Creating metrics dataframe
2024-04-06 09:12:51,766:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 09:12:51,769:INFO:Initializing create_model()
2024-04-06 09:12:51,769:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17529f190>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8598, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:12:51,769:INFO:Checking exceptions
2024-04-06 09:12:51,769:INFO:Importing libraries
2024-04-06 09:12:51,770:INFO:Copying training dataset
2024-04-06 09:12:51,772:INFO:Defining folds
2024-04-06 09:12:51,772:INFO:Declaring metric variables
2024-04-06 09:12:51,772:INFO:Importing untrained model
2024-04-06 09:12:51,772:INFO:Declaring custom model
2024-04-06 09:12:51,773:INFO:Logistic Regression Imported successfully
2024-04-06 09:12:51,773:INFO:Cross validation set to False
2024-04-06 09:12:51,773:INFO:Fitting Model
2024-04-06 09:12:51,780:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8598, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:12:51,780:INFO:create_model() successfully completed......................................
2024-04-06 09:12:51,901:INFO:Initializing create_model()
2024-04-06 09:12:51,901:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17529f190>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8598, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:12:51,901:INFO:Checking exceptions
2024-04-06 09:12:51,905:INFO:Importing libraries
2024-04-06 09:12:51,905:INFO:Copying training dataset
2024-04-06 09:12:51,911:INFO:Defining folds
2024-04-06 09:12:51,911:INFO:Declaring metric variables
2024-04-06 09:12:51,911:INFO:Importing untrained model
2024-04-06 09:12:51,911:INFO:Declaring custom model
2024-04-06 09:12:51,912:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:12:51,913:INFO:Cross validation set to False
2024-04-06 09:12:51,913:INFO:Fitting Model
2024-04-06 09:12:51,939:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8598, splitter='best')
2024-04-06 09:12:51,940:INFO:create_model() successfully completed......................................
2024-04-06 09:12:52,058:INFO:_master_model_container: 2
2024-04-06 09:12:52,059:INFO:_display_container: 2
2024-04-06 09:12:52,059:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8598, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8598, splitter='best')]
2024-04-06 09:12:52,059:INFO:compare_models() successfully completed......................................
2024-04-06 09:12:52,059:INFO:Initializing predict_model()
2024-04-06 09:12:52,059:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17529f190>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8598, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x173b2dc60>)
2024-04-06 09:12:52,060:INFO:Checking exceptions
2024-04-06 09:12:52,060:INFO:Preloading libraries
2024-04-06 09:12:52,637:INFO:Initializing predict_model()
2024-04-06 09:12:52,637:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17529f190>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8598, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x173b2dc60>)
2024-04-06 09:12:52,637:INFO:Checking exceptions
2024-04-06 09:12:52,637:INFO:Preloading libraries
2024-04-06 09:12:53,026:INFO:Initializing tune_model()
2024-04-06 09:12:53,026:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17529f190>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8598, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-06 09:12:53,026:INFO:Checking exceptions
2024-04-06 09:12:53,032:INFO:Copying training dataset
2024-04-06 09:12:53,035:INFO:Checking base model
2024-04-06 09:12:53,035:INFO:Base model : Logistic Regression
2024-04-06 09:12:53,040:INFO:Declaring metric variables
2024-04-06 09:12:53,046:INFO:Defining Hyperparameters
2024-04-06 09:12:53,137:INFO:Tuning with n_jobs=-1
2024-04-06 09:12:53,137:INFO:Initializing RandomizedSearchCV
2024-04-06 09:12:53,294:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 6.608000000000001}
2024-04-06 09:12:53,295:INFO:Hyperparameter search completed
2024-04-06 09:12:53,295:INFO:SubProcess create_model() called ==================================
2024-04-06 09:12:53,295:INFO:Initializing create_model()
2024-04-06 09:12:53,295:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17529f190>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8598, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x177654390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'class_weight': 'balanced', 'C': 6.608000000000001})
2024-04-06 09:12:53,295:INFO:Checking exceptions
2024-04-06 09:12:53,295:INFO:Importing libraries
2024-04-06 09:12:53,295:INFO:Copying training dataset
2024-04-06 09:12:53,297:INFO:Defining folds
2024-04-06 09:12:53,298:INFO:Declaring metric variables
2024-04-06 09:12:53,299:INFO:Importing untrained model
2024-04-06 09:12:53,299:INFO:Declaring custom model
2024-04-06 09:12:53,300:INFO:Logistic Regression Imported successfully
2024-04-06 09:12:53,302:INFO:Starting cross validation
2024-04-06 09:12:53,303:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:12:53,358:INFO:Calculating mean and std
2024-04-06 09:12:53,358:INFO:Creating metrics dataframe
2024-04-06 09:12:53,360:INFO:Finalizing model
2024-04-06 09:12:53,399:INFO:Uploading results into container
2024-04-06 09:12:53,400:INFO:Uploading model into container now
2024-04-06 09:12:53,400:INFO:_master_model_container: 3
2024-04-06 09:12:53,400:INFO:_display_container: 5
2024-04-06 09:12:53,401:INFO:LogisticRegression(C=6.608000000000001, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8598, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:12:53,401:INFO:create_model() successfully completed......................................
2024-04-06 09:12:53,551:INFO:SubProcess create_model() end ==================================
2024-04-06 09:12:53,552:INFO:choose_better activated
2024-04-06 09:12:53,559:INFO:SubProcess create_model() called ==================================
2024-04-06 09:12:53,560:INFO:Initializing create_model()
2024-04-06 09:12:53,561:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17529f190>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8598, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:12:53,561:INFO:Checking exceptions
2024-04-06 09:12:53,562:INFO:Importing libraries
2024-04-06 09:12:53,562:INFO:Copying training dataset
2024-04-06 09:12:53,564:INFO:Defining folds
2024-04-06 09:12:53,564:INFO:Declaring metric variables
2024-04-06 09:12:53,564:INFO:Importing untrained model
2024-04-06 09:12:53,564:INFO:Declaring custom model
2024-04-06 09:12:53,564:INFO:Logistic Regression Imported successfully
2024-04-06 09:12:53,564:INFO:Starting cross validation
2024-04-06 09:12:53,564:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:12:53,635:INFO:Calculating mean and std
2024-04-06 09:12:53,636:INFO:Creating metrics dataframe
2024-04-06 09:12:53,636:INFO:Finalizing model
2024-04-06 09:12:53,642:INFO:Uploading results into container
2024-04-06 09:12:53,642:INFO:Uploading model into container now
2024-04-06 09:12:53,643:INFO:_master_model_container: 4
2024-04-06 09:12:53,643:INFO:_display_container: 6
2024-04-06 09:12:53,643:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8598, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:12:53,643:INFO:create_model() successfully completed......................................
2024-04-06 09:12:53,754:INFO:SubProcess create_model() end ==================================
2024-04-06 09:12:53,757:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8598, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 0.5197
2024-04-06 09:12:53,757:INFO:LogisticRegression(C=6.608000000000001, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8598, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 0.5463
2024-04-06 09:12:53,757:INFO:LogisticRegression(C=6.608000000000001, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8598, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2024-04-06 09:12:53,758:INFO:choose_better completed
2024-04-06 09:12:53,775:INFO:_master_model_container: 4
2024-04-06 09:12:53,775:INFO:_display_container: 5
2024-04-06 09:12:53,776:INFO:LogisticRegression(C=6.608000000000001, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8598, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:12:53,776:INFO:tune_model() successfully completed......................................
2024-04-06 09:12:53,873:INFO:Initializing predict_model()
2024-04-06 09:12:53,874:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17529f190>, estimator=LogisticRegression(C=6.608000000000001, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8598, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1778f8720>)
2024-04-06 09:12:53,874:INFO:Checking exceptions
2024-04-06 09:12:53,874:INFO:Preloading libraries
2024-04-06 09:13:31,455:INFO:PyCaret ClassificationExperiment
2024-04-06 09:13:31,455:INFO:Logging name: clf-default-name
2024-04-06 09:13:31,455:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 09:13:31,455:INFO:version 3.3.0
2024-04-06 09:13:31,455:INFO:Initializing setup()
2024-04-06 09:13:31,455:INFO:self.USI: ef02
2024-04-06 09:13:31,455:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 09:13:31,455:INFO:Checking environment
2024-04-06 09:13:31,455:INFO:python_version: 3.11.3
2024-04-06 09:13:31,455:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 09:13:31,455:INFO:machine: arm64
2024-04-06 09:13:31,455:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 09:13:31,455:INFO:Memory: svmem(total=8589934592, available=1837301760, percent=78.6, used=2948923392, free=63406080, active=1784561664, inactive=1771044864, wired=1164361728)
2024-04-06 09:13:31,455:INFO:Physical Core: 8
2024-04-06 09:13:31,455:INFO:Logical Core: 8
2024-04-06 09:13:31,455:INFO:Checking libraries
2024-04-06 09:13:31,455:INFO:System:
2024-04-06 09:13:31,455:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 09:13:31,455:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 09:13:31,455:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 09:13:31,455:INFO:PyCaret required dependencies:
2024-04-06 09:13:31,455:INFO:                 pip: 24.0
2024-04-06 09:13:31,455:INFO:          setuptools: 65.5.0
2024-04-06 09:13:31,455:INFO:             pycaret: 3.3.0
2024-04-06 09:13:31,455:INFO:             IPython: 8.23.0
2024-04-06 09:13:31,455:INFO:          ipywidgets: 8.1.2
2024-04-06 09:13:31,455:INFO:                tqdm: 4.66.2
2024-04-06 09:13:31,455:INFO:               numpy: 1.26.4
2024-04-06 09:13:31,455:INFO:              pandas: 2.1.4
2024-04-06 09:13:31,455:INFO:              jinja2: 3.1.3
2024-04-06 09:13:31,455:INFO:               scipy: 1.11.4
2024-04-06 09:13:31,455:INFO:              joblib: 1.3.2
2024-04-06 09:13:31,455:INFO:             sklearn: 1.4.1.post1
2024-04-06 09:13:31,455:INFO:                pyod: 1.1.3
2024-04-06 09:13:31,455:INFO:            imblearn: 0.12.2
2024-04-06 09:13:31,455:INFO:   category_encoders: 2.6.3
2024-04-06 09:13:31,455:INFO:            lightgbm: 4.3.0
2024-04-06 09:13:31,455:INFO:               numba: 0.59.1
2024-04-06 09:13:31,455:INFO:            requests: 2.31.0
2024-04-06 09:13:31,455:INFO:          matplotlib: 3.7.5
2024-04-06 09:13:31,455:INFO:          scikitplot: 0.3.7
2024-04-06 09:13:31,455:INFO:         yellowbrick: 1.5
2024-04-06 09:13:31,455:INFO:              plotly: 5.20.0
2024-04-06 09:13:31,455:INFO:    plotly-resampler: Not installed
2024-04-06 09:13:31,456:INFO:             kaleido: 0.2.1
2024-04-06 09:13:31,456:INFO:           schemdraw: 0.15
2024-04-06 09:13:31,456:INFO:         statsmodels: 0.14.1
2024-04-06 09:13:31,456:INFO:              sktime: 0.28.0
2024-04-06 09:13:31,456:INFO:               tbats: 1.1.3
2024-04-06 09:13:31,456:INFO:            pmdarima: 2.0.4
2024-04-06 09:13:31,456:INFO:              psutil: 5.9.8
2024-04-06 09:13:31,456:INFO:          markupsafe: 2.1.5
2024-04-06 09:13:31,456:INFO:             pickle5: Not installed
2024-04-06 09:13:31,456:INFO:         cloudpickle: 3.0.0
2024-04-06 09:13:31,456:INFO:         deprecation: 2.1.0
2024-04-06 09:13:31,456:INFO:              xxhash: 3.4.1
2024-04-06 09:13:31,456:INFO:           wurlitzer: 3.0.3
2024-04-06 09:13:31,456:INFO:PyCaret optional dependencies:
2024-04-06 09:13:31,456:INFO:                shap: Not installed
2024-04-06 09:13:31,456:INFO:           interpret: Not installed
2024-04-06 09:13:31,456:INFO:                umap: Not installed
2024-04-06 09:13:31,456:INFO:     ydata_profiling: Not installed
2024-04-06 09:13:31,456:INFO:  explainerdashboard: Not installed
2024-04-06 09:13:31,456:INFO:             autoviz: Not installed
2024-04-06 09:13:31,456:INFO:           fairlearn: Not installed
2024-04-06 09:13:31,456:INFO:          deepchecks: Not installed
2024-04-06 09:13:31,456:INFO:             xgboost: Not installed
2024-04-06 09:13:31,456:INFO:            catboost: Not installed
2024-04-06 09:13:31,456:INFO:              kmodes: Not installed
2024-04-06 09:13:31,456:INFO:             mlxtend: Not installed
2024-04-06 09:13:31,456:INFO:       statsforecast: Not installed
2024-04-06 09:13:31,456:INFO:        tune_sklearn: Not installed
2024-04-06 09:13:31,456:INFO:                 ray: Not installed
2024-04-06 09:13:31,456:INFO:            hyperopt: Not installed
2024-04-06 09:13:31,456:INFO:              optuna: Not installed
2024-04-06 09:13:31,456:INFO:               skopt: Not installed
2024-04-06 09:13:31,456:INFO:              mlflow: 2.11.3
2024-04-06 09:13:31,456:INFO:              gradio: Not installed
2024-04-06 09:13:31,456:INFO:             fastapi: Not installed
2024-04-06 09:13:31,456:INFO:             uvicorn: Not installed
2024-04-06 09:13:31,456:INFO:              m2cgen: Not installed
2024-04-06 09:13:31,456:INFO:           evidently: Not installed
2024-04-06 09:13:31,456:INFO:               fugue: Not installed
2024-04-06 09:13:31,456:INFO:           streamlit: 1.33.0
2024-04-06 09:13:31,456:INFO:             prophet: 1.1.5
2024-04-06 09:13:31,456:INFO:None
2024-04-06 09:13:31,456:INFO:Set up data.
2024-04-06 09:13:31,459:INFO:Set up folding strategy.
2024-04-06 09:13:31,459:INFO:Set up train/test split.
2024-04-06 09:13:31,459:INFO:Set up data.
2024-04-06 09:13:31,461:INFO:Set up index.
2024-04-06 09:13:31,461:INFO:Assigning column types.
2024-04-06 09:13:31,464:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 09:13:31,482:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 09:13:31,483:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:13:31,494:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:13:31,494:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:13:31,512:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 09:13:31,512:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:13:31,523:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:13:31,523:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:13:31,524:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 09:13:31,542:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:13:31,553:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:13:31,553:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:13:31,572:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:13:31,582:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:13:31,582:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:13:31,582:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 09:13:31,611:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:13:31,611:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:13:31,640:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:13:31,640:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:13:31,641:INFO:Preparing preprocessing pipeline...
2024-04-06 09:13:31,641:INFO:Set up simple imputation.
2024-04-06 09:13:31,641:INFO:Set up feature normalization.
2024-04-06 09:13:31,652:INFO:Finished creating preprocessing pipeline.
2024-04-06 09:13:31,654:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 09:13:31,654:INFO:Creating final display dataframe.
2024-04-06 09:13:31,682:INFO:Setup _display_container:                     Description             Value
0                    Session id              5815
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              ef02
2024-04-06 09:13:31,715:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:13:31,715:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:13:31,744:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:13:31,744:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:13:31,745:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 09:13:31,745:INFO:setup() successfully completed in 0.29s...............
2024-04-06 09:13:31,746:INFO:Initializing compare_models()
2024-04-06 09:13:31,746:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177c48c10>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x177c48c10>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 09:13:31,746:INFO:Checking exceptions
2024-04-06 09:13:31,748:INFO:Preparing display monitor
2024-04-06 09:13:31,758:INFO:Initializing Logistic Regression
2024-04-06 09:13:31,759:INFO:Total runtime is 3.6517779032389322e-06 minutes
2024-04-06 09:13:31,760:INFO:SubProcess create_model() called ==================================
2024-04-06 09:13:31,760:INFO:Initializing create_model()
2024-04-06 09:13:31,760:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177c48c10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x177edb6d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:13:31,760:INFO:Checking exceptions
2024-04-06 09:13:31,760:INFO:Importing libraries
2024-04-06 09:13:31,760:INFO:Copying training dataset
2024-04-06 09:13:31,765:INFO:Defining folds
2024-04-06 09:13:31,765:INFO:Declaring metric variables
2024-04-06 09:13:31,767:INFO:Importing untrained model
2024-04-06 09:13:31,768:INFO:Logistic Regression Imported successfully
2024-04-06 09:13:31,790:INFO:Starting cross validation
2024-04-06 09:13:31,790:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:13:31,965:INFO:Calculating mean and std
2024-04-06 09:13:31,965:INFO:Creating metrics dataframe
2024-04-06 09:13:31,966:INFO:Uploading results into container
2024-04-06 09:13:31,966:INFO:Uploading model into container now
2024-04-06 09:13:31,966:INFO:_master_model_container: 1
2024-04-06 09:13:31,966:INFO:_display_container: 2
2024-04-06 09:13:31,967:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5815, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:13:31,967:INFO:create_model() successfully completed......................................
2024-04-06 09:13:32,081:INFO:SubProcess create_model() end ==================================
2024-04-06 09:13:32,082:INFO:Creating metrics dataframe
2024-04-06 09:13:32,084:INFO:Initializing Decision Tree Classifier
2024-04-06 09:13:32,084:INFO:Total runtime is 0.005427602926890055 minutes
2024-04-06 09:13:32,085:INFO:SubProcess create_model() called ==================================
2024-04-06 09:13:32,085:INFO:Initializing create_model()
2024-04-06 09:13:32,085:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177c48c10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x177edb6d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:13:32,085:INFO:Checking exceptions
2024-04-06 09:13:32,085:INFO:Importing libraries
2024-04-06 09:13:32,085:INFO:Copying training dataset
2024-04-06 09:13:32,088:INFO:Defining folds
2024-04-06 09:13:32,088:INFO:Declaring metric variables
2024-04-06 09:13:32,089:INFO:Importing untrained model
2024-04-06 09:13:32,090:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:13:32,092:INFO:Starting cross validation
2024-04-06 09:13:32,093:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:13:32,169:INFO:Calculating mean and std
2024-04-06 09:13:32,169:INFO:Creating metrics dataframe
2024-04-06 09:13:32,170:INFO:Uploading results into container
2024-04-06 09:13:32,170:INFO:Uploading model into container now
2024-04-06 09:13:32,170:INFO:_master_model_container: 2
2024-04-06 09:13:32,170:INFO:_display_container: 2
2024-04-06 09:13:32,170:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5815, splitter='best')
2024-04-06 09:13:32,170:INFO:create_model() successfully completed......................................
2024-04-06 09:13:32,246:INFO:SubProcess create_model() end ==================================
2024-04-06 09:13:32,246:INFO:Creating metrics dataframe
2024-04-06 09:13:32,248:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 09:13:32,251:INFO:Initializing create_model()
2024-04-06 09:13:32,251:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177c48c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5815, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:13:32,251:INFO:Checking exceptions
2024-04-06 09:13:32,252:INFO:Importing libraries
2024-04-06 09:13:32,252:INFO:Copying training dataset
2024-04-06 09:13:32,254:INFO:Defining folds
2024-04-06 09:13:32,254:INFO:Declaring metric variables
2024-04-06 09:13:32,254:INFO:Importing untrained model
2024-04-06 09:13:32,254:INFO:Declaring custom model
2024-04-06 09:13:32,255:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:13:32,255:INFO:Cross validation set to False
2024-04-06 09:13:32,255:INFO:Fitting Model
2024-04-06 09:13:32,269:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5815, splitter='best')
2024-04-06 09:13:32,269:INFO:create_model() successfully completed......................................
2024-04-06 09:13:32,346:INFO:Initializing create_model()
2024-04-06 09:13:32,346:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177c48c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5815, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:13:32,346:INFO:Checking exceptions
2024-04-06 09:13:32,346:INFO:Importing libraries
2024-04-06 09:13:32,346:INFO:Copying training dataset
2024-04-06 09:13:32,348:INFO:Defining folds
2024-04-06 09:13:32,348:INFO:Declaring metric variables
2024-04-06 09:13:32,348:INFO:Importing untrained model
2024-04-06 09:13:32,349:INFO:Declaring custom model
2024-04-06 09:13:32,349:INFO:Logistic Regression Imported successfully
2024-04-06 09:13:32,349:INFO:Cross validation set to False
2024-04-06 09:13:32,349:INFO:Fitting Model
2024-04-06 09:13:32,355:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5815, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:13:32,355:INFO:create_model() successfully completed......................................
2024-04-06 09:13:32,511:INFO:_master_model_container: 2
2024-04-06 09:13:32,512:INFO:_display_container: 2
2024-04-06 09:13:32,512:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5815, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5815, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-06 09:13:32,513:INFO:compare_models() successfully completed......................................
2024-04-06 09:13:32,514:INFO:Initializing predict_model()
2024-04-06 09:13:32,514:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177c48c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5815, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x107f30720>)
2024-04-06 09:13:32,514:INFO:Checking exceptions
2024-04-06 09:13:32,515:INFO:Preloading libraries
2024-04-06 09:13:33,207:INFO:Initializing predict_model()
2024-04-06 09:13:33,207:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177c48c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5815, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3080962a0>)
2024-04-06 09:13:33,207:INFO:Checking exceptions
2024-04-06 09:13:33,207:INFO:Preloading libraries
2024-04-06 09:13:33,668:INFO:Initializing tune_model()
2024-04-06 09:13:33,668:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177c48c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5815, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-06 09:13:33,668:INFO:Checking exceptions
2024-04-06 09:13:33,674:INFO:Copying training dataset
2024-04-06 09:13:33,680:INFO:Checking base model
2024-04-06 09:13:33,680:INFO:Base model : Logistic Regression
2024-04-06 09:13:33,681:INFO:Declaring metric variables
2024-04-06 09:13:33,682:INFO:Defining Hyperparameters
2024-04-06 09:13:33,763:INFO:Tuning with n_jobs=-1
2024-04-06 09:13:33,763:INFO:Initializing RandomizedSearchCV
2024-04-06 09:13:33,945:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 6.733000000000001}
2024-04-06 09:13:33,945:INFO:Hyperparameter search completed
2024-04-06 09:13:33,945:INFO:SubProcess create_model() called ==================================
2024-04-06 09:13:33,946:INFO:Initializing create_model()
2024-04-06 09:13:33,946:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177c48c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5815, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1751d0f90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'class_weight': 'balanced', 'C': 6.733000000000001})
2024-04-06 09:13:33,946:INFO:Checking exceptions
2024-04-06 09:13:33,946:INFO:Importing libraries
2024-04-06 09:13:33,946:INFO:Copying training dataset
2024-04-06 09:13:33,948:INFO:Defining folds
2024-04-06 09:13:33,948:INFO:Declaring metric variables
2024-04-06 09:13:33,949:INFO:Importing untrained model
2024-04-06 09:13:33,949:INFO:Declaring custom model
2024-04-06 09:13:33,950:INFO:Logistic Regression Imported successfully
2024-04-06 09:13:33,953:INFO:Starting cross validation
2024-04-06 09:13:33,953:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:13:34,010:INFO:Calculating mean and std
2024-04-06 09:13:34,010:INFO:Creating metrics dataframe
2024-04-06 09:13:34,012:INFO:Finalizing model
2024-04-06 09:13:34,063:INFO:Uploading results into container
2024-04-06 09:13:34,064:INFO:Uploading model into container now
2024-04-06 09:13:34,068:INFO:_master_model_container: 3
2024-04-06 09:13:34,068:INFO:_display_container: 5
2024-04-06 09:13:34,074:INFO:LogisticRegression(C=6.733000000000001, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5815, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:13:34,074:INFO:create_model() successfully completed......................................
2024-04-06 09:13:34,174:INFO:SubProcess create_model() end ==================================
2024-04-06 09:13:34,174:INFO:choose_better activated
2024-04-06 09:13:34,178:INFO:SubProcess create_model() called ==================================
2024-04-06 09:13:34,178:INFO:Initializing create_model()
2024-04-06 09:13:34,178:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177c48c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5815, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:13:34,178:INFO:Checking exceptions
2024-04-06 09:13:34,181:INFO:Importing libraries
2024-04-06 09:13:34,181:INFO:Copying training dataset
2024-04-06 09:13:34,187:INFO:Defining folds
2024-04-06 09:13:34,187:INFO:Declaring metric variables
2024-04-06 09:13:34,187:INFO:Importing untrained model
2024-04-06 09:13:34,187:INFO:Declaring custom model
2024-04-06 09:13:34,188:INFO:Logistic Regression Imported successfully
2024-04-06 09:13:34,188:INFO:Starting cross validation
2024-04-06 09:13:34,189:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:13:34,268:INFO:Calculating mean and std
2024-04-06 09:13:34,269:INFO:Creating metrics dataframe
2024-04-06 09:13:34,271:INFO:Finalizing model
2024-04-06 09:13:34,287:INFO:Uploading results into container
2024-04-06 09:13:34,288:INFO:Uploading model into container now
2024-04-06 09:13:34,288:INFO:_master_model_container: 4
2024-04-06 09:13:34,288:INFO:_display_container: 6
2024-04-06 09:13:34,289:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5815, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:13:34,289:INFO:create_model() successfully completed......................................
2024-04-06 09:13:34,374:INFO:SubProcess create_model() end ==================================
2024-04-06 09:13:34,375:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5815, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 0.5261
2024-04-06 09:13:34,375:INFO:LogisticRegression(C=6.733000000000001, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5815, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 0.545
2024-04-06 09:13:34,375:INFO:LogisticRegression(C=6.733000000000001, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5815, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2024-04-06 09:13:34,375:INFO:choose_better completed
2024-04-06 09:13:34,397:INFO:_master_model_container: 4
2024-04-06 09:13:34,397:INFO:_display_container: 5
2024-04-06 09:13:34,398:INFO:LogisticRegression(C=6.733000000000001, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5815, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:13:34,398:INFO:tune_model() successfully completed......................................
2024-04-06 09:13:34,515:INFO:Initializing predict_model()
2024-04-06 09:13:34,515:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177c48c10>, estimator=LogisticRegression(C=6.733000000000001, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5815, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x107f30720>)
2024-04-06 09:13:34,515:INFO:Checking exceptions
2024-04-06 09:13:34,515:INFO:Preloading libraries
2024-04-06 09:15:00,933:INFO:PyCaret ClassificationExperiment
2024-04-06 09:15:00,933:INFO:Logging name: clf-default-name
2024-04-06 09:15:00,933:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 09:15:00,933:INFO:version 3.3.0
2024-04-06 09:15:00,933:INFO:Initializing setup()
2024-04-06 09:15:00,933:INFO:self.USI: 5758
2024-04-06 09:15:00,933:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 09:15:00,933:INFO:Checking environment
2024-04-06 09:15:00,933:INFO:python_version: 3.11.3
2024-04-06 09:15:00,933:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 09:15:00,933:INFO:machine: arm64
2024-04-06 09:15:00,933:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 09:15:00,933:INFO:Memory: svmem(total=8589934592, available=1888141312, percent=78.0, used=2996027392, free=38715392, active=1859878912, inactive=1848098816, wired=1136148480)
2024-04-06 09:15:00,933:INFO:Physical Core: 8
2024-04-06 09:15:00,933:INFO:Logical Core: 8
2024-04-06 09:15:00,933:INFO:Checking libraries
2024-04-06 09:15:00,933:INFO:System:
2024-04-06 09:15:00,933:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 09:15:00,933:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 09:15:00,933:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 09:15:00,933:INFO:PyCaret required dependencies:
2024-04-06 09:15:00,934:INFO:                 pip: 24.0
2024-04-06 09:15:00,934:INFO:          setuptools: 65.5.0
2024-04-06 09:15:00,934:INFO:             pycaret: 3.3.0
2024-04-06 09:15:00,934:INFO:             IPython: 8.23.0
2024-04-06 09:15:00,934:INFO:          ipywidgets: 8.1.2
2024-04-06 09:15:00,934:INFO:                tqdm: 4.66.2
2024-04-06 09:15:00,934:INFO:               numpy: 1.26.4
2024-04-06 09:15:00,934:INFO:              pandas: 2.1.4
2024-04-06 09:15:00,934:INFO:              jinja2: 3.1.3
2024-04-06 09:15:00,934:INFO:               scipy: 1.11.4
2024-04-06 09:15:00,934:INFO:              joblib: 1.3.2
2024-04-06 09:15:00,934:INFO:             sklearn: 1.4.1.post1
2024-04-06 09:15:00,934:INFO:                pyod: 1.1.3
2024-04-06 09:15:00,934:INFO:            imblearn: 0.12.2
2024-04-06 09:15:00,934:INFO:   category_encoders: 2.6.3
2024-04-06 09:15:00,934:INFO:            lightgbm: 4.3.0
2024-04-06 09:15:00,934:INFO:               numba: 0.59.1
2024-04-06 09:15:00,934:INFO:            requests: 2.31.0
2024-04-06 09:15:00,934:INFO:          matplotlib: 3.7.5
2024-04-06 09:15:00,934:INFO:          scikitplot: 0.3.7
2024-04-06 09:15:00,934:INFO:         yellowbrick: 1.5
2024-04-06 09:15:00,934:INFO:              plotly: 5.20.0
2024-04-06 09:15:00,934:INFO:    plotly-resampler: Not installed
2024-04-06 09:15:00,934:INFO:             kaleido: 0.2.1
2024-04-06 09:15:00,934:INFO:           schemdraw: 0.15
2024-04-06 09:15:00,934:INFO:         statsmodels: 0.14.1
2024-04-06 09:15:00,934:INFO:              sktime: 0.28.0
2024-04-06 09:15:00,934:INFO:               tbats: 1.1.3
2024-04-06 09:15:00,934:INFO:            pmdarima: 2.0.4
2024-04-06 09:15:00,934:INFO:              psutil: 5.9.8
2024-04-06 09:15:00,934:INFO:          markupsafe: 2.1.5
2024-04-06 09:15:00,934:INFO:             pickle5: Not installed
2024-04-06 09:15:00,934:INFO:         cloudpickle: 3.0.0
2024-04-06 09:15:00,934:INFO:         deprecation: 2.1.0
2024-04-06 09:15:00,934:INFO:              xxhash: 3.4.1
2024-04-06 09:15:00,934:INFO:           wurlitzer: 3.0.3
2024-04-06 09:15:00,934:INFO:PyCaret optional dependencies:
2024-04-06 09:15:00,934:INFO:                shap: Not installed
2024-04-06 09:15:00,934:INFO:           interpret: Not installed
2024-04-06 09:15:00,934:INFO:                umap: Not installed
2024-04-06 09:15:00,934:INFO:     ydata_profiling: Not installed
2024-04-06 09:15:00,934:INFO:  explainerdashboard: Not installed
2024-04-06 09:15:00,934:INFO:             autoviz: Not installed
2024-04-06 09:15:00,934:INFO:           fairlearn: Not installed
2024-04-06 09:15:00,934:INFO:          deepchecks: Not installed
2024-04-06 09:15:00,934:INFO:             xgboost: Not installed
2024-04-06 09:15:00,934:INFO:            catboost: Not installed
2024-04-06 09:15:00,934:INFO:              kmodes: Not installed
2024-04-06 09:15:00,934:INFO:             mlxtend: Not installed
2024-04-06 09:15:00,934:INFO:       statsforecast: Not installed
2024-04-06 09:15:00,934:INFO:        tune_sklearn: Not installed
2024-04-06 09:15:00,934:INFO:                 ray: Not installed
2024-04-06 09:15:00,934:INFO:            hyperopt: Not installed
2024-04-06 09:15:00,934:INFO:              optuna: Not installed
2024-04-06 09:15:00,934:INFO:               skopt: Not installed
2024-04-06 09:15:00,934:INFO:              mlflow: 2.11.3
2024-04-06 09:15:00,934:INFO:              gradio: Not installed
2024-04-06 09:15:00,934:INFO:             fastapi: Not installed
2024-04-06 09:15:00,934:INFO:             uvicorn: Not installed
2024-04-06 09:15:00,934:INFO:              m2cgen: Not installed
2024-04-06 09:15:00,934:INFO:           evidently: Not installed
2024-04-06 09:15:00,934:INFO:               fugue: Not installed
2024-04-06 09:15:00,934:INFO:           streamlit: 1.33.0
2024-04-06 09:15:00,934:INFO:             prophet: 1.1.5
2024-04-06 09:15:00,934:INFO:None
2024-04-06 09:15:00,934:INFO:Set up data.
2024-04-06 09:15:00,938:INFO:Set up folding strategy.
2024-04-06 09:15:00,939:INFO:Set up train/test split.
2024-04-06 09:15:00,939:INFO:Set up data.
2024-04-06 09:15:00,941:INFO:Set up index.
2024-04-06 09:15:00,941:INFO:Assigning column types.
2024-04-06 09:15:00,944:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 09:15:00,963:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 09:15:00,964:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:15:00,977:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:15:00,978:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:15:00,997:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 09:15:00,999:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:15:01,012:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:15:01,012:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:15:01,012:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 09:15:01,030:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:15:01,041:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:15:01,041:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:15:01,059:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:15:01,070:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:15:01,070:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:15:01,070:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 09:15:01,099:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:15:01,099:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:15:01,129:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:15:01,129:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:15:01,129:INFO:Preparing preprocessing pipeline...
2024-04-06 09:15:01,130:INFO:Set up simple imputation.
2024-04-06 09:15:01,130:INFO:Set up feature normalization.
2024-04-06 09:15:01,141:INFO:Finished creating preprocessing pipeline.
2024-04-06 09:15:01,142:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 09:15:01,142:INFO:Creating final display dataframe.
2024-04-06 09:15:01,174:INFO:Setup _display_container:                     Description             Value
0                    Session id              1994
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              5758
2024-04-06 09:15:01,207:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:15:01,208:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:15:01,237:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:15:01,237:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:15:01,237:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 09:15:01,238:INFO:setup() successfully completed in 0.31s...............
2024-04-06 09:15:01,239:INFO:Initializing compare_models()
2024-04-06 09:15:01,239:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177b70c10>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x177b70c10>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 09:15:01,239:INFO:Checking exceptions
2024-04-06 09:15:01,241:INFO:Preparing display monitor
2024-04-06 09:15:01,250:INFO:Initializing Logistic Regression
2024-04-06 09:15:01,251:INFO:Total runtime is 1.8000602722167968e-06 minutes
2024-04-06 09:15:01,252:INFO:SubProcess create_model() called ==================================
2024-04-06 09:15:01,252:INFO:Initializing create_model()
2024-04-06 09:15:01,252:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177b70c10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x174ec8d50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:15:01,252:INFO:Checking exceptions
2024-04-06 09:15:01,252:INFO:Importing libraries
2024-04-06 09:15:01,252:INFO:Copying training dataset
2024-04-06 09:15:01,255:INFO:Defining folds
2024-04-06 09:15:01,256:INFO:Declaring metric variables
2024-04-06 09:15:01,257:INFO:Importing untrained model
2024-04-06 09:15:01,259:INFO:Logistic Regression Imported successfully
2024-04-06 09:15:01,263:INFO:Starting cross validation
2024-04-06 09:15:01,264:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:15:01,410:INFO:Calculating mean and std
2024-04-06 09:15:01,410:INFO:Creating metrics dataframe
2024-04-06 09:15:01,411:INFO:Uploading results into container
2024-04-06 09:15:01,411:INFO:Uploading model into container now
2024-04-06 09:15:01,411:INFO:_master_model_container: 1
2024-04-06 09:15:01,411:INFO:_display_container: 2
2024-04-06 09:15:01,411:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1994, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:15:01,411:INFO:create_model() successfully completed......................................
2024-04-06 09:15:01,547:INFO:SubProcess create_model() end ==================================
2024-04-06 09:15:01,547:INFO:Creating metrics dataframe
2024-04-06 09:15:01,550:INFO:Initializing Decision Tree Classifier
2024-04-06 09:15:01,550:INFO:Total runtime is 0.004990180333455403 minutes
2024-04-06 09:15:01,551:INFO:SubProcess create_model() called ==================================
2024-04-06 09:15:01,551:INFO:Initializing create_model()
2024-04-06 09:15:01,551:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177b70c10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x174ec8d50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:15:01,551:INFO:Checking exceptions
2024-04-06 09:15:01,551:INFO:Importing libraries
2024-04-06 09:15:01,551:INFO:Copying training dataset
2024-04-06 09:15:01,554:INFO:Defining folds
2024-04-06 09:15:01,554:INFO:Declaring metric variables
2024-04-06 09:15:01,555:INFO:Importing untrained model
2024-04-06 09:15:01,556:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:15:01,558:INFO:Starting cross validation
2024-04-06 09:15:01,559:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:15:01,631:INFO:Calculating mean and std
2024-04-06 09:15:01,631:INFO:Creating metrics dataframe
2024-04-06 09:15:01,632:INFO:Uploading results into container
2024-04-06 09:15:01,632:INFO:Uploading model into container now
2024-04-06 09:15:01,632:INFO:_master_model_container: 2
2024-04-06 09:15:01,632:INFO:_display_container: 2
2024-04-06 09:15:01,632:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1994, splitter='best')
2024-04-06 09:15:01,632:INFO:create_model() successfully completed......................................
2024-04-06 09:15:01,736:INFO:SubProcess create_model() end ==================================
2024-04-06 09:15:01,736:INFO:Creating metrics dataframe
2024-04-06 09:15:01,738:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 09:15:01,742:INFO:Initializing create_model()
2024-04-06 09:15:01,742:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177b70c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1994, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:15:01,742:INFO:Checking exceptions
2024-04-06 09:15:01,742:INFO:Importing libraries
2024-04-06 09:15:01,742:INFO:Copying training dataset
2024-04-06 09:15:01,745:INFO:Defining folds
2024-04-06 09:15:01,745:INFO:Declaring metric variables
2024-04-06 09:15:01,745:INFO:Importing untrained model
2024-04-06 09:15:01,745:INFO:Declaring custom model
2024-04-06 09:15:01,745:INFO:Logistic Regression Imported successfully
2024-04-06 09:15:01,745:INFO:Cross validation set to False
2024-04-06 09:15:01,745:INFO:Fitting Model
2024-04-06 09:15:01,783:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1994, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:15:01,783:INFO:create_model() successfully completed......................................
2024-04-06 09:15:01,978:INFO:Initializing create_model()
2024-04-06 09:15:01,978:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177b70c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1994, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:15:01,978:INFO:Checking exceptions
2024-04-06 09:15:01,980:INFO:Importing libraries
2024-04-06 09:15:01,980:INFO:Copying training dataset
2024-04-06 09:15:01,986:INFO:Defining folds
2024-04-06 09:15:01,986:INFO:Declaring metric variables
2024-04-06 09:15:01,986:INFO:Importing untrained model
2024-04-06 09:15:01,986:INFO:Declaring custom model
2024-04-06 09:15:01,987:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:15:01,988:INFO:Cross validation set to False
2024-04-06 09:15:01,988:INFO:Fitting Model
2024-04-06 09:15:02,013:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1994, splitter='best')
2024-04-06 09:15:02,014:INFO:create_model() successfully completed......................................
2024-04-06 09:15:02,123:INFO:_master_model_container: 2
2024-04-06 09:15:02,124:INFO:_display_container: 2
2024-04-06 09:15:02,124:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1994, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1994, splitter='best')]
2024-04-06 09:15:02,124:INFO:compare_models() successfully completed......................................
2024-04-06 09:15:02,124:INFO:Initializing predict_model()
2024-04-06 09:15:02,125:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177b70c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1994, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17791db20>)
2024-04-06 09:15:02,125:INFO:Checking exceptions
2024-04-06 09:15:02,125:INFO:Preloading libraries
2024-04-06 09:15:02,726:INFO:Initializing predict_model()
2024-04-06 09:15:02,726:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177b70c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1994, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x177c66480>)
2024-04-06 09:15:02,726:INFO:Checking exceptions
2024-04-06 09:15:02,726:INFO:Preloading libraries
2024-04-06 09:15:03,118:INFO:Initializing tune_model()
2024-04-06 09:15:03,119:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177b70c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1994, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-06 09:15:03,119:INFO:Checking exceptions
2024-04-06 09:15:03,125:INFO:Copying training dataset
2024-04-06 09:15:03,129:INFO:Checking base model
2024-04-06 09:15:03,130:INFO:Base model : Decision Tree Classifier
2024-04-06 09:15:03,132:INFO:Declaring metric variables
2024-04-06 09:15:03,134:INFO:Defining Hyperparameters
2024-04-06 09:15:03,264:INFO:Tuning with n_jobs=-1
2024-04-06 09:15:03,264:INFO:Initializing RandomizedSearchCV
2024-04-06 09:15:03,375:INFO:best_params: {'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0.0005, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 8, 'actual_estimator__criterion': 'entropy'}
2024-04-06 09:15:03,375:INFO:Hyperparameter search completed
2024-04-06 09:15:03,375:INFO:SubProcess create_model() called ==================================
2024-04-06 09:15:03,375:INFO:Initializing create_model()
2024-04-06 09:15:03,375:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177b70c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1994, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x177e7ced0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 10, 'min_samples_leaf': 6, 'min_impurity_decrease': 0.0005, 'max_features': 1.0, 'max_depth': 8, 'criterion': 'entropy'})
2024-04-06 09:15:03,375:INFO:Checking exceptions
2024-04-06 09:15:03,375:INFO:Importing libraries
2024-04-06 09:15:03,375:INFO:Copying training dataset
2024-04-06 09:15:03,377:INFO:Defining folds
2024-04-06 09:15:03,377:INFO:Declaring metric variables
2024-04-06 09:15:03,378:INFO:Importing untrained model
2024-04-06 09:15:03,378:INFO:Declaring custom model
2024-04-06 09:15:03,380:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:15:03,382:INFO:Starting cross validation
2024-04-06 09:15:03,382:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:15:03,436:INFO:Calculating mean and std
2024-04-06 09:15:03,436:INFO:Creating metrics dataframe
2024-04-06 09:15:03,438:INFO:Finalizing model
2024-04-06 09:15:03,447:INFO:Uploading results into container
2024-04-06 09:15:03,448:INFO:Uploading model into container now
2024-04-06 09:15:03,448:INFO:_master_model_container: 3
2024-04-06 09:15:03,448:INFO:_display_container: 5
2024-04-06 09:15:03,448:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=8, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.0005, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1994, splitter='best')
2024-04-06 09:15:03,448:INFO:create_model() successfully completed......................................
2024-04-06 09:15:03,536:INFO:SubProcess create_model() end ==================================
2024-04-06 09:15:03,536:INFO:choose_better activated
2024-04-06 09:15:03,537:INFO:SubProcess create_model() called ==================================
2024-04-06 09:15:03,537:INFO:Initializing create_model()
2024-04-06 09:15:03,537:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177b70c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1994, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:15:03,537:INFO:Checking exceptions
2024-04-06 09:15:03,538:INFO:Importing libraries
2024-04-06 09:15:03,538:INFO:Copying training dataset
2024-04-06 09:15:03,541:INFO:Defining folds
2024-04-06 09:15:03,541:INFO:Declaring metric variables
2024-04-06 09:15:03,541:INFO:Importing untrained model
2024-04-06 09:15:03,541:INFO:Declaring custom model
2024-04-06 09:15:03,541:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:15:03,541:INFO:Starting cross validation
2024-04-06 09:15:03,541:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:15:03,609:INFO:Calculating mean and std
2024-04-06 09:15:03,609:INFO:Creating metrics dataframe
2024-04-06 09:15:03,609:INFO:Finalizing model
2024-04-06 09:15:03,622:INFO:Uploading results into container
2024-04-06 09:15:03,622:INFO:Uploading model into container now
2024-04-06 09:15:03,623:INFO:_master_model_container: 4
2024-04-06 09:15:03,623:INFO:_display_container: 6
2024-04-06 09:15:03,623:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1994, splitter='best')
2024-04-06 09:15:03,623:INFO:create_model() successfully completed......................................
2024-04-06 09:15:03,709:INFO:SubProcess create_model() end ==================================
2024-04-06 09:15:03,709:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1994, splitter='best') result for F1 is 0.5146
2024-04-06 09:15:03,709:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=8, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.0005, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1994, splitter='best') result for F1 is 0.4982
2024-04-06 09:15:03,709:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1994, splitter='best') is best model
2024-04-06 09:15:03,709:INFO:choose_better completed
2024-04-06 09:15:03,709:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-06 09:15:03,713:INFO:_master_model_container: 4
2024-04-06 09:15:03,713:INFO:_display_container: 5
2024-04-06 09:15:03,713:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1994, splitter='best')
2024-04-06 09:15:03,713:INFO:tune_model() successfully completed......................................
2024-04-06 09:15:03,801:INFO:Initializing predict_model()
2024-04-06 09:15:03,801:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177b70c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1994, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1778f8720>)
2024-04-06 09:15:03,801:INFO:Checking exceptions
2024-04-06 09:15:03,802:INFO:Preloading libraries
2024-04-06 09:15:03,945:INFO:Initializing finalize_model()
2024-04-06 09:15:03,946:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177b70c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1994, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-06 09:15:03,946:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1994, splitter='best')
2024-04-06 09:15:03,947:INFO:Initializing create_model()
2024-04-06 09:15:03,947:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177b70c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1994, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:15:03,947:INFO:Checking exceptions
2024-04-06 09:15:03,948:INFO:Importing libraries
2024-04-06 09:15:03,948:INFO:Copying training dataset
2024-04-06 09:15:03,948:INFO:Defining folds
2024-04-06 09:15:03,948:INFO:Declaring metric variables
2024-04-06 09:15:03,948:INFO:Importing untrained model
2024-04-06 09:15:03,948:INFO:Declaring custom model
2024-04-06 09:15:03,948:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:15:03,948:INFO:Cross validation set to False
2024-04-06 09:15:03,948:INFO:Fitting Model
2024-04-06 09:15:03,999:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=1994,
                                        splitter='best'))],
         verbose=False)
2024-04-06 09:15:03,999:INFO:create_model() successfully completed......................................
2024-04-06 09:15:04,086:INFO:_master_model_container: 4
2024-04-06 09:15:04,086:INFO:_display_container: 6
2024-04-06 09:15:04,088:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=1994,
                                        splitter='best'))],
         verbose=False)
2024-04-06 09:15:04,088:INFO:finalize_model() successfully completed......................................
2024-04-06 09:16:28,157:INFO:PyCaret ClassificationExperiment
2024-04-06 09:16:28,157:INFO:Logging name: clf-default-name
2024-04-06 09:16:28,157:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 09:16:28,157:INFO:version 3.3.0
2024-04-06 09:16:28,157:INFO:Initializing setup()
2024-04-06 09:16:28,157:INFO:self.USI: 7ebb
2024-04-06 09:16:28,157:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 09:16:28,157:INFO:Checking environment
2024-04-06 09:16:28,157:INFO:python_version: 3.11.3
2024-04-06 09:16:28,157:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 09:16:28,157:INFO:machine: arm64
2024-04-06 09:16:28,157:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 09:16:28,157:INFO:Memory: svmem(total=8589934592, available=1918451712, percent=77.7, used=3062841344, free=37076992, active=1894973440, inactive=1879080960, wired=1167867904)
2024-04-06 09:16:28,157:INFO:Physical Core: 8
2024-04-06 09:16:28,157:INFO:Logical Core: 8
2024-04-06 09:16:28,158:INFO:Checking libraries
2024-04-06 09:16:28,158:INFO:System:
2024-04-06 09:16:28,158:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 09:16:28,158:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 09:16:28,158:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 09:16:28,158:INFO:PyCaret required dependencies:
2024-04-06 09:16:28,158:INFO:                 pip: 24.0
2024-04-06 09:16:28,158:INFO:          setuptools: 65.5.0
2024-04-06 09:16:28,158:INFO:             pycaret: 3.3.0
2024-04-06 09:16:28,158:INFO:             IPython: 8.23.0
2024-04-06 09:16:28,158:INFO:          ipywidgets: 8.1.2
2024-04-06 09:16:28,158:INFO:                tqdm: 4.66.2
2024-04-06 09:16:28,158:INFO:               numpy: 1.26.4
2024-04-06 09:16:28,158:INFO:              pandas: 2.1.4
2024-04-06 09:16:28,158:INFO:              jinja2: 3.1.3
2024-04-06 09:16:28,158:INFO:               scipy: 1.11.4
2024-04-06 09:16:28,158:INFO:              joblib: 1.3.2
2024-04-06 09:16:28,158:INFO:             sklearn: 1.4.1.post1
2024-04-06 09:16:28,158:INFO:                pyod: 1.1.3
2024-04-06 09:16:28,158:INFO:            imblearn: 0.12.2
2024-04-06 09:16:28,158:INFO:   category_encoders: 2.6.3
2024-04-06 09:16:28,158:INFO:            lightgbm: 4.3.0
2024-04-06 09:16:28,158:INFO:               numba: 0.59.1
2024-04-06 09:16:28,158:INFO:            requests: 2.31.0
2024-04-06 09:16:28,158:INFO:          matplotlib: 3.7.5
2024-04-06 09:16:28,158:INFO:          scikitplot: 0.3.7
2024-04-06 09:16:28,158:INFO:         yellowbrick: 1.5
2024-04-06 09:16:28,158:INFO:              plotly: 5.20.0
2024-04-06 09:16:28,158:INFO:    plotly-resampler: Not installed
2024-04-06 09:16:28,158:INFO:             kaleido: 0.2.1
2024-04-06 09:16:28,158:INFO:           schemdraw: 0.15
2024-04-06 09:16:28,158:INFO:         statsmodels: 0.14.1
2024-04-06 09:16:28,158:INFO:              sktime: 0.28.0
2024-04-06 09:16:28,159:INFO:               tbats: 1.1.3
2024-04-06 09:16:28,159:INFO:            pmdarima: 2.0.4
2024-04-06 09:16:28,159:INFO:              psutil: 5.9.8
2024-04-06 09:16:28,159:INFO:          markupsafe: 2.1.5
2024-04-06 09:16:28,159:INFO:             pickle5: Not installed
2024-04-06 09:16:28,159:INFO:         cloudpickle: 3.0.0
2024-04-06 09:16:28,159:INFO:         deprecation: 2.1.0
2024-04-06 09:16:28,159:INFO:              xxhash: 3.4.1
2024-04-06 09:16:28,159:INFO:           wurlitzer: 3.0.3
2024-04-06 09:16:28,159:INFO:PyCaret optional dependencies:
2024-04-06 09:16:28,159:INFO:                shap: Not installed
2024-04-06 09:16:28,159:INFO:           interpret: Not installed
2024-04-06 09:16:28,159:INFO:                umap: Not installed
2024-04-06 09:16:28,159:INFO:     ydata_profiling: Not installed
2024-04-06 09:16:28,159:INFO:  explainerdashboard: Not installed
2024-04-06 09:16:28,159:INFO:             autoviz: Not installed
2024-04-06 09:16:28,159:INFO:           fairlearn: Not installed
2024-04-06 09:16:28,159:INFO:          deepchecks: Not installed
2024-04-06 09:16:28,159:INFO:             xgboost: Not installed
2024-04-06 09:16:28,159:INFO:            catboost: Not installed
2024-04-06 09:16:28,159:INFO:              kmodes: Not installed
2024-04-06 09:16:28,159:INFO:             mlxtend: Not installed
2024-04-06 09:16:28,159:INFO:       statsforecast: Not installed
2024-04-06 09:16:28,159:INFO:        tune_sklearn: Not installed
2024-04-06 09:16:28,159:INFO:                 ray: Not installed
2024-04-06 09:16:28,159:INFO:            hyperopt: Not installed
2024-04-06 09:16:28,159:INFO:              optuna: Not installed
2024-04-06 09:16:28,159:INFO:               skopt: Not installed
2024-04-06 09:16:28,159:INFO:              mlflow: 2.11.3
2024-04-06 09:16:28,159:INFO:              gradio: Not installed
2024-04-06 09:16:28,159:INFO:             fastapi: Not installed
2024-04-06 09:16:28,159:INFO:             uvicorn: Not installed
2024-04-06 09:16:28,159:INFO:              m2cgen: Not installed
2024-04-06 09:16:28,159:INFO:           evidently: Not installed
2024-04-06 09:16:28,159:INFO:               fugue: Not installed
2024-04-06 09:16:28,159:INFO:           streamlit: 1.33.0
2024-04-06 09:16:28,159:INFO:             prophet: 1.1.5
2024-04-06 09:16:28,159:INFO:None
2024-04-06 09:16:28,160:INFO:Set up data.
2024-04-06 09:16:28,166:INFO:Set up folding strategy.
2024-04-06 09:16:28,167:INFO:Set up train/test split.
2024-04-06 09:16:28,167:INFO:Set up data.
2024-04-06 09:16:28,169:INFO:Set up index.
2024-04-06 09:16:28,169:INFO:Assigning column types.
2024-04-06 09:16:28,172:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 09:16:28,192:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 09:16:28,192:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:16:28,204:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:28,204:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:28,222:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 09:16:28,223:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:16:28,234:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:28,234:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:28,234:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 09:16:28,253:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:16:28,265:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:28,265:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:28,283:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:16:28,295:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:28,295:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:28,295:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 09:16:28,327:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:28,327:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:28,357:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:28,357:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:28,357:INFO:Preparing preprocessing pipeline...
2024-04-06 09:16:28,358:INFO:Set up simple imputation.
2024-04-06 09:16:28,358:INFO:Set up feature normalization.
2024-04-06 09:16:28,371:INFO:Finished creating preprocessing pipeline.
2024-04-06 09:16:28,372:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 09:16:28,372:INFO:Creating final display dataframe.
2024-04-06 09:16:28,406:INFO:Setup _display_container:                     Description             Value
0                    Session id              4461
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              7ebb
2024-04-06 09:16:28,439:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:28,439:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:28,468:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:28,468:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:28,469:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 09:16:28,469:INFO:setup() successfully completed in 0.31s...............
2024-04-06 09:16:28,471:INFO:Initializing compare_models()
2024-04-06 09:16:28,471:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177e4c8d0>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x177e4c8d0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 09:16:28,471:INFO:Checking exceptions
2024-04-06 09:16:28,472:INFO:Preparing display monitor
2024-04-06 09:16:28,481:INFO:Initializing Logistic Regression
2024-04-06 09:16:28,482:INFO:Total runtime is 2.5987625122070313e-06 minutes
2024-04-06 09:16:28,483:INFO:SubProcess create_model() called ==================================
2024-04-06 09:16:28,483:INFO:Initializing create_model()
2024-04-06 09:16:28,483:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177e4c8d0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1777019d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:16:28,483:INFO:Checking exceptions
2024-04-06 09:16:28,483:INFO:Importing libraries
2024-04-06 09:16:28,483:INFO:Copying training dataset
2024-04-06 09:16:28,487:INFO:Defining folds
2024-04-06 09:16:28,487:INFO:Declaring metric variables
2024-04-06 09:16:28,489:INFO:Importing untrained model
2024-04-06 09:16:28,491:INFO:Logistic Regression Imported successfully
2024-04-06 09:16:28,493:INFO:Starting cross validation
2024-04-06 09:16:28,494:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:16:28,612:INFO:Calculating mean and std
2024-04-06 09:16:28,612:INFO:Creating metrics dataframe
2024-04-06 09:16:28,613:INFO:Uploading results into container
2024-04-06 09:16:28,613:INFO:Uploading model into container now
2024-04-06 09:16:28,613:INFO:_master_model_container: 1
2024-04-06 09:16:28,613:INFO:_display_container: 2
2024-04-06 09:16:28,613:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4461, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:16:28,613:INFO:create_model() successfully completed......................................
2024-04-06 09:16:28,781:INFO:SubProcess create_model() end ==================================
2024-04-06 09:16:28,781:INFO:Creating metrics dataframe
2024-04-06 09:16:28,783:INFO:Initializing Decision Tree Classifier
2024-04-06 09:16:28,783:INFO:Total runtime is 0.005030516783396403 minutes
2024-04-06 09:16:28,784:INFO:SubProcess create_model() called ==================================
2024-04-06 09:16:28,785:INFO:Initializing create_model()
2024-04-06 09:16:28,785:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177e4c8d0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1777019d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:16:28,785:INFO:Checking exceptions
2024-04-06 09:16:28,785:INFO:Importing libraries
2024-04-06 09:16:28,785:INFO:Copying training dataset
2024-04-06 09:16:28,787:INFO:Defining folds
2024-04-06 09:16:28,787:INFO:Declaring metric variables
2024-04-06 09:16:28,788:INFO:Importing untrained model
2024-04-06 09:16:28,789:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:16:28,792:INFO:Starting cross validation
2024-04-06 09:16:28,792:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:16:28,871:INFO:Calculating mean and std
2024-04-06 09:16:28,871:INFO:Creating metrics dataframe
2024-04-06 09:16:28,872:INFO:Uploading results into container
2024-04-06 09:16:28,872:INFO:Uploading model into container now
2024-04-06 09:16:28,872:INFO:_master_model_container: 2
2024-04-06 09:16:28,872:INFO:_display_container: 2
2024-04-06 09:16:28,872:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4461, splitter='best')
2024-04-06 09:16:28,872:INFO:create_model() successfully completed......................................
2024-04-06 09:16:28,963:INFO:SubProcess create_model() end ==================================
2024-04-06 09:16:28,963:INFO:Creating metrics dataframe
2024-04-06 09:16:28,966:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 09:16:28,969:INFO:Initializing create_model()
2024-04-06 09:16:28,969:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177e4c8d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4461, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:16:28,969:INFO:Checking exceptions
2024-04-06 09:16:28,970:INFO:Importing libraries
2024-04-06 09:16:28,970:INFO:Copying training dataset
2024-04-06 09:16:28,973:INFO:Defining folds
2024-04-06 09:16:28,973:INFO:Declaring metric variables
2024-04-06 09:16:28,973:INFO:Importing untrained model
2024-04-06 09:16:28,973:INFO:Declaring custom model
2024-04-06 09:16:28,973:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:16:28,973:INFO:Cross validation set to False
2024-04-06 09:16:28,973:INFO:Fitting Model
2024-04-06 09:16:28,987:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4461, splitter='best')
2024-04-06 09:16:28,987:INFO:create_model() successfully completed......................................
2024-04-06 09:16:29,078:INFO:Initializing create_model()
2024-04-06 09:16:29,078:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177e4c8d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4461, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:16:29,078:INFO:Checking exceptions
2024-04-06 09:16:29,079:INFO:Importing libraries
2024-04-06 09:16:29,079:INFO:Copying training dataset
2024-04-06 09:16:29,081:INFO:Defining folds
2024-04-06 09:16:29,081:INFO:Declaring metric variables
2024-04-06 09:16:29,081:INFO:Importing untrained model
2024-04-06 09:16:29,081:INFO:Declaring custom model
2024-04-06 09:16:29,081:INFO:Logistic Regression Imported successfully
2024-04-06 09:16:29,081:INFO:Cross validation set to False
2024-04-06 09:16:29,081:INFO:Fitting Model
2024-04-06 09:16:29,088:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4461, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:16:29,088:INFO:create_model() successfully completed......................................
2024-04-06 09:16:29,296:INFO:_master_model_container: 2
2024-04-06 09:16:29,296:INFO:_display_container: 2
2024-04-06 09:16:29,296:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4461, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4461, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-06 09:16:29,296:INFO:compare_models() successfully completed......................................
2024-04-06 09:16:29,297:INFO:Initializing predict_model()
2024-04-06 09:16:29,297:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177e4c8d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4461, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3080940e0>)
2024-04-06 09:16:29,297:INFO:Checking exceptions
2024-04-06 09:16:29,297:INFO:Preloading libraries
2024-04-06 09:16:29,990:INFO:Initializing predict_model()
2024-04-06 09:16:29,990:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177e4c8d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4461, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x175332fc0>)
2024-04-06 09:16:29,990:INFO:Checking exceptions
2024-04-06 09:16:29,990:INFO:Preloading libraries
2024-04-06 09:16:30,411:INFO:Initializing tune_model()
2024-04-06 09:16:30,411:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177e4c8d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4461, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-06 09:16:30,411:INFO:Checking exceptions
2024-04-06 09:16:30,440:INFO:Copying training dataset
2024-04-06 09:16:30,442:INFO:Checking base model
2024-04-06 09:16:30,442:INFO:Base model : Decision Tree Classifier
2024-04-06 09:16:30,445:INFO:Declaring metric variables
2024-04-06 09:16:30,449:INFO:Defining Hyperparameters
2024-04-06 09:16:30,557:INFO:Tuning with n_jobs=-1
2024-04-06 09:16:30,557:INFO:Initializing RandomizedSearchCV
2024-04-06 09:16:30,653:INFO:best_params: {'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.001, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 11, 'actual_estimator__criterion': 'gini'}
2024-04-06 09:16:30,653:INFO:Hyperparameter search completed
2024-04-06 09:16:30,653:INFO:SubProcess create_model() called ==================================
2024-04-06 09:16:30,654:INFO:Initializing create_model()
2024-04-06 09:16:30,654:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177e4c8d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4461, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x174a0ef50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 9, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.001, 'max_features': 1.0, 'max_depth': 11, 'criterion': 'gini'})
2024-04-06 09:16:30,654:INFO:Checking exceptions
2024-04-06 09:16:30,654:INFO:Importing libraries
2024-04-06 09:16:30,654:INFO:Copying training dataset
2024-04-06 09:16:30,656:INFO:Defining folds
2024-04-06 09:16:30,656:INFO:Declaring metric variables
2024-04-06 09:16:30,657:INFO:Importing untrained model
2024-04-06 09:16:30,657:INFO:Declaring custom model
2024-04-06 09:16:30,658:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:16:30,661:INFO:Starting cross validation
2024-04-06 09:16:30,661:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:16:30,717:INFO:Calculating mean and std
2024-04-06 09:16:30,717:INFO:Creating metrics dataframe
2024-04-06 09:16:30,719:INFO:Finalizing model
2024-04-06 09:16:30,726:INFO:Uploading results into container
2024-04-06 09:16:30,726:INFO:Uploading model into container now
2024-04-06 09:16:30,727:INFO:_master_model_container: 3
2024-04-06 09:16:30,727:INFO:_display_container: 5
2024-04-06 09:16:30,727:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=11, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=2,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4461, splitter='best')
2024-04-06 09:16:30,727:INFO:create_model() successfully completed......................................
2024-04-06 09:16:30,841:INFO:SubProcess create_model() end ==================================
2024-04-06 09:16:30,841:INFO:choose_better activated
2024-04-06 09:16:30,842:INFO:SubProcess create_model() called ==================================
2024-04-06 09:16:30,843:INFO:Initializing create_model()
2024-04-06 09:16:30,843:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177e4c8d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4461, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:16:30,843:INFO:Checking exceptions
2024-04-06 09:16:30,843:INFO:Importing libraries
2024-04-06 09:16:30,843:INFO:Copying training dataset
2024-04-06 09:16:30,846:INFO:Defining folds
2024-04-06 09:16:30,846:INFO:Declaring metric variables
2024-04-06 09:16:30,846:INFO:Importing untrained model
2024-04-06 09:16:30,846:INFO:Declaring custom model
2024-04-06 09:16:30,846:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:16:30,847:INFO:Starting cross validation
2024-04-06 09:16:30,847:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:16:30,907:INFO:Calculating mean and std
2024-04-06 09:16:30,908:INFO:Creating metrics dataframe
2024-04-06 09:16:30,908:INFO:Finalizing model
2024-04-06 09:16:30,926:INFO:Uploading results into container
2024-04-06 09:16:30,927:INFO:Uploading model into container now
2024-04-06 09:16:30,927:INFO:_master_model_container: 4
2024-04-06 09:16:30,927:INFO:_display_container: 6
2024-04-06 09:16:30,927:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4461, splitter='best')
2024-04-06 09:16:30,927:INFO:create_model() successfully completed......................................
2024-04-06 09:16:31,015:INFO:SubProcess create_model() end ==================================
2024-04-06 09:16:31,015:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4461, splitter='best') result for F1 is 0.5249
2024-04-06 09:16:31,015:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=11, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=2,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4461, splitter='best') result for F1 is 0.4597
2024-04-06 09:16:31,016:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4461, splitter='best') is best model
2024-04-06 09:16:31,016:INFO:choose_better completed
2024-04-06 09:16:31,016:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-06 09:16:31,019:INFO:_master_model_container: 4
2024-04-06 09:16:31,020:INFO:_display_container: 5
2024-04-06 09:16:31,020:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4461, splitter='best')
2024-04-06 09:16:31,020:INFO:tune_model() successfully completed......................................
2024-04-06 09:16:31,115:INFO:Initializing predict_model()
2024-04-06 09:16:31,115:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177e4c8d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4461, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x177e64ea0>)
2024-04-06 09:16:31,115:INFO:Checking exceptions
2024-04-06 09:16:31,115:INFO:Preloading libraries
2024-04-06 09:16:31,270:INFO:Initializing finalize_model()
2024-04-06 09:16:31,270:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177e4c8d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4461, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-06 09:16:31,271:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4461, splitter='best')
2024-04-06 09:16:31,272:INFO:Initializing create_model()
2024-04-06 09:16:31,272:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177e4c8d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4461, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:16:31,272:INFO:Checking exceptions
2024-04-06 09:16:31,273:INFO:Importing libraries
2024-04-06 09:16:31,273:INFO:Copying training dataset
2024-04-06 09:16:31,273:INFO:Defining folds
2024-04-06 09:16:31,273:INFO:Declaring metric variables
2024-04-06 09:16:31,273:INFO:Importing untrained model
2024-04-06 09:16:31,273:INFO:Declaring custom model
2024-04-06 09:16:31,273:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:16:31,273:INFO:Cross validation set to False
2024-04-06 09:16:31,273:INFO:Fitting Model
2024-04-06 09:16:31,325:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4461,
                                        splitter='best'))],
         verbose=False)
2024-04-06 09:16:31,325:INFO:create_model() successfully completed......................................
2024-04-06 09:16:31,413:INFO:_master_model_container: 4
2024-04-06 09:16:31,413:INFO:_display_container: 6
2024-04-06 09:16:31,415:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4461,
                                        splitter='best'))],
         verbose=False)
2024-04-06 09:16:31,415:INFO:finalize_model() successfully completed......................................
2024-04-06 09:16:53,277:INFO:PyCaret ClassificationExperiment
2024-04-06 09:16:53,277:INFO:Logging name: clf-default-name
2024-04-06 09:16:53,277:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 09:16:53,277:INFO:version 3.3.0
2024-04-06 09:16:53,277:INFO:Initializing setup()
2024-04-06 09:16:53,278:INFO:self.USI: cb22
2024-04-06 09:16:53,278:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 09:16:53,278:INFO:Checking environment
2024-04-06 09:16:53,278:INFO:python_version: 3.11.3
2024-04-06 09:16:53,278:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 09:16:53,278:INFO:machine: arm64
2024-04-06 09:16:53,278:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 09:16:53,278:INFO:Memory: svmem(total=8589934592, available=1929789440, percent=77.5, used=3065774080, free=42729472, active=1900855296, inactive=1885143040, wired=1164918784)
2024-04-06 09:16:53,278:INFO:Physical Core: 8
2024-04-06 09:16:53,278:INFO:Logical Core: 8
2024-04-06 09:16:53,278:INFO:Checking libraries
2024-04-06 09:16:53,278:INFO:System:
2024-04-06 09:16:53,278:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 09:16:53,278:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 09:16:53,278:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 09:16:53,278:INFO:PyCaret required dependencies:
2024-04-06 09:16:53,278:INFO:                 pip: 24.0
2024-04-06 09:16:53,278:INFO:          setuptools: 65.5.0
2024-04-06 09:16:53,278:INFO:             pycaret: 3.3.0
2024-04-06 09:16:53,278:INFO:             IPython: 8.23.0
2024-04-06 09:16:53,278:INFO:          ipywidgets: 8.1.2
2024-04-06 09:16:53,278:INFO:                tqdm: 4.66.2
2024-04-06 09:16:53,278:INFO:               numpy: 1.26.4
2024-04-06 09:16:53,278:INFO:              pandas: 2.1.4
2024-04-06 09:16:53,278:INFO:              jinja2: 3.1.3
2024-04-06 09:16:53,278:INFO:               scipy: 1.11.4
2024-04-06 09:16:53,278:INFO:              joblib: 1.3.2
2024-04-06 09:16:53,278:INFO:             sklearn: 1.4.1.post1
2024-04-06 09:16:53,278:INFO:                pyod: 1.1.3
2024-04-06 09:16:53,278:INFO:            imblearn: 0.12.2
2024-04-06 09:16:53,278:INFO:   category_encoders: 2.6.3
2024-04-06 09:16:53,278:INFO:            lightgbm: 4.3.0
2024-04-06 09:16:53,278:INFO:               numba: 0.59.1
2024-04-06 09:16:53,278:INFO:            requests: 2.31.0
2024-04-06 09:16:53,278:INFO:          matplotlib: 3.7.5
2024-04-06 09:16:53,278:INFO:          scikitplot: 0.3.7
2024-04-06 09:16:53,278:INFO:         yellowbrick: 1.5
2024-04-06 09:16:53,278:INFO:              plotly: 5.20.0
2024-04-06 09:16:53,278:INFO:    plotly-resampler: Not installed
2024-04-06 09:16:53,278:INFO:             kaleido: 0.2.1
2024-04-06 09:16:53,278:INFO:           schemdraw: 0.15
2024-04-06 09:16:53,278:INFO:         statsmodels: 0.14.1
2024-04-06 09:16:53,278:INFO:              sktime: 0.28.0
2024-04-06 09:16:53,278:INFO:               tbats: 1.1.3
2024-04-06 09:16:53,278:INFO:            pmdarima: 2.0.4
2024-04-06 09:16:53,278:INFO:              psutil: 5.9.8
2024-04-06 09:16:53,279:INFO:          markupsafe: 2.1.5
2024-04-06 09:16:53,279:INFO:             pickle5: Not installed
2024-04-06 09:16:53,279:INFO:         cloudpickle: 3.0.0
2024-04-06 09:16:53,279:INFO:         deprecation: 2.1.0
2024-04-06 09:16:53,279:INFO:              xxhash: 3.4.1
2024-04-06 09:16:53,279:INFO:           wurlitzer: 3.0.3
2024-04-06 09:16:53,279:INFO:PyCaret optional dependencies:
2024-04-06 09:16:53,279:INFO:                shap: Not installed
2024-04-06 09:16:53,279:INFO:           interpret: Not installed
2024-04-06 09:16:53,279:INFO:                umap: Not installed
2024-04-06 09:16:53,279:INFO:     ydata_profiling: Not installed
2024-04-06 09:16:53,279:INFO:  explainerdashboard: Not installed
2024-04-06 09:16:53,279:INFO:             autoviz: Not installed
2024-04-06 09:16:53,279:INFO:           fairlearn: Not installed
2024-04-06 09:16:53,279:INFO:          deepchecks: Not installed
2024-04-06 09:16:53,279:INFO:             xgboost: Not installed
2024-04-06 09:16:53,279:INFO:            catboost: Not installed
2024-04-06 09:16:53,279:INFO:              kmodes: Not installed
2024-04-06 09:16:53,279:INFO:             mlxtend: Not installed
2024-04-06 09:16:53,279:INFO:       statsforecast: Not installed
2024-04-06 09:16:53,279:INFO:        tune_sklearn: Not installed
2024-04-06 09:16:53,279:INFO:                 ray: Not installed
2024-04-06 09:16:53,279:INFO:            hyperopt: Not installed
2024-04-06 09:16:53,279:INFO:              optuna: Not installed
2024-04-06 09:16:53,279:INFO:               skopt: Not installed
2024-04-06 09:16:53,279:INFO:              mlflow: 2.11.3
2024-04-06 09:16:53,279:INFO:              gradio: Not installed
2024-04-06 09:16:53,279:INFO:             fastapi: Not installed
2024-04-06 09:16:53,279:INFO:             uvicorn: Not installed
2024-04-06 09:16:53,279:INFO:              m2cgen: Not installed
2024-04-06 09:16:53,279:INFO:           evidently: Not installed
2024-04-06 09:16:53,279:INFO:               fugue: Not installed
2024-04-06 09:16:53,279:INFO:           streamlit: 1.33.0
2024-04-06 09:16:53,279:INFO:             prophet: 1.1.5
2024-04-06 09:16:53,279:INFO:None
2024-04-06 09:16:53,279:INFO:Set up data.
2024-04-06 09:16:53,282:INFO:Set up folding strategy.
2024-04-06 09:16:53,282:INFO:Set up train/test split.
2024-04-06 09:16:53,282:INFO:Set up data.
2024-04-06 09:16:53,285:INFO:Set up index.
2024-04-06 09:16:53,285:INFO:Assigning column types.
2024-04-06 09:16:53,287:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 09:16:53,309:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 09:16:53,311:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:16:53,323:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:53,323:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:53,341:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 09:16:53,342:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:16:53,352:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:53,353:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:53,353:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 09:16:53,371:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:16:53,385:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:53,385:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:53,403:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:16:53,414:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:53,414:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:53,415:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 09:16:53,444:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:53,444:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:53,474:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:53,474:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:53,474:INFO:Preparing preprocessing pipeline...
2024-04-06 09:16:53,475:INFO:Set up simple imputation.
2024-04-06 09:16:53,475:INFO:Set up feature normalization.
2024-04-06 09:16:53,487:INFO:Finished creating preprocessing pipeline.
2024-04-06 09:16:53,489:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 09:16:53,489:INFO:Creating final display dataframe.
2024-04-06 09:16:53,521:INFO:Setup _display_container:                     Description             Value
0                    Session id              7507
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              cb22
2024-04-06 09:16:53,553:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:53,554:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:53,583:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:53,584:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:16:53,584:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 09:16:53,584:INFO:setup() successfully completed in 0.31s...............
2024-04-06 09:16:53,585:INFO:Initializing compare_models()
2024-04-06 09:16:53,585:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177dbecd0>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x177dbecd0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 09:16:53,585:INFO:Checking exceptions
2024-04-06 09:16:53,587:INFO:Preparing display monitor
2024-04-06 09:16:53,595:INFO:Initializing Logistic Regression
2024-04-06 09:16:53,596:INFO:Total runtime is 2.1696090698242187e-06 minutes
2024-04-06 09:16:53,597:INFO:SubProcess create_model() called ==================================
2024-04-06 09:16:53,598:INFO:Initializing create_model()
2024-04-06 09:16:53,598:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177dbecd0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30da17c90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:16:53,598:INFO:Checking exceptions
2024-04-06 09:16:53,598:INFO:Importing libraries
2024-04-06 09:16:53,598:INFO:Copying training dataset
2024-04-06 09:16:53,603:INFO:Defining folds
2024-04-06 09:16:53,603:INFO:Declaring metric variables
2024-04-06 09:16:53,604:INFO:Importing untrained model
2024-04-06 09:16:53,605:INFO:Logistic Regression Imported successfully
2024-04-06 09:16:53,608:INFO:Starting cross validation
2024-04-06 09:16:53,609:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:16:53,737:INFO:Calculating mean and std
2024-04-06 09:16:53,737:INFO:Creating metrics dataframe
2024-04-06 09:16:53,738:INFO:Uploading results into container
2024-04-06 09:16:53,738:INFO:Uploading model into container now
2024-04-06 09:16:53,739:INFO:_master_model_container: 1
2024-04-06 09:16:53,739:INFO:_display_container: 2
2024-04-06 09:16:53,739:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7507, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:16:53,739:INFO:create_model() successfully completed......................................
2024-04-06 09:16:53,908:INFO:SubProcess create_model() end ==================================
2024-04-06 09:16:53,908:INFO:Creating metrics dataframe
2024-04-06 09:16:53,910:INFO:Initializing Decision Tree Classifier
2024-04-06 09:16:53,910:INFO:Total runtime is 0.0052437067031860345 minutes
2024-04-06 09:16:53,911:INFO:SubProcess create_model() called ==================================
2024-04-06 09:16:53,911:INFO:Initializing create_model()
2024-04-06 09:16:53,911:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177dbecd0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30da17c90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:16:53,911:INFO:Checking exceptions
2024-04-06 09:16:53,912:INFO:Importing libraries
2024-04-06 09:16:53,912:INFO:Copying training dataset
2024-04-06 09:16:53,914:INFO:Defining folds
2024-04-06 09:16:53,914:INFO:Declaring metric variables
2024-04-06 09:16:53,915:INFO:Importing untrained model
2024-04-06 09:16:53,916:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:16:53,919:INFO:Starting cross validation
2024-04-06 09:16:53,919:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:16:53,996:INFO:Calculating mean and std
2024-04-06 09:16:53,996:INFO:Creating metrics dataframe
2024-04-06 09:16:53,997:INFO:Uploading results into container
2024-04-06 09:16:53,997:INFO:Uploading model into container now
2024-04-06 09:16:53,997:INFO:_master_model_container: 2
2024-04-06 09:16:53,997:INFO:_display_container: 2
2024-04-06 09:16:53,997:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7507, splitter='best')
2024-04-06 09:16:53,997:INFO:create_model() successfully completed......................................
2024-04-06 09:16:54,088:INFO:SubProcess create_model() end ==================================
2024-04-06 09:16:54,088:INFO:Creating metrics dataframe
2024-04-06 09:16:54,091:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 09:16:54,094:INFO:Initializing create_model()
2024-04-06 09:16:54,094:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177dbecd0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7507, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:16:54,094:INFO:Checking exceptions
2024-04-06 09:16:54,095:INFO:Importing libraries
2024-04-06 09:16:54,095:INFO:Copying training dataset
2024-04-06 09:16:54,097:INFO:Defining folds
2024-04-06 09:16:54,097:INFO:Declaring metric variables
2024-04-06 09:16:54,097:INFO:Importing untrained model
2024-04-06 09:16:54,097:INFO:Declaring custom model
2024-04-06 09:16:54,097:INFO:Logistic Regression Imported successfully
2024-04-06 09:16:54,098:INFO:Cross validation set to False
2024-04-06 09:16:54,098:INFO:Fitting Model
2024-04-06 09:16:54,104:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7507, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:16:54,104:INFO:create_model() successfully completed......................................
2024-04-06 09:16:54,250:INFO:Initializing create_model()
2024-04-06 09:16:54,250:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177dbecd0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7507, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:16:54,250:INFO:Checking exceptions
2024-04-06 09:16:54,253:INFO:Importing libraries
2024-04-06 09:16:54,254:INFO:Copying training dataset
2024-04-06 09:16:54,261:INFO:Defining folds
2024-04-06 09:16:54,261:INFO:Declaring metric variables
2024-04-06 09:16:54,261:INFO:Importing untrained model
2024-04-06 09:16:54,261:INFO:Declaring custom model
2024-04-06 09:16:54,261:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:16:54,262:INFO:Cross validation set to False
2024-04-06 09:16:54,262:INFO:Fitting Model
2024-04-06 09:16:54,285:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7507, splitter='best')
2024-04-06 09:16:54,285:INFO:create_model() successfully completed......................................
2024-04-06 09:16:54,400:INFO:_master_model_container: 2
2024-04-06 09:16:54,401:INFO:_display_container: 2
2024-04-06 09:16:54,401:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7507, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7507, splitter='best')]
2024-04-06 09:16:54,401:INFO:compare_models() successfully completed......................................
2024-04-06 09:16:54,401:INFO:Initializing predict_model()
2024-04-06 09:16:54,402:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177dbecd0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7507, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1778ec540>)
2024-04-06 09:16:54,402:INFO:Checking exceptions
2024-04-06 09:16:54,402:INFO:Preloading libraries
2024-04-06 09:16:55,061:INFO:Initializing predict_model()
2024-04-06 09:16:55,061:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177dbecd0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7507, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x175332660>)
2024-04-06 09:16:55,061:INFO:Checking exceptions
2024-04-06 09:16:55,061:INFO:Preloading libraries
2024-04-06 09:16:55,479:INFO:Initializing tune_model()
2024-04-06 09:16:55,479:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177dbecd0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7507, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-06 09:16:55,479:INFO:Checking exceptions
2024-04-06 09:16:55,524:INFO:Copying training dataset
2024-04-06 09:16:55,529:INFO:Checking base model
2024-04-06 09:16:55,529:INFO:Base model : Decision Tree Classifier
2024-04-06 09:16:55,531:INFO:Declaring metric variables
2024-04-06 09:16:55,532:INFO:Defining Hyperparameters
2024-04-06 09:16:55,639:INFO:Tuning with n_jobs=-1
2024-04-06 09:16:55,639:INFO:Initializing RandomizedSearchCV
2024-04-06 09:16:55,735:INFO:best_params: {'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0.0002, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'gini'}
2024-04-06 09:16:55,736:INFO:Hyperparameter search completed
2024-04-06 09:16:55,736:INFO:SubProcess create_model() called ==================================
2024-04-06 09:16:55,736:INFO:Initializing create_model()
2024-04-06 09:16:55,736:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177dbecd0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7507, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x177bfced0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 5, 'min_samples_leaf': 6, 'min_impurity_decrease': 0.0002, 'max_features': 1.0, 'max_depth': 10, 'criterion': 'gini'})
2024-04-06 09:16:55,736:INFO:Checking exceptions
2024-04-06 09:16:55,736:INFO:Importing libraries
2024-04-06 09:16:55,736:INFO:Copying training dataset
2024-04-06 09:16:55,738:INFO:Defining folds
2024-04-06 09:16:55,738:INFO:Declaring metric variables
2024-04-06 09:16:55,739:INFO:Importing untrained model
2024-04-06 09:16:55,739:INFO:Declaring custom model
2024-04-06 09:16:55,740:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:16:55,742:INFO:Starting cross validation
2024-04-06 09:16:55,743:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:16:55,800:INFO:Calculating mean and std
2024-04-06 09:16:55,800:INFO:Creating metrics dataframe
2024-04-06 09:16:55,802:INFO:Finalizing model
2024-04-06 09:16:55,813:INFO:Uploading results into container
2024-04-06 09:16:55,813:INFO:Uploading model into container now
2024-04-06 09:16:55,813:INFO:_master_model_container: 3
2024-04-06 09:16:55,813:INFO:_display_container: 5
2024-04-06 09:16:55,814:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=10, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.0002, min_samples_leaf=6,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7507, splitter='best')
2024-04-06 09:16:55,814:INFO:create_model() successfully completed......................................
2024-04-06 09:16:55,907:INFO:SubProcess create_model() end ==================================
2024-04-06 09:16:55,907:INFO:choose_better activated
2024-04-06 09:16:55,909:INFO:SubProcess create_model() called ==================================
2024-04-06 09:16:55,909:INFO:Initializing create_model()
2024-04-06 09:16:55,909:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177dbecd0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7507, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:16:55,909:INFO:Checking exceptions
2024-04-06 09:16:55,909:INFO:Importing libraries
2024-04-06 09:16:55,909:INFO:Copying training dataset
2024-04-06 09:16:55,913:INFO:Defining folds
2024-04-06 09:16:55,913:INFO:Declaring metric variables
2024-04-06 09:16:55,913:INFO:Importing untrained model
2024-04-06 09:16:55,913:INFO:Declaring custom model
2024-04-06 09:16:55,913:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:16:55,913:INFO:Starting cross validation
2024-04-06 09:16:55,913:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:16:55,980:INFO:Calculating mean and std
2024-04-06 09:16:55,980:INFO:Creating metrics dataframe
2024-04-06 09:16:55,980:INFO:Finalizing model
2024-04-06 09:16:55,994:INFO:Uploading results into container
2024-04-06 09:16:55,994:INFO:Uploading model into container now
2024-04-06 09:16:55,994:INFO:_master_model_container: 4
2024-04-06 09:16:55,994:INFO:_display_container: 6
2024-04-06 09:16:55,994:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7507, splitter='best')
2024-04-06 09:16:55,994:INFO:create_model() successfully completed......................................
2024-04-06 09:16:56,082:INFO:SubProcess create_model() end ==================================
2024-04-06 09:16:56,082:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7507, splitter='best') result for F1 is 0.5222
2024-04-06 09:16:56,082:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=10, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.0002, min_samples_leaf=6,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7507, splitter='best') result for F1 is 0.5138
2024-04-06 09:16:56,082:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7507, splitter='best') is best model
2024-04-06 09:16:56,082:INFO:choose_better completed
2024-04-06 09:16:56,082:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-06 09:16:56,086:INFO:_master_model_container: 4
2024-04-06 09:16:56,086:INFO:_display_container: 5
2024-04-06 09:16:56,086:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7507, splitter='best')
2024-04-06 09:16:56,086:INFO:tune_model() successfully completed......................................
2024-04-06 09:16:56,177:INFO:Initializing predict_model()
2024-04-06 09:16:56,177:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177dbecd0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7507, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x175292160>)
2024-04-06 09:16:56,178:INFO:Checking exceptions
2024-04-06 09:16:56,178:INFO:Preloading libraries
2024-04-06 09:16:56,336:INFO:Initializing finalize_model()
2024-04-06 09:16:56,336:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177dbecd0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7507, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-06 09:16:56,336:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7507, splitter='best')
2024-04-06 09:16:56,337:INFO:Initializing create_model()
2024-04-06 09:16:56,337:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177dbecd0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7507, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:16:56,337:INFO:Checking exceptions
2024-04-06 09:16:56,338:INFO:Importing libraries
2024-04-06 09:16:56,338:INFO:Copying training dataset
2024-04-06 09:16:56,338:INFO:Defining folds
2024-04-06 09:16:56,338:INFO:Declaring metric variables
2024-04-06 09:16:56,338:INFO:Importing untrained model
2024-04-06 09:16:56,338:INFO:Declaring custom model
2024-04-06 09:16:56,338:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:16:56,338:INFO:Cross validation set to False
2024-04-06 09:16:56,338:INFO:Fitting Model
2024-04-06 09:16:56,390:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=7507,
                                        splitter='best'))],
         verbose=False)
2024-04-06 09:16:56,391:INFO:create_model() successfully completed......................................
2024-04-06 09:16:56,479:INFO:_master_model_container: 4
2024-04-06 09:16:56,480:INFO:_display_container: 6
2024-04-06 09:16:56,481:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=7507,
                                        splitter='best'))],
         verbose=False)
2024-04-06 09:16:56,481:INFO:finalize_model() successfully completed......................................
2024-04-06 09:18:29,320:INFO:PyCaret ClassificationExperiment
2024-04-06 09:18:29,320:INFO:Logging name: clf-default-name
2024-04-06 09:18:29,320:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 09:18:29,320:INFO:version 3.3.0
2024-04-06 09:18:29,320:INFO:Initializing setup()
2024-04-06 09:18:29,320:INFO:self.USI: 4b6e
2024-04-06 09:18:29,320:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 09:18:29,320:INFO:Checking environment
2024-04-06 09:18:29,320:INFO:python_version: 3.11.3
2024-04-06 09:18:29,320:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 09:18:29,320:INFO:machine: arm64
2024-04-06 09:18:29,320:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 09:18:29,320:INFO:Memory: svmem(total=8589934592, available=1935179776, percent=77.5, used=3071918080, free=42926080, active=1905950720, inactive=1889075200, wired=1165967360)
2024-04-06 09:18:29,321:INFO:Physical Core: 8
2024-04-06 09:18:29,321:INFO:Logical Core: 8
2024-04-06 09:18:29,321:INFO:Checking libraries
2024-04-06 09:18:29,321:INFO:System:
2024-04-06 09:18:29,321:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 09:18:29,321:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 09:18:29,321:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 09:18:29,321:INFO:PyCaret required dependencies:
2024-04-06 09:18:29,321:INFO:                 pip: 24.0
2024-04-06 09:18:29,321:INFO:          setuptools: 65.5.0
2024-04-06 09:18:29,321:INFO:             pycaret: 3.3.0
2024-04-06 09:18:29,321:INFO:             IPython: 8.23.0
2024-04-06 09:18:29,321:INFO:          ipywidgets: 8.1.2
2024-04-06 09:18:29,321:INFO:                tqdm: 4.66.2
2024-04-06 09:18:29,321:INFO:               numpy: 1.26.4
2024-04-06 09:18:29,321:INFO:              pandas: 2.1.4
2024-04-06 09:18:29,321:INFO:              jinja2: 3.1.3
2024-04-06 09:18:29,321:INFO:               scipy: 1.11.4
2024-04-06 09:18:29,321:INFO:              joblib: 1.3.2
2024-04-06 09:18:29,321:INFO:             sklearn: 1.4.1.post1
2024-04-06 09:18:29,321:INFO:                pyod: 1.1.3
2024-04-06 09:18:29,321:INFO:            imblearn: 0.12.2
2024-04-06 09:18:29,321:INFO:   category_encoders: 2.6.3
2024-04-06 09:18:29,321:INFO:            lightgbm: 4.3.0
2024-04-06 09:18:29,321:INFO:               numba: 0.59.1
2024-04-06 09:18:29,321:INFO:            requests: 2.31.0
2024-04-06 09:18:29,321:INFO:          matplotlib: 3.7.5
2024-04-06 09:18:29,321:INFO:          scikitplot: 0.3.7
2024-04-06 09:18:29,321:INFO:         yellowbrick: 1.5
2024-04-06 09:18:29,321:INFO:              plotly: 5.20.0
2024-04-06 09:18:29,321:INFO:    plotly-resampler: Not installed
2024-04-06 09:18:29,321:INFO:             kaleido: 0.2.1
2024-04-06 09:18:29,321:INFO:           schemdraw: 0.15
2024-04-06 09:18:29,321:INFO:         statsmodels: 0.14.1
2024-04-06 09:18:29,321:INFO:              sktime: 0.28.0
2024-04-06 09:18:29,321:INFO:               tbats: 1.1.3
2024-04-06 09:18:29,321:INFO:            pmdarima: 2.0.4
2024-04-06 09:18:29,321:INFO:              psutil: 5.9.8
2024-04-06 09:18:29,321:INFO:          markupsafe: 2.1.5
2024-04-06 09:18:29,321:INFO:             pickle5: Not installed
2024-04-06 09:18:29,321:INFO:         cloudpickle: 3.0.0
2024-04-06 09:18:29,321:INFO:         deprecation: 2.1.0
2024-04-06 09:18:29,321:INFO:              xxhash: 3.4.1
2024-04-06 09:18:29,321:INFO:           wurlitzer: 3.0.3
2024-04-06 09:18:29,321:INFO:PyCaret optional dependencies:
2024-04-06 09:18:29,321:INFO:                shap: Not installed
2024-04-06 09:18:29,321:INFO:           interpret: Not installed
2024-04-06 09:18:29,321:INFO:                umap: Not installed
2024-04-06 09:18:29,321:INFO:     ydata_profiling: Not installed
2024-04-06 09:18:29,321:INFO:  explainerdashboard: Not installed
2024-04-06 09:18:29,321:INFO:             autoviz: Not installed
2024-04-06 09:18:29,321:INFO:           fairlearn: Not installed
2024-04-06 09:18:29,321:INFO:          deepchecks: Not installed
2024-04-06 09:18:29,321:INFO:             xgboost: Not installed
2024-04-06 09:18:29,321:INFO:            catboost: Not installed
2024-04-06 09:18:29,321:INFO:              kmodes: Not installed
2024-04-06 09:18:29,321:INFO:             mlxtend: Not installed
2024-04-06 09:18:29,321:INFO:       statsforecast: Not installed
2024-04-06 09:18:29,321:INFO:        tune_sklearn: Not installed
2024-04-06 09:18:29,321:INFO:                 ray: Not installed
2024-04-06 09:18:29,321:INFO:            hyperopt: Not installed
2024-04-06 09:18:29,321:INFO:              optuna: Not installed
2024-04-06 09:18:29,321:INFO:               skopt: Not installed
2024-04-06 09:18:29,321:INFO:              mlflow: 2.11.3
2024-04-06 09:18:29,321:INFO:              gradio: Not installed
2024-04-06 09:18:29,321:INFO:             fastapi: Not installed
2024-04-06 09:18:29,321:INFO:             uvicorn: Not installed
2024-04-06 09:18:29,321:INFO:              m2cgen: Not installed
2024-04-06 09:18:29,321:INFO:           evidently: Not installed
2024-04-06 09:18:29,321:INFO:               fugue: Not installed
2024-04-06 09:18:29,321:INFO:           streamlit: 1.33.0
2024-04-06 09:18:29,321:INFO:             prophet: 1.1.5
2024-04-06 09:18:29,321:INFO:None
2024-04-06 09:18:29,321:INFO:Set up data.
2024-04-06 09:18:29,325:INFO:Set up folding strategy.
2024-04-06 09:18:29,325:INFO:Set up train/test split.
2024-04-06 09:18:29,325:INFO:Set up data.
2024-04-06 09:18:29,329:INFO:Set up index.
2024-04-06 09:18:29,329:INFO:Assigning column types.
2024-04-06 09:18:29,331:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 09:18:29,351:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 09:18:29,352:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:18:29,364:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:29,364:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:29,383:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 09:18:29,384:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:18:29,395:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:29,395:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:29,395:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 09:18:29,415:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:18:29,426:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:29,426:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:29,444:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:18:29,454:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:29,454:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:29,455:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 09:18:29,483:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:29,483:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:29,512:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:29,512:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:29,513:INFO:Preparing preprocessing pipeline...
2024-04-06 09:18:29,514:INFO:Set up simple imputation.
2024-04-06 09:18:29,514:INFO:Set up feature normalization.
2024-04-06 09:18:29,525:INFO:Finished creating preprocessing pipeline.
2024-04-06 09:18:29,527:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 09:18:29,527:INFO:Creating final display dataframe.
2024-04-06 09:18:29,557:INFO:Setup _display_container:                     Description             Value
0                    Session id              4618
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              4b6e
2024-04-06 09:18:29,590:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:29,590:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:29,619:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:29,619:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:29,620:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 09:18:29,620:INFO:setup() successfully completed in 0.3s...............
2024-04-06 09:18:29,621:INFO:Initializing compare_models()
2024-04-06 09:18:29,621:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177a17ad0>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x177a17ad0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 09:18:29,621:INFO:Checking exceptions
2024-04-06 09:18:29,623:INFO:Preparing display monitor
2024-04-06 09:18:29,632:INFO:Initializing Logistic Regression
2024-04-06 09:18:29,632:INFO:Total runtime is 2.4517377217610677e-06 minutes
2024-04-06 09:18:29,633:INFO:SubProcess create_model() called ==================================
2024-04-06 09:18:29,633:INFO:Initializing create_model()
2024-04-06 09:18:29,633:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177a17ad0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30daeb790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:18:29,633:INFO:Checking exceptions
2024-04-06 09:18:29,633:INFO:Importing libraries
2024-04-06 09:18:29,633:INFO:Copying training dataset
2024-04-06 09:18:29,637:INFO:Defining folds
2024-04-06 09:18:29,637:INFO:Declaring metric variables
2024-04-06 09:18:29,639:INFO:Importing untrained model
2024-04-06 09:18:29,640:INFO:Logistic Regression Imported successfully
2024-04-06 09:18:29,642:INFO:Starting cross validation
2024-04-06 09:18:29,643:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:18:52,635:INFO:PyCaret ClassificationExperiment
2024-04-06 09:18:52,635:INFO:Logging name: clf-default-name
2024-04-06 09:18:52,635:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 09:18:52,635:INFO:version 3.3.0
2024-04-06 09:18:52,635:INFO:Initializing setup()
2024-04-06 09:18:52,635:INFO:self.USI: 3420
2024-04-06 09:18:52,635:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 09:18:52,636:INFO:Checking environment
2024-04-06 09:18:52,636:INFO:python_version: 3.11.3
2024-04-06 09:18:52,636:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 09:18:52,636:INFO:machine: arm64
2024-04-06 09:18:52,636:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 09:18:52,636:INFO:Memory: svmem(total=8589934592, available=2659500032, percent=69.0, used=3147005952, free=587350016, active=2039578624, inactive=2064891904, wired=1107427328)
2024-04-06 09:18:52,636:INFO:Physical Core: 8
2024-04-06 09:18:52,636:INFO:Logical Core: 8
2024-04-06 09:18:52,636:INFO:Checking libraries
2024-04-06 09:18:52,636:INFO:System:
2024-04-06 09:18:52,636:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 09:18:52,636:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 09:18:52,636:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 09:18:52,636:INFO:PyCaret required dependencies:
2024-04-06 09:18:52,636:INFO:                 pip: 24.0
2024-04-06 09:18:52,636:INFO:          setuptools: 65.5.0
2024-04-06 09:18:52,636:INFO:             pycaret: 3.3.0
2024-04-06 09:18:52,636:INFO:             IPython: 8.23.0
2024-04-06 09:18:52,636:INFO:          ipywidgets: 8.1.2
2024-04-06 09:18:52,636:INFO:                tqdm: 4.66.2
2024-04-06 09:18:52,636:INFO:               numpy: 1.26.4
2024-04-06 09:18:52,636:INFO:              pandas: 2.1.4
2024-04-06 09:18:52,636:INFO:              jinja2: 3.1.3
2024-04-06 09:18:52,636:INFO:               scipy: 1.11.4
2024-04-06 09:18:52,636:INFO:              joblib: 1.3.2
2024-04-06 09:18:52,636:INFO:             sklearn: 1.4.1.post1
2024-04-06 09:18:52,636:INFO:                pyod: 1.1.3
2024-04-06 09:18:52,636:INFO:            imblearn: 0.12.2
2024-04-06 09:18:52,636:INFO:   category_encoders: 2.6.3
2024-04-06 09:18:52,636:INFO:            lightgbm: 4.3.0
2024-04-06 09:18:52,636:INFO:               numba: 0.59.1
2024-04-06 09:18:52,636:INFO:            requests: 2.31.0
2024-04-06 09:18:52,636:INFO:          matplotlib: 3.7.5
2024-04-06 09:18:52,636:INFO:          scikitplot: 0.3.7
2024-04-06 09:18:52,636:INFO:         yellowbrick: 1.5
2024-04-06 09:18:52,636:INFO:              plotly: 5.20.0
2024-04-06 09:18:52,636:INFO:    plotly-resampler: Not installed
2024-04-06 09:18:52,636:INFO:             kaleido: 0.2.1
2024-04-06 09:18:52,636:INFO:           schemdraw: 0.15
2024-04-06 09:18:52,636:INFO:         statsmodels: 0.14.1
2024-04-06 09:18:52,636:INFO:              sktime: 0.28.0
2024-04-06 09:18:52,636:INFO:               tbats: 1.1.3
2024-04-06 09:18:52,636:INFO:            pmdarima: 2.0.4
2024-04-06 09:18:52,636:INFO:              psutil: 5.9.8
2024-04-06 09:18:52,636:INFO:          markupsafe: 2.1.5
2024-04-06 09:18:52,636:INFO:             pickle5: Not installed
2024-04-06 09:18:52,636:INFO:         cloudpickle: 3.0.0
2024-04-06 09:18:52,636:INFO:         deprecation: 2.1.0
2024-04-06 09:18:52,636:INFO:              xxhash: 3.4.1
2024-04-06 09:18:52,636:INFO:           wurlitzer: 3.0.3
2024-04-06 09:18:52,636:INFO:PyCaret optional dependencies:
2024-04-06 09:18:52,636:INFO:                shap: Not installed
2024-04-06 09:18:52,636:INFO:           interpret: Not installed
2024-04-06 09:18:52,636:INFO:                umap: Not installed
2024-04-06 09:18:52,636:INFO:     ydata_profiling: Not installed
2024-04-06 09:18:52,636:INFO:  explainerdashboard: Not installed
2024-04-06 09:18:52,636:INFO:             autoviz: Not installed
2024-04-06 09:18:52,636:INFO:           fairlearn: Not installed
2024-04-06 09:18:52,636:INFO:          deepchecks: Not installed
2024-04-06 09:18:52,636:INFO:             xgboost: Not installed
2024-04-06 09:18:52,636:INFO:            catboost: Not installed
2024-04-06 09:18:52,636:INFO:              kmodes: Not installed
2024-04-06 09:18:52,636:INFO:             mlxtend: Not installed
2024-04-06 09:18:52,636:INFO:       statsforecast: Not installed
2024-04-06 09:18:52,636:INFO:        tune_sklearn: Not installed
2024-04-06 09:18:52,636:INFO:                 ray: Not installed
2024-04-06 09:18:52,636:INFO:            hyperopt: Not installed
2024-04-06 09:18:52,636:INFO:              optuna: Not installed
2024-04-06 09:18:52,636:INFO:               skopt: Not installed
2024-04-06 09:18:52,636:INFO:              mlflow: 2.11.3
2024-04-06 09:18:52,636:INFO:              gradio: Not installed
2024-04-06 09:18:52,636:INFO:             fastapi: Not installed
2024-04-06 09:18:52,636:INFO:             uvicorn: Not installed
2024-04-06 09:18:52,637:INFO:              m2cgen: Not installed
2024-04-06 09:18:52,637:INFO:           evidently: Not installed
2024-04-06 09:18:52,637:INFO:               fugue: Not installed
2024-04-06 09:18:52,637:INFO:           streamlit: 1.33.0
2024-04-06 09:18:52,637:INFO:             prophet: 1.1.5
2024-04-06 09:18:52,637:INFO:None
2024-04-06 09:18:52,637:INFO:Set up data.
2024-04-06 09:18:52,638:INFO:Set up folding strategy.
2024-04-06 09:18:52,639:INFO:Set up train/test split.
2024-04-06 09:18:52,639:INFO:Set up data.
2024-04-06 09:18:52,642:INFO:Set up index.
2024-04-06 09:18:52,642:INFO:Assigning column types.
2024-04-06 09:18:52,645:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 09:18:52,665:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 09:18:52,665:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:18:52,677:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:52,677:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:52,696:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 09:18:52,697:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:18:52,708:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:52,709:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:52,709:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 09:18:52,727:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:18:52,738:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:52,738:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:52,755:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:18:52,767:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:52,767:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:52,767:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 09:18:52,796:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:52,796:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:52,824:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:52,825:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:52,825:INFO:Preparing preprocessing pipeline...
2024-04-06 09:18:52,826:INFO:Set up simple imputation.
2024-04-06 09:18:52,826:INFO:Set up feature normalization.
2024-04-06 09:18:52,834:INFO:Finished creating preprocessing pipeline.
2024-04-06 09:18:52,835:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 09:18:52,835:INFO:Creating final display dataframe.
2024-04-06 09:18:52,867:INFO:Setup _display_container:                     Description             Value
0                    Session id              2549
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              3420
2024-04-06 09:18:52,900:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:52,900:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:52,931:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:52,931:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:18:52,931:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 09:18:52,932:INFO:setup() successfully completed in 0.3s...............
2024-04-06 09:18:52,932:INFO:Initializing compare_models()
2024-04-06 09:18:52,932:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cd622d0>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x30cd622d0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 09:18:52,932:INFO:Checking exceptions
2024-04-06 09:18:52,934:INFO:Preparing display monitor
2024-04-06 09:18:52,943:INFO:Initializing Logistic Regression
2024-04-06 09:18:52,943:INFO:Total runtime is 3.997484842936198e-06 minutes
2024-04-06 09:18:52,944:INFO:SubProcess create_model() called ==================================
2024-04-06 09:18:52,944:INFO:Initializing create_model()
2024-04-06 09:18:52,944:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cd622d0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30a7a1f90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:18:52,944:INFO:Checking exceptions
2024-04-06 09:18:52,944:INFO:Importing libraries
2024-04-06 09:18:52,944:INFO:Copying training dataset
2024-04-06 09:18:52,948:INFO:Defining folds
2024-04-06 09:18:52,948:INFO:Declaring metric variables
2024-04-06 09:18:52,950:INFO:Importing untrained model
2024-04-06 09:18:52,951:INFO:Logistic Regression Imported successfully
2024-04-06 09:18:52,955:INFO:Starting cross validation
2024-04-06 09:18:52,955:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:18:55,031:INFO:Calculating mean and std
2024-04-06 09:18:55,036:INFO:Creating metrics dataframe
2024-04-06 09:18:55,052:INFO:Uploading results into container
2024-04-06 09:18:55,052:INFO:Uploading model into container now
2024-04-06 09:18:55,054:INFO:_master_model_container: 1
2024-04-06 09:18:55,054:INFO:_display_container: 2
2024-04-06 09:18:55,055:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2549, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:18:55,056:INFO:create_model() successfully completed......................................
2024-04-06 09:18:55,233:INFO:SubProcess create_model() end ==================================
2024-04-06 09:18:55,233:INFO:Creating metrics dataframe
2024-04-06 09:18:55,236:INFO:Initializing Decision Tree Classifier
2024-04-06 09:18:55,236:INFO:Total runtime is 0.03822122017542521 minutes
2024-04-06 09:18:55,237:INFO:SubProcess create_model() called ==================================
2024-04-06 09:18:55,237:INFO:Initializing create_model()
2024-04-06 09:18:55,237:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cd622d0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30a7a1f90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:18:55,237:INFO:Checking exceptions
2024-04-06 09:18:55,237:INFO:Importing libraries
2024-04-06 09:18:55,237:INFO:Copying training dataset
2024-04-06 09:18:55,240:INFO:Defining folds
2024-04-06 09:18:55,240:INFO:Declaring metric variables
2024-04-06 09:18:55,241:INFO:Importing untrained model
2024-04-06 09:18:55,243:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:18:55,246:INFO:Starting cross validation
2024-04-06 09:18:55,246:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:18:55,322:INFO:Calculating mean and std
2024-04-06 09:18:55,322:INFO:Creating metrics dataframe
2024-04-06 09:18:55,323:INFO:Uploading results into container
2024-04-06 09:18:55,323:INFO:Uploading model into container now
2024-04-06 09:18:55,323:INFO:_master_model_container: 2
2024-04-06 09:18:55,323:INFO:_display_container: 2
2024-04-06 09:18:55,323:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2549, splitter='best')
2024-04-06 09:18:55,323:INFO:create_model() successfully completed......................................
2024-04-06 09:18:55,420:INFO:SubProcess create_model() end ==================================
2024-04-06 09:18:55,420:INFO:Creating metrics dataframe
2024-04-06 09:18:55,423:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 09:18:55,426:INFO:Initializing create_model()
2024-04-06 09:18:55,426:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cd622d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2549, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:18:55,426:INFO:Checking exceptions
2024-04-06 09:18:55,427:INFO:Importing libraries
2024-04-06 09:18:55,427:INFO:Copying training dataset
2024-04-06 09:18:55,430:INFO:Defining folds
2024-04-06 09:18:55,430:INFO:Declaring metric variables
2024-04-06 09:18:55,430:INFO:Importing untrained model
2024-04-06 09:18:55,430:INFO:Declaring custom model
2024-04-06 09:18:55,430:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:18:55,431:INFO:Cross validation set to False
2024-04-06 09:18:55,431:INFO:Fitting Model
2024-04-06 09:18:55,444:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2549, splitter='best')
2024-04-06 09:18:55,444:INFO:create_model() successfully completed......................................
2024-04-06 09:18:55,540:INFO:Initializing create_model()
2024-04-06 09:18:55,540:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cd622d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2549, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:18:55,540:INFO:Checking exceptions
2024-04-06 09:18:55,541:INFO:Importing libraries
2024-04-06 09:18:55,541:INFO:Copying training dataset
2024-04-06 09:18:55,543:INFO:Defining folds
2024-04-06 09:18:55,544:INFO:Declaring metric variables
2024-04-06 09:18:55,544:INFO:Importing untrained model
2024-04-06 09:18:55,544:INFO:Declaring custom model
2024-04-06 09:18:55,544:INFO:Logistic Regression Imported successfully
2024-04-06 09:18:55,544:INFO:Cross validation set to False
2024-04-06 09:18:55,544:INFO:Fitting Model
2024-04-06 09:18:55,551:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2549, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:18:55,551:INFO:create_model() successfully completed......................................
2024-04-06 09:18:55,737:INFO:_master_model_container: 2
2024-04-06 09:18:55,738:INFO:_display_container: 2
2024-04-06 09:18:55,738:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2549, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2549, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-06 09:18:55,738:INFO:compare_models() successfully completed......................................
2024-04-06 09:18:55,740:INFO:Initializing predict_model()
2024-04-06 09:18:55,741:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cd622d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2549, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x173f5bc40>)
2024-04-06 09:18:55,741:INFO:Checking exceptions
2024-04-06 09:18:55,741:INFO:Preloading libraries
2024-04-06 09:18:56,409:INFO:Initializing predict_model()
2024-04-06 09:18:56,409:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cd622d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2549, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1756bfa60>)
2024-04-06 09:18:56,409:INFO:Checking exceptions
2024-04-06 09:18:56,409:INFO:Preloading libraries
2024-04-06 09:18:56,857:INFO:Initializing tune_model()
2024-04-06 09:18:56,857:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cd622d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2549, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-06 09:18:56,857:INFO:Checking exceptions
2024-04-06 09:18:56,864:INFO:Copying training dataset
2024-04-06 09:18:56,869:INFO:Checking base model
2024-04-06 09:18:56,869:INFO:Base model : Logistic Regression
2024-04-06 09:18:56,871:INFO:Declaring metric variables
2024-04-06 09:18:56,872:INFO:Defining Hyperparameters
2024-04-06 09:18:56,977:INFO:Tuning with n_jobs=-1
2024-04-06 09:18:56,977:INFO:Initializing RandomizedSearchCV
2024-04-06 09:18:57,091:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 6.355}
2024-04-06 09:18:57,091:INFO:Hyperparameter search completed
2024-04-06 09:18:57,091:INFO:SubProcess create_model() called ==================================
2024-04-06 09:18:57,091:INFO:Initializing create_model()
2024-04-06 09:18:57,091:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cd622d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2549, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30dfea110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'class_weight': 'balanced', 'C': 6.355})
2024-04-06 09:18:57,091:INFO:Checking exceptions
2024-04-06 09:18:57,091:INFO:Importing libraries
2024-04-06 09:18:57,091:INFO:Copying training dataset
2024-04-06 09:18:57,093:INFO:Defining folds
2024-04-06 09:18:57,093:INFO:Declaring metric variables
2024-04-06 09:18:57,094:INFO:Importing untrained model
2024-04-06 09:18:57,094:INFO:Declaring custom model
2024-04-06 09:18:57,096:INFO:Logistic Regression Imported successfully
2024-04-06 09:18:57,098:INFO:Starting cross validation
2024-04-06 09:18:57,098:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:18:57,186:INFO:Calculating mean and std
2024-04-06 09:18:57,186:INFO:Creating metrics dataframe
2024-04-06 09:18:57,189:INFO:Finalizing model
2024-04-06 09:18:57,210:INFO:Uploading results into container
2024-04-06 09:18:57,211:INFO:Uploading model into container now
2024-04-06 09:18:57,212:INFO:_master_model_container: 3
2024-04-06 09:18:57,212:INFO:_display_container: 5
2024-04-06 09:18:57,213:INFO:LogisticRegression(C=6.355, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2549, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:18:57,213:INFO:create_model() successfully completed......................................
2024-04-06 09:18:57,367:INFO:SubProcess create_model() end ==================================
2024-04-06 09:18:57,367:INFO:choose_better activated
2024-04-06 09:18:57,369:INFO:SubProcess create_model() called ==================================
2024-04-06 09:18:57,370:INFO:Initializing create_model()
2024-04-06 09:18:57,370:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cd622d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2549, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:18:57,370:INFO:Checking exceptions
2024-04-06 09:18:57,372:INFO:Importing libraries
2024-04-06 09:18:57,372:INFO:Copying training dataset
2024-04-06 09:18:57,378:INFO:Defining folds
2024-04-06 09:18:57,379:INFO:Declaring metric variables
2024-04-06 09:18:57,379:INFO:Importing untrained model
2024-04-06 09:18:57,379:INFO:Declaring custom model
2024-04-06 09:18:57,379:INFO:Logistic Regression Imported successfully
2024-04-06 09:18:57,380:INFO:Starting cross validation
2024-04-06 09:18:57,380:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:18:57,460:INFO:Calculating mean and std
2024-04-06 09:18:57,461:INFO:Creating metrics dataframe
2024-04-06 09:18:57,462:INFO:Finalizing model
2024-04-06 09:18:57,472:INFO:Uploading results into container
2024-04-06 09:18:57,473:INFO:Uploading model into container now
2024-04-06 09:18:57,473:INFO:_master_model_container: 4
2024-04-06 09:18:57,474:INFO:_display_container: 6
2024-04-06 09:18:57,474:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2549, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:18:57,474:INFO:create_model() successfully completed......................................
2024-04-06 09:18:57,631:INFO:SubProcess create_model() end ==================================
2024-04-06 09:18:57,632:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2549, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 0.4917
2024-04-06 09:18:57,632:INFO:LogisticRegression(C=6.355, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2549, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 0.528
2024-04-06 09:18:57,632:INFO:LogisticRegression(C=6.355, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2549, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2024-04-06 09:18:57,632:INFO:choose_better completed
2024-04-06 09:18:57,658:INFO:_master_model_container: 4
2024-04-06 09:18:57,658:INFO:_display_container: 5
2024-04-06 09:18:57,658:INFO:LogisticRegression(C=6.355, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2549, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:18:57,658:INFO:tune_model() successfully completed......................................
2024-04-06 09:18:57,799:INFO:Initializing predict_model()
2024-04-06 09:18:57,799:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cd622d0>, estimator=LogisticRegression(C=6.355, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2549, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x107f30720>)
2024-04-06 09:18:57,799:INFO:Checking exceptions
2024-04-06 09:18:57,799:INFO:Preloading libraries
2024-04-06 09:18:58,113:INFO:Initializing finalize_model()
2024-04-06 09:18:58,113:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cd622d0>, estimator=LogisticRegression(C=6.355, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2549, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-06 09:18:58,113:INFO:Finalizing LogisticRegression(C=6.355, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2549, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:18:58,115:INFO:Initializing create_model()
2024-04-06 09:18:58,115:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cd622d0>, estimator=LogisticRegression(C=6.355, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2549, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:18:58,115:INFO:Checking exceptions
2024-04-06 09:18:58,115:INFO:Importing libraries
2024-04-06 09:18:58,115:INFO:Copying training dataset
2024-04-06 09:18:58,115:INFO:Defining folds
2024-04-06 09:18:58,115:INFO:Declaring metric variables
2024-04-06 09:18:58,116:INFO:Importing untrained model
2024-04-06 09:18:58,116:INFO:Declaring custom model
2024-04-06 09:18:58,116:INFO:Logistic Regression Imported successfully
2024-04-06 09:18:58,116:INFO:Cross validation set to False
2024-04-06 09:18:58,116:INFO:Fitting Model
2024-04-06 09:18:58,153:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=6.355, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2',
                                    random_state=2549, solver='lbfgs',
                                    tol=0.0001, verbose=0, warm_start=False))],
         verbose=False)
2024-04-06 09:18:58,153:INFO:create_model() successfully completed......................................
2024-04-06 09:18:58,327:INFO:_master_model_container: 4
2024-04-06 09:18:58,327:INFO:_display_container: 6
2024-04-06 09:18:58,329:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=6.355, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2',
                                    random_state=2549, solver='lbfgs',
                                    tol=0.0001, verbose=0, warm_start=False))],
         verbose=False)
2024-04-06 09:18:58,329:INFO:finalize_model() successfully completed......................................
2024-04-06 09:18:58,459:INFO:Initializing save_model()
2024-04-06 09:18:58,459:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=6.355, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2',
                                    random_state=2549, solver='lbfgs',
                                    tol=0.0001, verbose=0, warm_start=False))],
         verbose=False), model_name=./kobe, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-06 09:18:58,459:INFO:Adding model into prep_pipe
2024-04-06 09:18:58,459:WARNING:Only Model saved as it was a pipeline.
2024-04-06 09:18:58,460:INFO:./kobe.pkl saved in current working directory
2024-04-06 09:18:58,462:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=6.355, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2',
                                    random_state=2549, solver='lbfgs',
                                    tol=0.0001, verbose=0, warm_start=False))],
         verbose=False)
2024-04-06 09:18:58,462:INFO:save_model() successfully completed......................................
2024-04-06 09:18:58,556:INFO:Initializing load_model()
2024-04-06 09:18:58,556:INFO:load_model(model_name=./kobe, platform=None, authentication=None, verbose=True)
2024-04-06 09:20:36,985:INFO:PyCaret ClassificationExperiment
2024-04-06 09:20:36,985:INFO:Logging name: clf-default-name
2024-04-06 09:20:36,986:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 09:20:36,986:INFO:version 3.3.0
2024-04-06 09:20:36,986:INFO:Initializing setup()
2024-04-06 09:20:36,986:INFO:self.USI: a3e4
2024-04-06 09:20:36,986:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 09:20:36,986:INFO:Checking environment
2024-04-06 09:20:36,986:INFO:python_version: 3.11.3
2024-04-06 09:20:36,986:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 09:20:36,986:INFO:machine: arm64
2024-04-06 09:20:36,986:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 09:20:36,986:INFO:Memory: svmem(total=8589934592, available=1986854912, percent=76.9, used=3076718592, free=31145984, active=1962639360, inactive=1952923648, wired=1114079232)
2024-04-06 09:20:36,986:INFO:Physical Core: 8
2024-04-06 09:20:36,986:INFO:Logical Core: 8
2024-04-06 09:20:36,986:INFO:Checking libraries
2024-04-06 09:20:36,986:INFO:System:
2024-04-06 09:20:36,986:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 09:20:36,986:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 09:20:36,986:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 09:20:36,986:INFO:PyCaret required dependencies:
2024-04-06 09:20:36,986:INFO:                 pip: 24.0
2024-04-06 09:20:36,986:INFO:          setuptools: 65.5.0
2024-04-06 09:20:36,986:INFO:             pycaret: 3.3.0
2024-04-06 09:20:36,986:INFO:             IPython: 8.23.0
2024-04-06 09:20:36,986:INFO:          ipywidgets: 8.1.2
2024-04-06 09:20:36,986:INFO:                tqdm: 4.66.2
2024-04-06 09:20:36,986:INFO:               numpy: 1.26.4
2024-04-06 09:20:36,986:INFO:              pandas: 2.1.4
2024-04-06 09:20:36,986:INFO:              jinja2: 3.1.3
2024-04-06 09:20:36,986:INFO:               scipy: 1.11.4
2024-04-06 09:20:36,986:INFO:              joblib: 1.3.2
2024-04-06 09:20:36,986:INFO:             sklearn: 1.4.1.post1
2024-04-06 09:20:36,986:INFO:                pyod: 1.1.3
2024-04-06 09:20:36,986:INFO:            imblearn: 0.12.2
2024-04-06 09:20:36,986:INFO:   category_encoders: 2.6.3
2024-04-06 09:20:36,986:INFO:            lightgbm: 4.3.0
2024-04-06 09:20:36,986:INFO:               numba: 0.59.1
2024-04-06 09:20:36,986:INFO:            requests: 2.31.0
2024-04-06 09:20:36,986:INFO:          matplotlib: 3.7.5
2024-04-06 09:20:36,986:INFO:          scikitplot: 0.3.7
2024-04-06 09:20:36,986:INFO:         yellowbrick: 1.5
2024-04-06 09:20:36,986:INFO:              plotly: 5.20.0
2024-04-06 09:20:36,986:INFO:    plotly-resampler: Not installed
2024-04-06 09:20:36,986:INFO:             kaleido: 0.2.1
2024-04-06 09:20:36,986:INFO:           schemdraw: 0.15
2024-04-06 09:20:36,986:INFO:         statsmodels: 0.14.1
2024-04-06 09:20:36,986:INFO:              sktime: 0.28.0
2024-04-06 09:20:36,986:INFO:               tbats: 1.1.3
2024-04-06 09:20:36,986:INFO:            pmdarima: 2.0.4
2024-04-06 09:20:36,986:INFO:              psutil: 5.9.8
2024-04-06 09:20:36,986:INFO:          markupsafe: 2.1.5
2024-04-06 09:20:36,986:INFO:             pickle5: Not installed
2024-04-06 09:20:36,986:INFO:         cloudpickle: 3.0.0
2024-04-06 09:20:36,986:INFO:         deprecation: 2.1.0
2024-04-06 09:20:36,986:INFO:              xxhash: 3.4.1
2024-04-06 09:20:36,986:INFO:           wurlitzer: 3.0.3
2024-04-06 09:20:36,987:INFO:PyCaret optional dependencies:
2024-04-06 09:20:36,987:INFO:                shap: Not installed
2024-04-06 09:20:36,987:INFO:           interpret: Not installed
2024-04-06 09:20:36,987:INFO:                umap: Not installed
2024-04-06 09:20:36,987:INFO:     ydata_profiling: Not installed
2024-04-06 09:20:36,987:INFO:  explainerdashboard: Not installed
2024-04-06 09:20:36,987:INFO:             autoviz: Not installed
2024-04-06 09:20:36,987:INFO:           fairlearn: Not installed
2024-04-06 09:20:36,987:INFO:          deepchecks: Not installed
2024-04-06 09:20:36,987:INFO:             xgboost: Not installed
2024-04-06 09:20:36,987:INFO:            catboost: Not installed
2024-04-06 09:20:36,987:INFO:              kmodes: Not installed
2024-04-06 09:20:36,987:INFO:             mlxtend: Not installed
2024-04-06 09:20:36,987:INFO:       statsforecast: Not installed
2024-04-06 09:20:36,987:INFO:        tune_sklearn: Not installed
2024-04-06 09:20:36,987:INFO:                 ray: Not installed
2024-04-06 09:20:36,987:INFO:            hyperopt: Not installed
2024-04-06 09:20:36,987:INFO:              optuna: Not installed
2024-04-06 09:20:36,987:INFO:               skopt: Not installed
2024-04-06 09:20:36,987:INFO:              mlflow: 2.11.3
2024-04-06 09:20:36,987:INFO:              gradio: Not installed
2024-04-06 09:20:36,987:INFO:             fastapi: Not installed
2024-04-06 09:20:36,987:INFO:             uvicorn: Not installed
2024-04-06 09:20:36,987:INFO:              m2cgen: Not installed
2024-04-06 09:20:36,987:INFO:           evidently: Not installed
2024-04-06 09:20:36,987:INFO:               fugue: Not installed
2024-04-06 09:20:36,987:INFO:           streamlit: 1.33.0
2024-04-06 09:20:36,987:INFO:             prophet: 1.1.5
2024-04-06 09:20:36,987:INFO:None
2024-04-06 09:20:36,987:INFO:Set up data.
2024-04-06 09:20:36,990:INFO:Set up folding strategy.
2024-04-06 09:20:36,990:INFO:Set up train/test split.
2024-04-06 09:20:36,990:INFO:Set up data.
2024-04-06 09:20:36,993:INFO:Set up index.
2024-04-06 09:20:36,993:INFO:Assigning column types.
2024-04-06 09:20:36,996:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 09:20:37,015:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 09:20:37,016:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:20:37,027:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:20:37,027:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:20:37,046:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 09:20:37,046:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:20:37,057:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:20:37,057:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:20:37,057:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 09:20:37,075:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:20:37,087:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:20:37,087:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:20:37,104:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:20:37,115:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:20:37,115:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:20:37,116:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 09:20:37,144:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:20:37,145:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:20:37,173:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:20:37,174:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:20:37,174:INFO:Preparing preprocessing pipeline...
2024-04-06 09:20:37,175:INFO:Set up simple imputation.
2024-04-06 09:20:37,175:INFO:Set up feature normalization.
2024-04-06 09:20:37,186:INFO:Finished creating preprocessing pipeline.
2024-04-06 09:20:37,187:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 09:20:37,187:INFO:Creating final display dataframe.
2024-04-06 09:20:37,223:INFO:Setup _display_container:                     Description             Value
0                    Session id              1449
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              a3e4
2024-04-06 09:20:37,257:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:20:37,257:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:20:37,287:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:20:37,288:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:20:37,288:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 09:20:37,289:INFO:setup() successfully completed in 0.31s...............
2024-04-06 09:20:37,289:INFO:Initializing compare_models()
2024-04-06 09:20:37,289:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177b8c990>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x177b8c990>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 09:20:37,289:INFO:Checking exceptions
2024-04-06 09:20:37,291:INFO:Preparing display monitor
2024-04-06 09:20:37,299:INFO:Initializing Logistic Regression
2024-04-06 09:20:37,300:INFO:Total runtime is 4.351139068603516e-06 minutes
2024-04-06 09:20:37,301:INFO:SubProcess create_model() called ==================================
2024-04-06 09:20:37,301:INFO:Initializing create_model()
2024-04-06 09:20:37,301:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177b8c990>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13fe4e3d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:20:37,301:INFO:Checking exceptions
2024-04-06 09:20:37,301:INFO:Importing libraries
2024-04-06 09:20:37,301:INFO:Copying training dataset
2024-04-06 09:20:37,306:INFO:Defining folds
2024-04-06 09:20:37,306:INFO:Declaring metric variables
2024-04-06 09:20:37,308:INFO:Importing untrained model
2024-04-06 09:20:37,310:INFO:Logistic Regression Imported successfully
2024-04-06 09:20:37,313:INFO:Starting cross validation
2024-04-06 09:20:37,314:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:20:37,447:INFO:Calculating mean and std
2024-04-06 09:20:37,448:INFO:Creating metrics dataframe
2024-04-06 09:20:37,449:INFO:Uploading results into container
2024-04-06 09:20:37,449:INFO:Uploading model into container now
2024-04-06 09:20:37,449:INFO:_master_model_container: 1
2024-04-06 09:20:37,449:INFO:_display_container: 2
2024-04-06 09:20:37,449:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1449, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:20:37,449:INFO:create_model() successfully completed......................................
2024-04-06 09:20:37,609:INFO:SubProcess create_model() end ==================================
2024-04-06 09:20:37,610:INFO:Creating metrics dataframe
2024-04-06 09:20:37,612:INFO:Initializing Decision Tree Classifier
2024-04-06 09:20:37,612:INFO:Total runtime is 0.005210351943969726 minutes
2024-04-06 09:20:37,613:INFO:SubProcess create_model() called ==================================
2024-04-06 09:20:37,613:INFO:Initializing create_model()
2024-04-06 09:20:37,613:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177b8c990>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13fe4e3d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:20:37,613:INFO:Checking exceptions
2024-04-06 09:20:37,613:INFO:Importing libraries
2024-04-06 09:20:37,613:INFO:Copying training dataset
2024-04-06 09:20:37,616:INFO:Defining folds
2024-04-06 09:20:37,616:INFO:Declaring metric variables
2024-04-06 09:20:37,617:INFO:Importing untrained model
2024-04-06 09:20:37,618:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:20:37,620:INFO:Starting cross validation
2024-04-06 09:20:37,621:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:20:37,689:INFO:Calculating mean and std
2024-04-06 09:20:37,689:INFO:Creating metrics dataframe
2024-04-06 09:20:37,690:INFO:Uploading results into container
2024-04-06 09:20:37,690:INFO:Uploading model into container now
2024-04-06 09:20:37,691:INFO:_master_model_container: 2
2024-04-06 09:20:37,691:INFO:_display_container: 2
2024-04-06 09:20:37,691:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1449, splitter='best')
2024-04-06 09:20:37,691:INFO:create_model() successfully completed......................................
2024-04-06 09:20:37,794:INFO:SubProcess create_model() end ==================================
2024-04-06 09:20:37,794:INFO:Creating metrics dataframe
2024-04-06 09:20:37,796:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 09:20:37,799:INFO:Initializing create_model()
2024-04-06 09:20:37,799:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177b8c990>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1449, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:20:37,799:INFO:Checking exceptions
2024-04-06 09:20:37,800:INFO:Importing libraries
2024-04-06 09:20:37,800:INFO:Copying training dataset
2024-04-06 09:20:37,802:INFO:Defining folds
2024-04-06 09:20:37,803:INFO:Declaring metric variables
2024-04-06 09:20:37,803:INFO:Importing untrained model
2024-04-06 09:20:37,803:INFO:Declaring custom model
2024-04-06 09:20:37,803:INFO:Logistic Regression Imported successfully
2024-04-06 09:20:37,803:INFO:Cross validation set to False
2024-04-06 09:20:37,803:INFO:Fitting Model
2024-04-06 09:20:37,815:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1449, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:20:37,815:INFO:create_model() successfully completed......................................
2024-04-06 09:20:37,972:INFO:Initializing create_model()
2024-04-06 09:20:37,973:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177b8c990>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1449, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:20:37,973:INFO:Checking exceptions
2024-04-06 09:20:37,974:INFO:Importing libraries
2024-04-06 09:20:37,974:INFO:Copying training dataset
2024-04-06 09:20:37,981:INFO:Defining folds
2024-04-06 09:20:37,982:INFO:Declaring metric variables
2024-04-06 09:20:37,982:INFO:Importing untrained model
2024-04-06 09:20:37,983:INFO:Declaring custom model
2024-04-06 09:20:37,983:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:20:37,984:INFO:Cross validation set to False
2024-04-06 09:20:37,984:INFO:Fitting Model
2024-04-06 09:20:38,007:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1449, splitter='best')
2024-04-06 09:20:38,007:INFO:create_model() successfully completed......................................
2024-04-06 09:20:38,139:INFO:_master_model_container: 2
2024-04-06 09:20:38,139:INFO:_display_container: 2
2024-04-06 09:20:38,140:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1449, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1449, splitter='best')]
2024-04-06 09:20:38,140:INFO:compare_models() successfully completed......................................
2024-04-06 09:20:38,140:INFO:Initializing predict_model()
2024-04-06 09:20:38,140:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177b8c990>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1449, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x308096980>)
2024-04-06 09:20:38,140:INFO:Checking exceptions
2024-04-06 09:20:38,140:INFO:Preloading libraries
2024-04-06 09:20:38,809:INFO:Initializing predict_model()
2024-04-06 09:20:38,809:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177b8c990>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1449, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x175330360>)
2024-04-06 09:20:38,809:INFO:Checking exceptions
2024-04-06 09:20:38,809:INFO:Preloading libraries
2024-04-06 09:20:39,222:INFO:Initializing tune_model()
2024-04-06 09:20:39,222:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177b8c990>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1449, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-06 09:20:39,222:INFO:Checking exceptions
2024-04-06 09:20:39,252:INFO:Copying training dataset
2024-04-06 09:20:39,254:INFO:Checking base model
2024-04-06 09:20:39,254:INFO:Base model : Logistic Regression
2024-04-06 09:20:39,270:INFO:Declaring metric variables
2024-04-06 09:20:39,287:INFO:Defining Hyperparameters
2024-04-06 09:20:39,410:INFO:Tuning with n_jobs=-1
2024-04-06 09:20:39,410:INFO:Initializing RandomizedSearchCV
2024-04-06 09:20:39,523:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 2.993}
2024-04-06 09:20:39,523:INFO:Hyperparameter search completed
2024-04-06 09:20:39,523:INFO:SubProcess create_model() called ==================================
2024-04-06 09:20:39,523:INFO:Initializing create_model()
2024-04-06 09:20:39,523:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177b8c990>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1449, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30a6fe890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'class_weight': 'balanced', 'C': 2.993})
2024-04-06 09:20:39,523:INFO:Checking exceptions
2024-04-06 09:20:39,523:INFO:Importing libraries
2024-04-06 09:20:39,523:INFO:Copying training dataset
2024-04-06 09:20:39,525:INFO:Defining folds
2024-04-06 09:20:39,525:INFO:Declaring metric variables
2024-04-06 09:20:39,526:INFO:Importing untrained model
2024-04-06 09:20:39,527:INFO:Declaring custom model
2024-04-06 09:20:39,528:INFO:Logistic Regression Imported successfully
2024-04-06 09:20:39,530:INFO:Starting cross validation
2024-04-06 09:20:39,530:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:20:39,582:INFO:Calculating mean and std
2024-04-06 09:20:39,582:INFO:Creating metrics dataframe
2024-04-06 09:20:39,584:INFO:Finalizing model
2024-04-06 09:20:39,621:INFO:Uploading results into container
2024-04-06 09:20:39,621:INFO:Uploading model into container now
2024-04-06 09:20:39,622:INFO:_master_model_container: 3
2024-04-06 09:20:39,622:INFO:_display_container: 5
2024-04-06 09:20:39,622:INFO:LogisticRegression(C=2.993, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1449, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:20:39,622:INFO:create_model() successfully completed......................................
2024-04-06 09:20:39,772:INFO:SubProcess create_model() end ==================================
2024-04-06 09:20:39,772:INFO:choose_better activated
2024-04-06 09:20:39,776:INFO:SubProcess create_model() called ==================================
2024-04-06 09:20:39,777:INFO:Initializing create_model()
2024-04-06 09:20:39,777:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177b8c990>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1449, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:20:39,777:INFO:Checking exceptions
2024-04-06 09:20:39,778:INFO:Importing libraries
2024-04-06 09:20:39,778:INFO:Copying training dataset
2024-04-06 09:20:39,780:INFO:Defining folds
2024-04-06 09:20:39,780:INFO:Declaring metric variables
2024-04-06 09:20:39,780:INFO:Importing untrained model
2024-04-06 09:20:39,780:INFO:Declaring custom model
2024-04-06 09:20:39,780:INFO:Logistic Regression Imported successfully
2024-04-06 09:20:39,781:INFO:Starting cross validation
2024-04-06 09:20:39,781:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:20:39,844:INFO:Calculating mean and std
2024-04-06 09:20:39,844:INFO:Creating metrics dataframe
2024-04-06 09:20:39,846:INFO:Finalizing model
2024-04-06 09:20:39,866:INFO:Uploading results into container
2024-04-06 09:20:39,866:INFO:Uploading model into container now
2024-04-06 09:20:39,866:INFO:_master_model_container: 4
2024-04-06 09:20:39,867:INFO:_display_container: 6
2024-04-06 09:20:39,867:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1449, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:20:39,867:INFO:create_model() successfully completed......................................
2024-04-06 09:20:39,984:INFO:SubProcess create_model() end ==================================
2024-04-06 09:20:39,985:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1449, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 0.5287
2024-04-06 09:20:39,985:INFO:LogisticRegression(C=2.993, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1449, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 0.5498
2024-04-06 09:20:39,985:INFO:LogisticRegression(C=2.993, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1449, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2024-04-06 09:20:39,985:INFO:choose_better completed
2024-04-06 09:20:39,995:INFO:_master_model_container: 4
2024-04-06 09:20:39,995:INFO:_display_container: 5
2024-04-06 09:20:39,996:INFO:LogisticRegression(C=2.993, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1449, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:20:39,996:INFO:tune_model() successfully completed......................................
2024-04-06 09:20:40,135:INFO:Initializing predict_model()
2024-04-06 09:20:40,135:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177b8c990>, estimator=LogisticRegression(C=2.993, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1449, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x176c27d80>)
2024-04-06 09:20:40,135:INFO:Checking exceptions
2024-04-06 09:20:40,136:INFO:Preloading libraries
2024-04-06 09:20:40,418:INFO:Initializing finalize_model()
2024-04-06 09:20:40,418:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177b8c990>, estimator=LogisticRegression(C=2.993, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1449, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-06 09:20:40,418:INFO:Finalizing LogisticRegression(C=2.993, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1449, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:20:40,420:INFO:Initializing create_model()
2024-04-06 09:20:40,420:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177b8c990>, estimator=LogisticRegression(C=2.993, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1449, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:20:40,420:INFO:Checking exceptions
2024-04-06 09:20:40,420:INFO:Importing libraries
2024-04-06 09:20:40,420:INFO:Copying training dataset
2024-04-06 09:20:40,420:INFO:Defining folds
2024-04-06 09:20:40,421:INFO:Declaring metric variables
2024-04-06 09:20:40,421:INFO:Importing untrained model
2024-04-06 09:20:40,421:INFO:Declaring custom model
2024-04-06 09:20:40,421:INFO:Logistic Regression Imported successfully
2024-04-06 09:20:40,421:INFO:Cross validation set to False
2024-04-06 09:20:40,421:INFO:Fitting Model
2024-04-06 09:20:40,454:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=2.993, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2',
                                    random_state=1449, solver='lbfgs',
                                    tol=0.0001, verbose=0, warm_start=False))],
         verbose=False)
2024-04-06 09:20:40,454:INFO:create_model() successfully completed......................................
2024-04-06 09:20:40,599:INFO:_master_model_container: 4
2024-04-06 09:20:40,599:INFO:_display_container: 6
2024-04-06 09:20:40,601:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=2.993, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2',
                                    random_state=1449, solver='lbfgs',
                                    tol=0.0001, verbose=0, warm_start=False))],
         verbose=False)
2024-04-06 09:20:40,601:INFO:finalize_model() successfully completed......................................
2024-04-06 09:20:40,739:INFO:Initializing save_model()
2024-04-06 09:20:40,739:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=2.993, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2',
                                    random_state=1449, solver='lbfgs',
                                    tol=0.0001, verbose=0, warm_start=False))],
         verbose=False), model_name=./kobe, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-06 09:20:40,739:INFO:Adding model into prep_pipe
2024-04-06 09:20:40,739:WARNING:Only Model saved as it was a pipeline.
2024-04-06 09:20:40,740:INFO:./kobe.pkl saved in current working directory
2024-04-06 09:20:40,742:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=2.993, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2',
                                    random_state=1449, solver='lbfgs',
                                    tol=0.0001, verbose=0, warm_start=False))],
         verbose=False)
2024-04-06 09:20:40,742:INFO:save_model() successfully completed......................................
2024-04-06 09:20:40,850:INFO:Initializing load_model()
2024-04-06 09:20:40,850:INFO:load_model(model_name=./kobe, platform=None, authentication=None, verbose=True)
2024-04-06 09:20:40,859:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-06 09:21:14,242:INFO:PyCaret ClassificationExperiment
2024-04-06 09:21:14,243:INFO:Logging name: clf-default-name
2024-04-06 09:21:14,243:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 09:21:14,243:INFO:version 3.3.0
2024-04-06 09:21:14,243:INFO:Initializing setup()
2024-04-06 09:21:14,243:INFO:self.USI: 6dd0
2024-04-06 09:21:14,243:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 09:21:14,243:INFO:Checking environment
2024-04-06 09:21:14,243:INFO:python_version: 3.11.3
2024-04-06 09:21:14,243:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 09:21:14,243:INFO:machine: arm64
2024-04-06 09:21:14,243:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 09:21:14,243:INFO:Memory: svmem(total=8589934592, available=1813790720, percent=78.9, used=2943369216, free=20922368, active=1812742144, inactive=1790279680, wired=1130627072)
2024-04-06 09:21:14,243:INFO:Physical Core: 8
2024-04-06 09:21:14,243:INFO:Logical Core: 8
2024-04-06 09:21:14,243:INFO:Checking libraries
2024-04-06 09:21:14,243:INFO:System:
2024-04-06 09:21:14,244:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 09:21:14,244:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 09:21:14,244:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 09:21:14,244:INFO:PyCaret required dependencies:
2024-04-06 09:21:14,244:INFO:                 pip: 24.0
2024-04-06 09:21:14,244:INFO:          setuptools: 65.5.0
2024-04-06 09:21:14,244:INFO:             pycaret: 3.3.0
2024-04-06 09:21:14,244:INFO:             IPython: 8.23.0
2024-04-06 09:21:14,244:INFO:          ipywidgets: 8.1.2
2024-04-06 09:21:14,244:INFO:                tqdm: 4.66.2
2024-04-06 09:21:14,244:INFO:               numpy: 1.26.4
2024-04-06 09:21:14,245:INFO:              pandas: 2.1.4
2024-04-06 09:21:14,245:INFO:              jinja2: 3.1.3
2024-04-06 09:21:14,245:INFO:               scipy: 1.11.4
2024-04-06 09:21:14,245:INFO:              joblib: 1.3.2
2024-04-06 09:21:14,245:INFO:             sklearn: 1.4.1.post1
2024-04-06 09:21:14,245:INFO:                pyod: 1.1.3
2024-04-06 09:21:14,245:INFO:            imblearn: 0.12.2
2024-04-06 09:21:14,245:INFO:   category_encoders: 2.6.3
2024-04-06 09:21:14,245:INFO:            lightgbm: 4.3.0
2024-04-06 09:21:14,245:INFO:               numba: 0.59.1
2024-04-06 09:21:14,245:INFO:            requests: 2.31.0
2024-04-06 09:21:14,245:INFO:          matplotlib: 3.7.5
2024-04-06 09:21:14,245:INFO:          scikitplot: 0.3.7
2024-04-06 09:21:14,245:INFO:         yellowbrick: 1.5
2024-04-06 09:21:14,245:INFO:              plotly: 5.20.0
2024-04-06 09:21:14,245:INFO:    plotly-resampler: Not installed
2024-04-06 09:21:14,245:INFO:             kaleido: 0.2.1
2024-04-06 09:21:14,245:INFO:           schemdraw: 0.15
2024-04-06 09:21:14,245:INFO:         statsmodels: 0.14.1
2024-04-06 09:21:14,245:INFO:              sktime: 0.28.0
2024-04-06 09:21:14,245:INFO:               tbats: 1.1.3
2024-04-06 09:21:14,245:INFO:            pmdarima: 2.0.4
2024-04-06 09:21:14,245:INFO:              psutil: 5.9.8
2024-04-06 09:21:14,245:INFO:          markupsafe: 2.1.5
2024-04-06 09:21:14,245:INFO:             pickle5: Not installed
2024-04-06 09:21:14,245:INFO:         cloudpickle: 3.0.0
2024-04-06 09:21:14,245:INFO:         deprecation: 2.1.0
2024-04-06 09:21:14,245:INFO:              xxhash: 3.4.1
2024-04-06 09:21:14,245:INFO:           wurlitzer: 3.0.3
2024-04-06 09:21:14,245:INFO:PyCaret optional dependencies:
2024-04-06 09:21:14,245:INFO:                shap: Not installed
2024-04-06 09:21:14,245:INFO:           interpret: Not installed
2024-04-06 09:21:14,245:INFO:                umap: Not installed
2024-04-06 09:21:14,245:INFO:     ydata_profiling: Not installed
2024-04-06 09:21:14,245:INFO:  explainerdashboard: Not installed
2024-04-06 09:21:14,245:INFO:             autoviz: Not installed
2024-04-06 09:21:14,245:INFO:           fairlearn: Not installed
2024-04-06 09:21:14,245:INFO:          deepchecks: Not installed
2024-04-06 09:21:14,245:INFO:             xgboost: Not installed
2024-04-06 09:21:14,245:INFO:            catboost: Not installed
2024-04-06 09:21:14,245:INFO:              kmodes: Not installed
2024-04-06 09:21:14,245:INFO:             mlxtend: Not installed
2024-04-06 09:21:14,245:INFO:       statsforecast: Not installed
2024-04-06 09:21:14,245:INFO:        tune_sklearn: Not installed
2024-04-06 09:21:14,245:INFO:                 ray: Not installed
2024-04-06 09:21:14,245:INFO:            hyperopt: Not installed
2024-04-06 09:21:14,245:INFO:              optuna: Not installed
2024-04-06 09:21:14,245:INFO:               skopt: Not installed
2024-04-06 09:21:14,245:INFO:              mlflow: 2.11.3
2024-04-06 09:21:14,245:INFO:              gradio: Not installed
2024-04-06 09:21:14,245:INFO:             fastapi: Not installed
2024-04-06 09:21:14,245:INFO:             uvicorn: Not installed
2024-04-06 09:21:14,245:INFO:              m2cgen: Not installed
2024-04-06 09:21:14,245:INFO:           evidently: Not installed
2024-04-06 09:21:14,245:INFO:               fugue: Not installed
2024-04-06 09:21:14,245:INFO:           streamlit: 1.33.0
2024-04-06 09:21:14,245:INFO:             prophet: 1.1.5
2024-04-06 09:21:14,245:INFO:None
2024-04-06 09:21:14,246:INFO:Set up data.
2024-04-06 09:21:14,257:INFO:Set up folding strategy.
2024-04-06 09:21:14,257:INFO:Set up train/test split.
2024-04-06 09:21:14,257:INFO:Set up data.
2024-04-06 09:21:14,261:INFO:Set up index.
2024-04-06 09:21:14,261:INFO:Assigning column types.
2024-04-06 09:21:14,264:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 09:21:14,286:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 09:21:14,287:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:21:14,299:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:21:14,300:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:21:14,321:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 09:21:14,321:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:21:14,333:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:21:14,333:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:21:14,333:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 09:21:14,352:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:21:14,364:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:21:14,364:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:21:14,382:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 09:21:14,393:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:21:14,393:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:21:14,393:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 09:21:14,422:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:21:14,423:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:21:14,452:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:21:14,452:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:21:14,453:INFO:Preparing preprocessing pipeline...
2024-04-06 09:21:14,454:INFO:Set up simple imputation.
2024-04-06 09:21:14,454:INFO:Set up feature normalization.
2024-04-06 09:21:14,464:INFO:Finished creating preprocessing pipeline.
2024-04-06 09:21:14,465:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 09:21:14,465:INFO:Creating final display dataframe.
2024-04-06 09:21:14,496:INFO:Setup _display_container:                     Description             Value
0                    Session id              6333
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              6dd0
2024-04-06 09:21:14,530:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:21:14,530:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:21:14,560:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:21:14,560:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 09:21:14,561:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 09:21:14,562:INFO:setup() successfully completed in 0.32s...............
2024-04-06 09:21:14,562:INFO:Initializing compare_models()
2024-04-06 09:21:14,562:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cef7d50>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x30cef7d50>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 09:21:14,562:INFO:Checking exceptions
2024-04-06 09:21:14,564:INFO:Preparing display monitor
2024-04-06 09:21:14,574:INFO:Initializing Logistic Regression
2024-04-06 09:21:14,574:INFO:Total runtime is 2.181529998779297e-06 minutes
2024-04-06 09:21:14,576:INFO:SubProcess create_model() called ==================================
2024-04-06 09:21:14,576:INFO:Initializing create_model()
2024-04-06 09:21:14,576:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cef7d50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30ce15ad0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:21:14,576:INFO:Checking exceptions
2024-04-06 09:21:14,577:INFO:Importing libraries
2024-04-06 09:21:14,577:INFO:Copying training dataset
2024-04-06 09:21:14,581:INFO:Defining folds
2024-04-06 09:21:14,581:INFO:Declaring metric variables
2024-04-06 09:21:14,582:INFO:Importing untrained model
2024-04-06 09:21:14,584:INFO:Logistic Regression Imported successfully
2024-04-06 09:21:14,589:INFO:Starting cross validation
2024-04-06 09:21:14,589:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:21:14,724:INFO:Calculating mean and std
2024-04-06 09:21:14,725:INFO:Creating metrics dataframe
2024-04-06 09:21:14,726:INFO:Uploading results into container
2024-04-06 09:21:14,726:INFO:Uploading model into container now
2024-04-06 09:21:14,726:INFO:_master_model_container: 1
2024-04-06 09:21:14,726:INFO:_display_container: 2
2024-04-06 09:21:14,726:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6333, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:21:14,726:INFO:create_model() successfully completed......................................
2024-04-06 09:21:14,906:INFO:SubProcess create_model() end ==================================
2024-04-06 09:21:14,906:INFO:Creating metrics dataframe
2024-04-06 09:21:14,910:INFO:Initializing Decision Tree Classifier
2024-04-06 09:21:14,910:INFO:Total runtime is 0.005606365203857423 minutes
2024-04-06 09:21:14,912:INFO:SubProcess create_model() called ==================================
2024-04-06 09:21:14,912:INFO:Initializing create_model()
2024-04-06 09:21:14,912:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cef7d50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30ce15ad0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:21:14,912:INFO:Checking exceptions
2024-04-06 09:21:14,912:INFO:Importing libraries
2024-04-06 09:21:14,912:INFO:Copying training dataset
2024-04-06 09:21:14,914:INFO:Defining folds
2024-04-06 09:21:14,915:INFO:Declaring metric variables
2024-04-06 09:21:14,916:INFO:Importing untrained model
2024-04-06 09:21:14,918:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:21:14,920:INFO:Starting cross validation
2024-04-06 09:21:14,921:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:21:15,000:INFO:Calculating mean and std
2024-04-06 09:21:15,001:INFO:Creating metrics dataframe
2024-04-06 09:21:15,001:INFO:Uploading results into container
2024-04-06 09:21:15,001:INFO:Uploading model into container now
2024-04-06 09:21:15,002:INFO:_master_model_container: 2
2024-04-06 09:21:15,002:INFO:_display_container: 2
2024-04-06 09:21:15,002:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6333, splitter='best')
2024-04-06 09:21:15,002:INFO:create_model() successfully completed......................................
2024-04-06 09:21:15,098:INFO:SubProcess create_model() end ==================================
2024-04-06 09:21:15,098:INFO:Creating metrics dataframe
2024-04-06 09:21:15,101:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 09:21:15,104:INFO:Initializing create_model()
2024-04-06 09:21:15,104:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cef7d50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6333, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:21:15,104:INFO:Checking exceptions
2024-04-06 09:21:15,105:INFO:Importing libraries
2024-04-06 09:21:15,105:INFO:Copying training dataset
2024-04-06 09:21:15,107:INFO:Defining folds
2024-04-06 09:21:15,107:INFO:Declaring metric variables
2024-04-06 09:21:15,107:INFO:Importing untrained model
2024-04-06 09:21:15,107:INFO:Declaring custom model
2024-04-06 09:21:15,107:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:21:15,108:INFO:Cross validation set to False
2024-04-06 09:21:15,108:INFO:Fitting Model
2024-04-06 09:21:15,121:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6333, splitter='best')
2024-04-06 09:21:15,121:INFO:create_model() successfully completed......................................
2024-04-06 09:21:15,222:INFO:Initializing create_model()
2024-04-06 09:21:15,222:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cef7d50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6333, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:21:15,222:INFO:Checking exceptions
2024-04-06 09:21:15,223:INFO:Importing libraries
2024-04-06 09:21:15,223:INFO:Copying training dataset
2024-04-06 09:21:15,225:INFO:Defining folds
2024-04-06 09:21:15,225:INFO:Declaring metric variables
2024-04-06 09:21:15,225:INFO:Importing untrained model
2024-04-06 09:21:15,225:INFO:Declaring custom model
2024-04-06 09:21:15,226:INFO:Logistic Regression Imported successfully
2024-04-06 09:21:15,226:INFO:Cross validation set to False
2024-04-06 09:21:15,226:INFO:Fitting Model
2024-04-06 09:21:15,232:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6333, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 09:21:15,232:INFO:create_model() successfully completed......................................
2024-04-06 09:21:15,470:INFO:_master_model_container: 2
2024-04-06 09:21:15,470:INFO:_display_container: 2
2024-04-06 09:21:15,473:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6333, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6333, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-06 09:21:15,475:INFO:compare_models() successfully completed......................................
2024-04-06 09:21:15,476:INFO:Initializing predict_model()
2024-04-06 09:21:15,476:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cef7d50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6333, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x175290680>)
2024-04-06 09:21:15,476:INFO:Checking exceptions
2024-04-06 09:21:15,476:INFO:Preloading libraries
2024-04-06 09:21:16,177:INFO:Initializing predict_model()
2024-04-06 09:21:16,177:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cef7d50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6333, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x175290ae0>)
2024-04-06 09:21:16,177:INFO:Checking exceptions
2024-04-06 09:21:16,177:INFO:Preloading libraries
2024-04-06 09:21:16,583:INFO:Initializing tune_model()
2024-04-06 09:21:16,583:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cef7d50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6333, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-06 09:21:16,583:INFO:Checking exceptions
2024-04-06 09:21:16,639:INFO:Copying training dataset
2024-04-06 09:21:16,641:INFO:Checking base model
2024-04-06 09:21:16,641:INFO:Base model : Decision Tree Classifier
2024-04-06 09:21:16,643:INFO:Declaring metric variables
2024-04-06 09:21:16,645:INFO:Defining Hyperparameters
2024-04-06 09:21:16,791:INFO:Tuning with n_jobs=-1
2024-04-06 09:21:16,791:INFO:Initializing RandomizedSearchCV
2024-04-06 09:21:16,889:INFO:best_params: {'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.002, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 16, 'actual_estimator__criterion': 'gini'}
2024-04-06 09:21:16,889:INFO:Hyperparameter search completed
2024-04-06 09:21:16,889:INFO:SubProcess create_model() called ==================================
2024-04-06 09:21:16,889:INFO:Initializing create_model()
2024-04-06 09:21:16,889:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cef7d50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6333, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30aa8d050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 9, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.002, 'max_features': 'log2', 'max_depth': 16, 'criterion': 'gini'})
2024-04-06 09:21:16,889:INFO:Checking exceptions
2024-04-06 09:21:16,889:INFO:Importing libraries
2024-04-06 09:21:16,889:INFO:Copying training dataset
2024-04-06 09:21:16,891:INFO:Defining folds
2024-04-06 09:21:16,891:INFO:Declaring metric variables
2024-04-06 09:21:16,892:INFO:Importing untrained model
2024-04-06 09:21:16,893:INFO:Declaring custom model
2024-04-06 09:21:16,894:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:21:16,896:INFO:Starting cross validation
2024-04-06 09:21:16,897:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:21:16,943:INFO:Calculating mean and std
2024-04-06 09:21:16,943:INFO:Creating metrics dataframe
2024-04-06 09:21:16,945:INFO:Finalizing model
2024-04-06 09:21:16,950:INFO:Uploading results into container
2024-04-06 09:21:16,951:INFO:Uploading model into container now
2024-04-06 09:21:16,951:INFO:_master_model_container: 3
2024-04-06 09:21:16,952:INFO:_display_container: 5
2024-04-06 09:21:16,952:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=16, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0.002, min_samples_leaf=5,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6333, splitter='best')
2024-04-06 09:21:16,952:INFO:create_model() successfully completed......................................
2024-04-06 09:21:17,050:INFO:SubProcess create_model() end ==================================
2024-04-06 09:21:17,051:INFO:choose_better activated
2024-04-06 09:21:17,052:INFO:SubProcess create_model() called ==================================
2024-04-06 09:21:17,052:INFO:Initializing create_model()
2024-04-06 09:21:17,052:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cef7d50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6333, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:21:17,053:INFO:Checking exceptions
2024-04-06 09:21:17,053:INFO:Importing libraries
2024-04-06 09:21:17,053:INFO:Copying training dataset
2024-04-06 09:21:17,056:INFO:Defining folds
2024-04-06 09:21:17,056:INFO:Declaring metric variables
2024-04-06 09:21:17,056:INFO:Importing untrained model
2024-04-06 09:21:17,056:INFO:Declaring custom model
2024-04-06 09:21:17,056:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:21:17,056:INFO:Starting cross validation
2024-04-06 09:21:17,056:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 09:21:17,122:INFO:Calculating mean and std
2024-04-06 09:21:17,123:INFO:Creating metrics dataframe
2024-04-06 09:21:17,123:INFO:Finalizing model
2024-04-06 09:21:17,135:INFO:Uploading results into container
2024-04-06 09:21:17,135:INFO:Uploading model into container now
2024-04-06 09:21:17,135:INFO:_master_model_container: 4
2024-04-06 09:21:17,136:INFO:_display_container: 6
2024-04-06 09:21:17,136:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6333, splitter='best')
2024-04-06 09:21:17,136:INFO:create_model() successfully completed......................................
2024-04-06 09:21:17,230:INFO:SubProcess create_model() end ==================================
2024-04-06 09:21:17,230:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6333, splitter='best') result for F1 is 0.5264
2024-04-06 09:21:17,230:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=16, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0.002, min_samples_leaf=5,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6333, splitter='best') result for F1 is 0.4524
2024-04-06 09:21:17,230:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6333, splitter='best') is best model
2024-04-06 09:21:17,230:INFO:choose_better completed
2024-04-06 09:21:17,230:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-06 09:21:17,234:INFO:_master_model_container: 4
2024-04-06 09:21:17,234:INFO:_display_container: 5
2024-04-06 09:21:17,234:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6333, splitter='best')
2024-04-06 09:21:17,234:INFO:tune_model() successfully completed......................................
2024-04-06 09:21:17,330:INFO:Initializing predict_model()
2024-04-06 09:21:17,330:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cef7d50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6333, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x175290ae0>)
2024-04-06 09:21:17,330:INFO:Checking exceptions
2024-04-06 09:21:17,330:INFO:Preloading libraries
2024-04-06 09:21:17,492:INFO:Initializing finalize_model()
2024-04-06 09:21:17,492:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cef7d50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6333, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-06 09:21:17,493:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6333, splitter='best')
2024-04-06 09:21:17,494:INFO:Initializing create_model()
2024-04-06 09:21:17,494:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cef7d50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6333, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 09:21:17,494:INFO:Checking exceptions
2024-04-06 09:21:17,495:INFO:Importing libraries
2024-04-06 09:21:17,495:INFO:Copying training dataset
2024-04-06 09:21:17,495:INFO:Defining folds
2024-04-06 09:21:17,495:INFO:Declaring metric variables
2024-04-06 09:21:17,495:INFO:Importing untrained model
2024-04-06 09:21:17,495:INFO:Declaring custom model
2024-04-06 09:21:17,495:INFO:Decision Tree Classifier Imported successfully
2024-04-06 09:21:17,495:INFO:Cross validation set to False
2024-04-06 09:21:17,495:INFO:Fitting Model
2024-04-06 09:21:17,547:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6333,
                                        splitter='best'))],
         verbose=False)
2024-04-06 09:21:17,547:INFO:create_model() successfully completed......................................
2024-04-06 09:21:17,641:INFO:_master_model_container: 4
2024-04-06 09:21:17,641:INFO:_display_container: 6
2024-04-06 09:21:17,643:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6333,
                                        splitter='best'))],
         verbose=False)
2024-04-06 09:21:17,643:INFO:finalize_model() successfully completed......................................
2024-04-06 09:21:17,738:INFO:Initializing save_model()
2024-04-06 09:21:17,739:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6333,
                                        splitter='best'))],
         verbose=False), model_name=./kobe, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-06 09:21:17,739:INFO:Adding model into prep_pipe
2024-04-06 09:21:17,739:WARNING:Only Model saved as it was a pipeline.
2024-04-06 09:21:17,742:INFO:./kobe.pkl saved in current working directory
2024-04-06 09:21:17,744:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6333,
                                        splitter='best'))],
         verbose=False)
2024-04-06 09:21:17,744:INFO:save_model() successfully completed......................................
2024-04-06 09:21:17,837:INFO:Initializing load_model()
2024-04-06 09:21:17,837:INFO:load_model(model_name=./kobe, platform=None, authentication=None, verbose=True)
2024-04-06 09:21:17,847:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-06 09:21:20,272:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/_distutils_hack/__init__.py:33: UserWarning: Setuptools is replacing distutils.
  warnings.warn("Setuptools is replacing distutils.")

2024-04-06 09:21:20,297:WARNING:/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/ipykernel_3194/4239123901.py:110: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-06 10:03:43,712:INFO:PyCaret ClassificationExperiment
2024-04-06 10:03:43,712:INFO:Logging name: clf-default-name
2024-04-06 10:03:43,712:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 10:03:43,712:INFO:version 3.3.0
2024-04-06 10:03:43,712:INFO:Initializing setup()
2024-04-06 10:03:43,712:INFO:self.USI: fca5
2024-04-06 10:03:43,712:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 10:03:43,712:INFO:Checking environment
2024-04-06 10:03:43,712:INFO:python_version: 3.11.3
2024-04-06 10:03:43,712:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 10:03:43,712:INFO:machine: arm64
2024-04-06 10:03:43,712:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:03:43,713:INFO:Memory: svmem(total=8589934592, available=1897365504, percent=77.9, used=3068444672, free=49725440, active=1865613312, inactive=1835548672, wired=1202831360)
2024-04-06 10:03:43,713:INFO:Physical Core: 8
2024-04-06 10:03:43,713:INFO:Logical Core: 8
2024-04-06 10:03:43,713:INFO:Checking libraries
2024-04-06 10:03:43,713:INFO:System:
2024-04-06 10:03:43,713:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 10:03:43,713:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 10:03:43,713:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:03:43,713:INFO:PyCaret required dependencies:
2024-04-06 10:03:43,713:INFO:                 pip: 24.0
2024-04-06 10:03:43,713:INFO:          setuptools: 65.5.0
2024-04-06 10:03:43,713:INFO:             pycaret: 3.3.0
2024-04-06 10:03:43,713:INFO:             IPython: 8.23.0
2024-04-06 10:03:43,713:INFO:          ipywidgets: 8.1.2
2024-04-06 10:03:43,713:INFO:                tqdm: 4.66.2
2024-04-06 10:03:43,713:INFO:               numpy: 1.26.4
2024-04-06 10:03:43,713:INFO:              pandas: 2.1.4
2024-04-06 10:03:43,713:INFO:              jinja2: 3.1.3
2024-04-06 10:03:43,713:INFO:               scipy: 1.11.4
2024-04-06 10:03:43,713:INFO:              joblib: 1.3.2
2024-04-06 10:03:43,713:INFO:             sklearn: 1.4.1.post1
2024-04-06 10:03:43,713:INFO:                pyod: 1.1.3
2024-04-06 10:03:43,713:INFO:            imblearn: 0.12.2
2024-04-06 10:03:43,713:INFO:   category_encoders: 2.6.3
2024-04-06 10:03:43,713:INFO:            lightgbm: 4.3.0
2024-04-06 10:03:43,713:INFO:               numba: 0.59.1
2024-04-06 10:03:43,713:INFO:            requests: 2.31.0
2024-04-06 10:03:43,713:INFO:          matplotlib: 3.7.5
2024-04-06 10:03:43,713:INFO:          scikitplot: 0.3.7
2024-04-06 10:03:43,713:INFO:         yellowbrick: 1.5
2024-04-06 10:03:43,713:INFO:              plotly: 5.20.0
2024-04-06 10:03:43,713:INFO:    plotly-resampler: Not installed
2024-04-06 10:03:43,713:INFO:             kaleido: 0.2.1
2024-04-06 10:03:43,713:INFO:           schemdraw: 0.15
2024-04-06 10:03:43,713:INFO:         statsmodels: 0.14.1
2024-04-06 10:03:43,713:INFO:              sktime: 0.28.0
2024-04-06 10:03:43,713:INFO:               tbats: 1.1.3
2024-04-06 10:03:43,713:INFO:            pmdarima: 2.0.4
2024-04-06 10:03:43,713:INFO:              psutil: 5.9.8
2024-04-06 10:03:43,713:INFO:          markupsafe: 2.1.5
2024-04-06 10:03:43,713:INFO:             pickle5: Not installed
2024-04-06 10:03:43,713:INFO:         cloudpickle: 3.0.0
2024-04-06 10:03:43,713:INFO:         deprecation: 2.1.0
2024-04-06 10:03:43,713:INFO:              xxhash: 3.4.1
2024-04-06 10:03:43,713:INFO:           wurlitzer: 3.0.3
2024-04-06 10:03:43,713:INFO:PyCaret optional dependencies:
2024-04-06 10:03:43,713:INFO:                shap: Not installed
2024-04-06 10:03:43,713:INFO:           interpret: Not installed
2024-04-06 10:03:43,713:INFO:                umap: Not installed
2024-04-06 10:03:43,714:INFO:     ydata_profiling: Not installed
2024-04-06 10:03:43,714:INFO:  explainerdashboard: Not installed
2024-04-06 10:03:43,714:INFO:             autoviz: Not installed
2024-04-06 10:03:43,714:INFO:           fairlearn: Not installed
2024-04-06 10:03:43,714:INFO:          deepchecks: Not installed
2024-04-06 10:03:43,714:INFO:             xgboost: Not installed
2024-04-06 10:03:43,714:INFO:            catboost: Not installed
2024-04-06 10:03:43,714:INFO:              kmodes: Not installed
2024-04-06 10:03:43,714:INFO:             mlxtend: Not installed
2024-04-06 10:03:43,714:INFO:       statsforecast: Not installed
2024-04-06 10:03:43,714:INFO:        tune_sklearn: Not installed
2024-04-06 10:03:43,714:INFO:                 ray: Not installed
2024-04-06 10:03:43,714:INFO:            hyperopt: Not installed
2024-04-06 10:03:43,714:INFO:              optuna: Not installed
2024-04-06 10:03:43,714:INFO:               skopt: Not installed
2024-04-06 10:03:43,714:INFO:              mlflow: 2.11.3
2024-04-06 10:03:43,714:INFO:              gradio: Not installed
2024-04-06 10:03:43,714:INFO:             fastapi: Not installed
2024-04-06 10:03:43,714:INFO:             uvicorn: Not installed
2024-04-06 10:03:43,714:INFO:              m2cgen: Not installed
2024-04-06 10:03:43,714:INFO:           evidently: Not installed
2024-04-06 10:03:43,714:INFO:               fugue: Not installed
2024-04-06 10:03:43,714:INFO:           streamlit: 1.33.0
2024-04-06 10:03:43,714:INFO:             prophet: 1.1.5
2024-04-06 10:03:43,714:INFO:None
2024-04-06 10:03:43,714:INFO:Set up data.
2024-04-06 10:03:43,716:INFO:Set up folding strategy.
2024-04-06 10:03:43,716:INFO:Set up train/test split.
2024-04-06 10:03:43,716:INFO:Set up data.
2024-04-06 10:03:43,719:INFO:Set up index.
2024-04-06 10:03:43,720:INFO:Assigning column types.
2024-04-06 10:03:43,722:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 10:03:43,741:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:03:43,741:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:03:43,753:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:03:43,753:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:03:43,771:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:03:43,771:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:03:43,782:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:03:43,783:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:03:43,783:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 10:03:43,802:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:03:43,813:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:03:43,813:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:03:43,831:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:03:43,842:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:03:43,842:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:03:43,842:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 10:03:43,871:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:03:43,872:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:03:43,901:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:03:43,901:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:03:43,902:INFO:Preparing preprocessing pipeline...
2024-04-06 10:03:43,902:INFO:Set up simple imputation.
2024-04-06 10:03:43,902:INFO:Set up feature normalization.
2024-04-06 10:03:43,915:INFO:Finished creating preprocessing pipeline.
2024-04-06 10:03:43,917:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 10:03:43,917:INFO:Creating final display dataframe.
2024-04-06 10:03:43,954:INFO:Setup _display_container:                     Description             Value
0                    Session id              1846
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              fca5
2024-04-06 10:03:43,987:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:03:43,987:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:03:44,017:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:03:44,017:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:03:44,017:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 10:03:44,017:INFO:setup() successfully completed in 0.31s...............
2024-04-06 10:03:44,018:INFO:Initializing compare_models()
2024-04-06 10:03:44,018:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e94c110>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x30e94c110>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 10:03:44,018:INFO:Checking exceptions
2024-04-06 10:03:44,020:INFO:Preparing display monitor
2024-04-06 10:03:44,029:INFO:Initializing Logistic Regression
2024-04-06 10:03:44,029:INFO:Total runtime is 3.981590270996094e-06 minutes
2024-04-06 10:03:44,031:INFO:SubProcess create_model() called ==================================
2024-04-06 10:03:44,032:INFO:Initializing create_model()
2024-04-06 10:03:44,032:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e94c110>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30dd15e10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:03:44,032:INFO:Checking exceptions
2024-04-06 10:03:44,032:INFO:Importing libraries
2024-04-06 10:03:44,032:INFO:Copying training dataset
2024-04-06 10:03:44,035:INFO:Defining folds
2024-04-06 10:03:44,035:INFO:Declaring metric variables
2024-04-06 10:03:44,036:INFO:Importing untrained model
2024-04-06 10:03:44,037:INFO:Logistic Regression Imported successfully
2024-04-06 10:03:44,040:INFO:Starting cross validation
2024-04-06 10:03:44,040:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:03:46,152:INFO:Calculating mean and std
2024-04-06 10:03:46,157:INFO:Creating metrics dataframe
2024-04-06 10:03:46,163:INFO:Uploading results into container
2024-04-06 10:03:46,164:INFO:Uploading model into container now
2024-04-06 10:03:46,165:INFO:_master_model_container: 1
2024-04-06 10:03:46,165:INFO:_display_container: 2
2024-04-06 10:03:46,166:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1846, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:03:46,166:INFO:create_model() successfully completed......................................
2024-04-06 10:03:46,395:INFO:SubProcess create_model() end ==================================
2024-04-06 10:03:46,395:INFO:Creating metrics dataframe
2024-04-06 10:03:46,397:INFO:Initializing Decision Tree Classifier
2024-04-06 10:03:46,398:INFO:Total runtime is 0.039475397268931074 minutes
2024-04-06 10:03:46,399:INFO:SubProcess create_model() called ==================================
2024-04-06 10:03:46,399:INFO:Initializing create_model()
2024-04-06 10:03:46,399:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e94c110>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30dd15e10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:03:46,399:INFO:Checking exceptions
2024-04-06 10:03:46,399:INFO:Importing libraries
2024-04-06 10:03:46,399:INFO:Copying training dataset
2024-04-06 10:03:46,402:INFO:Defining folds
2024-04-06 10:03:46,402:INFO:Declaring metric variables
2024-04-06 10:03:46,403:INFO:Importing untrained model
2024-04-06 10:03:46,404:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:03:46,407:INFO:Starting cross validation
2024-04-06 10:03:46,407:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:03:46,507:INFO:Calculating mean and std
2024-04-06 10:03:46,508:INFO:Creating metrics dataframe
2024-04-06 10:03:46,509:INFO:Uploading results into container
2024-04-06 10:03:46,509:INFO:Uploading model into container now
2024-04-06 10:03:46,509:INFO:_master_model_container: 2
2024-04-06 10:03:46,509:INFO:_display_container: 2
2024-04-06 10:03:46,510:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1846, splitter='best')
2024-04-06 10:03:46,510:INFO:create_model() successfully completed......................................
2024-04-06 10:03:46,624:INFO:SubProcess create_model() end ==================================
2024-04-06 10:03:46,624:INFO:Creating metrics dataframe
2024-04-06 10:03:46,627:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 10:03:46,631:INFO:Initializing create_model()
2024-04-06 10:03:46,631:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e94c110>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1846, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:03:46,631:INFO:Checking exceptions
2024-04-06 10:03:46,632:INFO:Importing libraries
2024-04-06 10:03:46,632:INFO:Copying training dataset
2024-04-06 10:03:46,634:INFO:Defining folds
2024-04-06 10:03:46,634:INFO:Declaring metric variables
2024-04-06 10:03:46,634:INFO:Importing untrained model
2024-04-06 10:03:46,634:INFO:Declaring custom model
2024-04-06 10:03:46,635:INFO:Logistic Regression Imported successfully
2024-04-06 10:03:46,635:INFO:Cross validation set to False
2024-04-06 10:03:46,635:INFO:Fitting Model
2024-04-06 10:03:46,645:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1846, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:03:46,645:INFO:create_model() successfully completed......................................
2024-04-06 10:03:46,835:INFO:Initializing create_model()
2024-04-06 10:03:46,835:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e94c110>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1846, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:03:46,835:INFO:Checking exceptions
2024-04-06 10:03:46,837:INFO:Importing libraries
2024-04-06 10:03:46,837:INFO:Copying training dataset
2024-04-06 10:03:46,845:INFO:Defining folds
2024-04-06 10:03:46,845:INFO:Declaring metric variables
2024-04-06 10:03:46,845:INFO:Importing untrained model
2024-04-06 10:03:46,845:INFO:Declaring custom model
2024-04-06 10:03:46,845:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:03:46,846:INFO:Cross validation set to False
2024-04-06 10:03:46,846:INFO:Fitting Model
2024-04-06 10:03:46,887:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1846, splitter='best')
2024-04-06 10:03:46,887:INFO:create_model() successfully completed......................................
2024-04-06 10:03:47,016:INFO:_master_model_container: 2
2024-04-06 10:03:47,016:INFO:_display_container: 2
2024-04-06 10:03:47,016:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1846, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1846, splitter='best')]
2024-04-06 10:03:47,016:INFO:compare_models() successfully completed......................................
2024-04-06 10:03:47,016:INFO:Initializing predict_model()
2024-04-06 10:03:47,016:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e94c110>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1846, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1077f1440>)
2024-04-06 10:03:47,017:INFO:Checking exceptions
2024-04-06 10:03:47,017:INFO:Preloading libraries
2024-04-06 10:03:47,805:INFO:Initializing predict_model()
2024-04-06 10:03:47,805:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e94c110>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1846, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30a807e20>)
2024-04-06 10:03:47,805:INFO:Checking exceptions
2024-04-06 10:03:47,805:INFO:Preloading libraries
2024-04-06 10:03:48,231:INFO:Initializing tune_model()
2024-04-06 10:03:48,231:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e94c110>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1846, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-06 10:03:48,231:INFO:Checking exceptions
2024-04-06 10:03:48,237:INFO:Copying training dataset
2024-04-06 10:03:48,243:INFO:Checking base model
2024-04-06 10:03:48,243:INFO:Base model : Decision Tree Classifier
2024-04-06 10:03:48,245:INFO:Declaring metric variables
2024-04-06 10:03:48,246:INFO:Defining Hyperparameters
2024-04-06 10:03:48,405:INFO:Tuning with n_jobs=-1
2024-04-06 10:03:48,405:INFO:Initializing RandomizedSearchCV
2024-04-06 10:03:48,609:INFO:best_params: {'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'gini'}
2024-04-06 10:03:48,609:INFO:Hyperparameter search completed
2024-04-06 10:03:48,609:INFO:SubProcess create_model() called ==================================
2024-04-06 10:03:48,609:INFO:Initializing create_model()
2024-04-06 10:03:48,609:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e94c110>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1846, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17699dc10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 9, 'min_samples_leaf': 4, 'min_impurity_decrease': 0, 'max_features': 1.0, 'max_depth': 9, 'criterion': 'gini'})
2024-04-06 10:03:48,609:INFO:Checking exceptions
2024-04-06 10:03:48,609:INFO:Importing libraries
2024-04-06 10:03:48,609:INFO:Copying training dataset
2024-04-06 10:03:48,611:INFO:Defining folds
2024-04-06 10:03:48,611:INFO:Declaring metric variables
2024-04-06 10:03:48,612:INFO:Importing untrained model
2024-04-06 10:03:48,613:INFO:Declaring custom model
2024-04-06 10:03:48,614:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:03:48,617:INFO:Starting cross validation
2024-04-06 10:03:48,617:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:03:48,681:INFO:Calculating mean and std
2024-04-06 10:03:48,682:INFO:Creating metrics dataframe
2024-04-06 10:03:48,683:INFO:Finalizing model
2024-04-06 10:03:48,693:INFO:Uploading results into container
2024-04-06 10:03:48,694:INFO:Uploading model into container now
2024-04-06 10:03:48,694:INFO:_master_model_container: 3
2024-04-06 10:03:48,695:INFO:_display_container: 5
2024-04-06 10:03:48,695:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=9, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0, min_samples_leaf=4,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1846, splitter='best')
2024-04-06 10:03:48,695:INFO:create_model() successfully completed......................................
2024-04-06 10:03:48,804:INFO:SubProcess create_model() end ==================================
2024-04-06 10:03:48,804:INFO:choose_better activated
2024-04-06 10:03:48,806:INFO:SubProcess create_model() called ==================================
2024-04-06 10:03:48,806:INFO:Initializing create_model()
2024-04-06 10:03:48,806:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e94c110>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1846, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:03:48,806:INFO:Checking exceptions
2024-04-06 10:03:48,806:INFO:Importing libraries
2024-04-06 10:03:48,806:INFO:Copying training dataset
2024-04-06 10:03:48,809:INFO:Defining folds
2024-04-06 10:03:48,809:INFO:Declaring metric variables
2024-04-06 10:03:48,809:INFO:Importing untrained model
2024-04-06 10:03:48,809:INFO:Declaring custom model
2024-04-06 10:03:48,809:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:03:48,809:INFO:Starting cross validation
2024-04-06 10:03:48,809:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:03:48,884:INFO:Calculating mean and std
2024-04-06 10:03:48,885:INFO:Creating metrics dataframe
2024-04-06 10:03:48,885:INFO:Finalizing model
2024-04-06 10:03:48,899:INFO:Uploading results into container
2024-04-06 10:03:48,899:INFO:Uploading model into container now
2024-04-06 10:03:48,900:INFO:_master_model_container: 4
2024-04-06 10:03:48,900:INFO:_display_container: 6
2024-04-06 10:03:48,900:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1846, splitter='best')
2024-04-06 10:03:48,900:INFO:create_model() successfully completed......................................
2024-04-06 10:03:49,009:INFO:SubProcess create_model() end ==================================
2024-04-06 10:03:49,009:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1846, splitter='best') result for F1 is 0.5334
2024-04-06 10:03:49,009:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=9, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0, min_samples_leaf=4,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1846, splitter='best') result for F1 is 0.5062
2024-04-06 10:03:49,009:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1846, splitter='best') is best model
2024-04-06 10:03:49,009:INFO:choose_better completed
2024-04-06 10:03:49,010:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-06 10:03:49,014:INFO:_master_model_container: 4
2024-04-06 10:03:49,014:INFO:_display_container: 5
2024-04-06 10:03:49,014:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1846, splitter='best')
2024-04-06 10:03:49,014:INFO:tune_model() successfully completed......................................
2024-04-06 10:03:49,124:INFO:Initializing predict_model()
2024-04-06 10:03:49,124:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e94c110>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1846, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x107f30720>)
2024-04-06 10:03:49,124:INFO:Checking exceptions
2024-04-06 10:03:49,124:INFO:Preloading libraries
2024-04-06 10:03:49,304:INFO:Initializing finalize_model()
2024-04-06 10:03:49,304:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e94c110>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1846, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-06 10:03:49,304:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1846, splitter='best')
2024-04-06 10:03:49,306:INFO:Initializing create_model()
2024-04-06 10:03:49,306:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e94c110>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1846, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:03:49,306:INFO:Checking exceptions
2024-04-06 10:03:49,306:INFO:Importing libraries
2024-04-06 10:03:49,306:INFO:Copying training dataset
2024-04-06 10:03:49,307:INFO:Defining folds
2024-04-06 10:03:49,307:INFO:Declaring metric variables
2024-04-06 10:03:49,307:INFO:Importing untrained model
2024-04-06 10:03:49,307:INFO:Declaring custom model
2024-04-06 10:03:49,307:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:03:49,307:INFO:Cross validation set to False
2024-04-06 10:03:49,307:INFO:Fitting Model
2024-04-06 10:03:49,359:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=1846,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:03:49,359:INFO:create_model() successfully completed......................................
2024-04-06 10:03:49,465:INFO:_master_model_container: 4
2024-04-06 10:03:49,466:INFO:_display_container: 6
2024-04-06 10:03:49,467:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=1846,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:03:49,467:INFO:finalize_model() successfully completed......................................
2024-04-06 10:03:49,578:INFO:Initializing save_model()
2024-04-06 10:03:49,578:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=1846,
                                        splitter='best'))],
         verbose=False), model_name=./kobe, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-06 10:03:49,578:INFO:Adding model into prep_pipe
2024-04-06 10:03:49,578:WARNING:Only Model saved as it was a pipeline.
2024-04-06 10:03:49,581:INFO:./kobe.pkl saved in current working directory
2024-04-06 10:03:49,582:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=1846,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:03:49,582:INFO:save_model() successfully completed......................................
2024-04-06 10:03:49,689:INFO:Initializing load_model()
2024-04-06 10:03:49,689:INFO:load_model(model_name=./kobe, platform=None, authentication=None, verbose=True)
2024-04-06 10:03:49,699:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-06 10:03:51,143:WARNING:/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/ipykernel_3194/4239123901.py:110: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-06 10:12:00,077:INFO:PyCaret ClassificationExperiment
2024-04-06 10:12:00,077:INFO:Logging name: clf-default-name
2024-04-06 10:12:00,077:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 10:12:00,077:INFO:version 3.3.0
2024-04-06 10:12:00,077:INFO:Initializing setup()
2024-04-06 10:12:00,077:INFO:self.USI: a31e
2024-04-06 10:12:00,077:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 10:12:00,077:INFO:Checking environment
2024-04-06 10:12:00,077:INFO:python_version: 3.11.3
2024-04-06 10:12:00,078:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 10:12:00,078:INFO:machine: arm64
2024-04-06 10:12:00,078:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:12:00,078:INFO:Memory: svmem(total=8589934592, available=2320826368, percent=73.0, used=3403497472, free=70565888, active=2265088000, inactive=2247507968, wired=1138409472)
2024-04-06 10:12:00,078:INFO:Physical Core: 8
2024-04-06 10:12:00,078:INFO:Logical Core: 8
2024-04-06 10:12:00,078:INFO:Checking libraries
2024-04-06 10:12:00,078:INFO:System:
2024-04-06 10:12:00,078:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 10:12:00,078:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 10:12:00,078:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:12:00,078:INFO:PyCaret required dependencies:
2024-04-06 10:12:00,078:INFO:                 pip: 24.0
2024-04-06 10:12:00,078:INFO:          setuptools: 65.5.0
2024-04-06 10:12:00,078:INFO:             pycaret: 3.3.0
2024-04-06 10:12:00,078:INFO:             IPython: 8.23.0
2024-04-06 10:12:00,078:INFO:          ipywidgets: 8.1.2
2024-04-06 10:12:00,078:INFO:                tqdm: 4.66.2
2024-04-06 10:12:00,078:INFO:               numpy: 1.26.4
2024-04-06 10:12:00,078:INFO:              pandas: 2.1.4
2024-04-06 10:12:00,078:INFO:              jinja2: 3.1.3
2024-04-06 10:12:00,078:INFO:               scipy: 1.11.4
2024-04-06 10:12:00,078:INFO:              joblib: 1.3.2
2024-04-06 10:12:00,078:INFO:             sklearn: 1.4.1.post1
2024-04-06 10:12:00,078:INFO:                pyod: 1.1.3
2024-04-06 10:12:00,078:INFO:            imblearn: 0.12.2
2024-04-06 10:12:00,078:INFO:   category_encoders: 2.6.3
2024-04-06 10:12:00,078:INFO:            lightgbm: 4.3.0
2024-04-06 10:12:00,078:INFO:               numba: 0.59.1
2024-04-06 10:12:00,078:INFO:            requests: 2.31.0
2024-04-06 10:12:00,078:INFO:          matplotlib: 3.7.5
2024-04-06 10:12:00,078:INFO:          scikitplot: 0.3.7
2024-04-06 10:12:00,078:INFO:         yellowbrick: 1.5
2024-04-06 10:12:00,078:INFO:              plotly: 5.20.0
2024-04-06 10:12:00,078:INFO:    plotly-resampler: Not installed
2024-04-06 10:12:00,078:INFO:             kaleido: 0.2.1
2024-04-06 10:12:00,078:INFO:           schemdraw: 0.15
2024-04-06 10:12:00,078:INFO:         statsmodels: 0.14.1
2024-04-06 10:12:00,078:INFO:              sktime: 0.28.0
2024-04-06 10:12:00,078:INFO:               tbats: 1.1.3
2024-04-06 10:12:00,078:INFO:            pmdarima: 2.0.4
2024-04-06 10:12:00,078:INFO:              psutil: 5.9.8
2024-04-06 10:12:00,078:INFO:          markupsafe: 2.1.5
2024-04-06 10:12:00,078:INFO:             pickle5: Not installed
2024-04-06 10:12:00,078:INFO:         cloudpickle: 3.0.0
2024-04-06 10:12:00,078:INFO:         deprecation: 2.1.0
2024-04-06 10:12:00,078:INFO:              xxhash: 3.4.1
2024-04-06 10:12:00,078:INFO:           wurlitzer: 3.0.3
2024-04-06 10:12:00,078:INFO:PyCaret optional dependencies:
2024-04-06 10:12:00,078:INFO:                shap: Not installed
2024-04-06 10:12:00,078:INFO:           interpret: Not installed
2024-04-06 10:12:00,078:INFO:                umap: Not installed
2024-04-06 10:12:00,078:INFO:     ydata_profiling: Not installed
2024-04-06 10:12:00,078:INFO:  explainerdashboard: Not installed
2024-04-06 10:12:00,078:INFO:             autoviz: Not installed
2024-04-06 10:12:00,078:INFO:           fairlearn: Not installed
2024-04-06 10:12:00,078:INFO:          deepchecks: Not installed
2024-04-06 10:12:00,078:INFO:             xgboost: Not installed
2024-04-06 10:12:00,078:INFO:            catboost: Not installed
2024-04-06 10:12:00,078:INFO:              kmodes: Not installed
2024-04-06 10:12:00,078:INFO:             mlxtend: Not installed
2024-04-06 10:12:00,078:INFO:       statsforecast: Not installed
2024-04-06 10:12:00,078:INFO:        tune_sklearn: Not installed
2024-04-06 10:12:00,078:INFO:                 ray: Not installed
2024-04-06 10:12:00,078:INFO:            hyperopt: Not installed
2024-04-06 10:12:00,078:INFO:              optuna: Not installed
2024-04-06 10:12:00,078:INFO:               skopt: Not installed
2024-04-06 10:12:00,078:INFO:              mlflow: 2.11.3
2024-04-06 10:12:00,078:INFO:              gradio: Not installed
2024-04-06 10:12:00,078:INFO:             fastapi: Not installed
2024-04-06 10:12:00,079:INFO:             uvicorn: Not installed
2024-04-06 10:12:00,079:INFO:              m2cgen: Not installed
2024-04-06 10:12:00,079:INFO:           evidently: Not installed
2024-04-06 10:12:00,079:INFO:               fugue: Not installed
2024-04-06 10:12:00,079:INFO:           streamlit: 1.33.0
2024-04-06 10:12:00,079:INFO:             prophet: 1.1.5
2024-04-06 10:12:00,079:INFO:None
2024-04-06 10:12:00,079:INFO:Set up data.
2024-04-06 10:12:00,082:INFO:Set up folding strategy.
2024-04-06 10:12:00,082:INFO:Set up train/test split.
2024-04-06 10:12:00,082:INFO:Set up data.
2024-04-06 10:12:00,085:INFO:Set up index.
2024-04-06 10:12:00,085:INFO:Assigning column types.
2024-04-06 10:12:00,093:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 10:12:00,113:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:12:00,114:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:12:00,125:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:00,125:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:00,143:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:12:00,144:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:12:00,155:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:00,155:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:00,155:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 10:12:00,173:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:12:00,184:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:00,184:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:00,202:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:12:00,214:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:00,214:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:00,214:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 10:12:00,243:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:00,243:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:00,272:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:00,272:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:00,272:INFO:Preparing preprocessing pipeline...
2024-04-06 10:12:00,274:INFO:Set up simple imputation.
2024-04-06 10:12:00,274:INFO:Set up feature normalization.
2024-04-06 10:12:00,284:INFO:Finished creating preprocessing pipeline.
2024-04-06 10:12:00,286:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 10:12:00,286:INFO:Creating final display dataframe.
2024-04-06 10:12:00,316:INFO:Setup _display_container:                     Description             Value
0                    Session id              4618
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              a31e
2024-04-06 10:12:00,348:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:00,349:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:00,378:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:00,378:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:00,378:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 10:12:00,378:INFO:setup() successfully completed in 0.3s...............
2024-04-06 10:12:00,379:INFO:Initializing compare_models()
2024-04-06 10:12:00,379:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30de90810>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x30de90810>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 10:12:00,379:INFO:Checking exceptions
2024-04-06 10:12:00,381:INFO:Preparing display monitor
2024-04-06 10:12:00,389:INFO:Initializing Logistic Regression
2024-04-06 10:12:00,390:INFO:Total runtime is 2.300739288330078e-06 minutes
2024-04-06 10:12:00,391:INFO:SubProcess create_model() called ==================================
2024-04-06 10:12:00,391:INFO:Initializing create_model()
2024-04-06 10:12:00,391:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30de90810>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30e975690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:12:00,391:INFO:Checking exceptions
2024-04-06 10:12:00,391:INFO:Importing libraries
2024-04-06 10:12:00,391:INFO:Copying training dataset
2024-04-06 10:12:00,396:INFO:Defining folds
2024-04-06 10:12:00,396:INFO:Declaring metric variables
2024-04-06 10:12:00,397:INFO:Importing untrained model
2024-04-06 10:12:00,398:INFO:Logistic Regression Imported successfully
2024-04-06 10:12:00,400:INFO:Starting cross validation
2024-04-06 10:12:00,401:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:12:02,726:INFO:Calculating mean and std
2024-04-06 10:12:02,730:INFO:Creating metrics dataframe
2024-04-06 10:12:02,734:INFO:Uploading results into container
2024-04-06 10:12:02,734:INFO:Uploading model into container now
2024-04-06 10:12:02,735:INFO:_master_model_container: 1
2024-04-06 10:12:02,735:INFO:_display_container: 2
2024-04-06 10:12:02,735:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4618, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:12:02,735:INFO:create_model() successfully completed......................................
2024-04-06 10:12:02,968:INFO:SubProcess create_model() end ==================================
2024-04-06 10:12:02,968:INFO:Creating metrics dataframe
2024-04-06 10:12:02,971:INFO:Initializing Decision Tree Classifier
2024-04-06 10:12:02,971:INFO:Total runtime is 0.04303438663482666 minutes
2024-04-06 10:12:02,973:INFO:SubProcess create_model() called ==================================
2024-04-06 10:12:02,973:INFO:Initializing create_model()
2024-04-06 10:12:02,973:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30de90810>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30e975690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:12:02,973:INFO:Checking exceptions
2024-04-06 10:12:02,973:INFO:Importing libraries
2024-04-06 10:12:02,973:INFO:Copying training dataset
2024-04-06 10:12:02,976:INFO:Defining folds
2024-04-06 10:12:02,976:INFO:Declaring metric variables
2024-04-06 10:12:02,978:INFO:Importing untrained model
2024-04-06 10:12:02,979:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:12:02,981:INFO:Starting cross validation
2024-04-06 10:12:02,982:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:12:03,060:INFO:Calculating mean and std
2024-04-06 10:12:03,060:INFO:Creating metrics dataframe
2024-04-06 10:12:03,061:INFO:Uploading results into container
2024-04-06 10:12:03,061:INFO:Uploading model into container now
2024-04-06 10:12:03,061:INFO:_master_model_container: 2
2024-04-06 10:12:03,061:INFO:_display_container: 2
2024-04-06 10:12:03,061:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4618, splitter='best')
2024-04-06 10:12:03,061:INFO:create_model() successfully completed......................................
2024-04-06 10:12:03,175:INFO:SubProcess create_model() end ==================================
2024-04-06 10:12:03,175:INFO:Creating metrics dataframe
2024-04-06 10:12:03,178:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 10:12:03,181:INFO:Initializing create_model()
2024-04-06 10:12:03,181:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30de90810>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4618, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:12:03,181:INFO:Checking exceptions
2024-04-06 10:12:03,182:INFO:Importing libraries
2024-04-06 10:12:03,182:INFO:Copying training dataset
2024-04-06 10:12:03,185:INFO:Defining folds
2024-04-06 10:12:03,185:INFO:Declaring metric variables
2024-04-06 10:12:03,185:INFO:Importing untrained model
2024-04-06 10:12:03,185:INFO:Declaring custom model
2024-04-06 10:12:03,186:INFO:Logistic Regression Imported successfully
2024-04-06 10:12:03,186:INFO:Cross validation set to False
2024-04-06 10:12:03,186:INFO:Fitting Model
2024-04-06 10:12:03,197:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4618, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:12:03,197:INFO:create_model() successfully completed......................................
2024-04-06 10:12:03,365:INFO:Initializing create_model()
2024-04-06 10:12:03,366:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30de90810>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4618, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:12:03,367:INFO:Checking exceptions
2024-04-06 10:12:03,370:INFO:Importing libraries
2024-04-06 10:12:03,370:INFO:Copying training dataset
2024-04-06 10:12:03,376:INFO:Defining folds
2024-04-06 10:12:03,376:INFO:Declaring metric variables
2024-04-06 10:12:03,376:INFO:Importing untrained model
2024-04-06 10:12:03,376:INFO:Declaring custom model
2024-04-06 10:12:03,377:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:12:03,377:INFO:Cross validation set to False
2024-04-06 10:12:03,377:INFO:Fitting Model
2024-04-06 10:12:03,400:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4618, splitter='best')
2024-04-06 10:12:03,400:INFO:create_model() successfully completed......................................
2024-04-06 10:12:03,538:INFO:_master_model_container: 2
2024-04-06 10:12:03,538:INFO:_display_container: 2
2024-04-06 10:12:03,539:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4618, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4618, splitter='best')]
2024-04-06 10:12:03,539:INFO:compare_models() successfully completed......................................
2024-04-06 10:12:03,539:INFO:Initializing predict_model()
2024-04-06 10:12:03,539:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30de90810>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4618, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x308097ce0>)
2024-04-06 10:12:03,539:INFO:Checking exceptions
2024-04-06 10:12:03,539:INFO:Preloading libraries
2024-04-06 10:12:04,322:INFO:Initializing predict_model()
2024-04-06 10:12:04,322:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30de90810>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4618, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x308094220>)
2024-04-06 10:12:04,322:INFO:Checking exceptions
2024-04-06 10:12:04,322:INFO:Preloading libraries
2024-04-06 10:12:04,866:INFO:Initializing tune_model()
2024-04-06 10:12:04,867:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30de90810>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4618, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-06 10:12:04,867:INFO:Checking exceptions
2024-04-06 10:12:04,875:INFO:Copying training dataset
2024-04-06 10:12:04,882:INFO:Checking base model
2024-04-06 10:12:04,882:INFO:Base model : Decision Tree Classifier
2024-04-06 10:12:04,888:INFO:Declaring metric variables
2024-04-06 10:12:04,891:INFO:Defining Hyperparameters
2024-04-06 10:12:05,051:INFO:Tuning with n_jobs=-1
2024-04-06 10:12:05,051:INFO:Initializing RandomizedSearchCV
2024-04-06 10:12:05,184:INFO:best_params: {'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.0002, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 13, 'actual_estimator__criterion': 'gini'}
2024-04-06 10:12:05,184:INFO:Hyperparameter search completed
2024-04-06 10:12:05,184:INFO:SubProcess create_model() called ==================================
2024-04-06 10:12:05,185:INFO:Initializing create_model()
2024-04-06 10:12:05,185:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30de90810>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4618, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1769a6090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 10, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.0002, 'max_features': 'sqrt', 'max_depth': 13, 'criterion': 'gini'})
2024-04-06 10:12:05,185:INFO:Checking exceptions
2024-04-06 10:12:05,185:INFO:Importing libraries
2024-04-06 10:12:05,185:INFO:Copying training dataset
2024-04-06 10:12:05,187:INFO:Defining folds
2024-04-06 10:12:05,187:INFO:Declaring metric variables
2024-04-06 10:12:05,188:INFO:Importing untrained model
2024-04-06 10:12:05,188:INFO:Declaring custom model
2024-04-06 10:12:05,190:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:12:05,192:INFO:Starting cross validation
2024-04-06 10:12:05,193:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:12:05,263:INFO:Calculating mean and std
2024-04-06 10:12:05,263:INFO:Creating metrics dataframe
2024-04-06 10:12:05,265:INFO:Finalizing model
2024-04-06 10:12:05,273:INFO:Uploading results into container
2024-04-06 10:12:05,273:INFO:Uploading model into container now
2024-04-06 10:12:05,273:INFO:_master_model_container: 3
2024-04-06 10:12:05,273:INFO:_display_container: 5
2024-04-06 10:12:05,274:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=13, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.0002, min_samples_leaf=3,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4618, splitter='best')
2024-04-06 10:12:05,274:INFO:create_model() successfully completed......................................
2024-04-06 10:12:05,417:INFO:SubProcess create_model() end ==================================
2024-04-06 10:12:05,417:INFO:choose_better activated
2024-04-06 10:12:05,419:INFO:SubProcess create_model() called ==================================
2024-04-06 10:12:05,419:INFO:Initializing create_model()
2024-04-06 10:12:05,419:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30de90810>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4618, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:12:05,419:INFO:Checking exceptions
2024-04-06 10:12:05,420:INFO:Importing libraries
2024-04-06 10:12:05,420:INFO:Copying training dataset
2024-04-06 10:12:05,422:INFO:Defining folds
2024-04-06 10:12:05,422:INFO:Declaring metric variables
2024-04-06 10:12:05,423:INFO:Importing untrained model
2024-04-06 10:12:05,423:INFO:Declaring custom model
2024-04-06 10:12:05,423:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:12:05,423:INFO:Starting cross validation
2024-04-06 10:12:05,423:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:12:05,488:INFO:Calculating mean and std
2024-04-06 10:12:05,489:INFO:Creating metrics dataframe
2024-04-06 10:12:05,489:INFO:Finalizing model
2024-04-06 10:12:05,501:INFO:Uploading results into container
2024-04-06 10:12:05,501:INFO:Uploading model into container now
2024-04-06 10:12:05,501:INFO:_master_model_container: 4
2024-04-06 10:12:05,502:INFO:_display_container: 6
2024-04-06 10:12:05,502:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4618, splitter='best')
2024-04-06 10:12:05,502:INFO:create_model() successfully completed......................................
2024-04-06 10:12:05,610:INFO:SubProcess create_model() end ==================================
2024-04-06 10:12:05,611:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4618, splitter='best') result for F1 is 0.529
2024-04-06 10:12:05,611:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=13, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.0002, min_samples_leaf=3,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4618, splitter='best') result for F1 is 0.5084
2024-04-06 10:12:05,611:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4618, splitter='best') is best model
2024-04-06 10:12:05,611:INFO:choose_better completed
2024-04-06 10:12:05,611:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-06 10:12:05,615:INFO:_master_model_container: 4
2024-04-06 10:12:05,615:INFO:_display_container: 5
2024-04-06 10:12:05,615:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4618, splitter='best')
2024-04-06 10:12:05,615:INFO:tune_model() successfully completed......................................
2024-04-06 10:12:05,728:INFO:Initializing predict_model()
2024-04-06 10:12:05,728:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30de90810>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4618, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x308094220>)
2024-04-06 10:12:05,728:INFO:Checking exceptions
2024-04-06 10:12:05,728:INFO:Preloading libraries
2024-04-06 10:12:05,909:INFO:Initializing finalize_model()
2024-04-06 10:12:05,909:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30de90810>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4618, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-06 10:12:05,909:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4618, splitter='best')
2024-04-06 10:12:05,910:INFO:Initializing create_model()
2024-04-06 10:12:05,910:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30de90810>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4618, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:12:05,910:INFO:Checking exceptions
2024-04-06 10:12:05,911:INFO:Importing libraries
2024-04-06 10:12:05,911:INFO:Copying training dataset
2024-04-06 10:12:05,911:INFO:Defining folds
2024-04-06 10:12:05,911:INFO:Declaring metric variables
2024-04-06 10:12:05,911:INFO:Importing untrained model
2024-04-06 10:12:05,911:INFO:Declaring custom model
2024-04-06 10:12:05,911:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:12:05,912:INFO:Cross validation set to False
2024-04-06 10:12:05,912:INFO:Fitting Model
2024-04-06 10:12:05,963:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4618,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:12:05,963:INFO:create_model() successfully completed......................................
2024-04-06 10:12:06,070:INFO:_master_model_container: 4
2024-04-06 10:12:06,070:INFO:_display_container: 6
2024-04-06 10:12:06,072:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4618,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:12:06,072:INFO:finalize_model() successfully completed......................................
2024-04-06 10:12:06,184:INFO:Initializing save_model()
2024-04-06 10:12:06,184:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4618,
                                        splitter='best'))],
         verbose=False), model_name=./kobe, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-06 10:12:06,184:INFO:Adding model into prep_pipe
2024-04-06 10:12:06,184:WARNING:Only Model saved as it was a pipeline.
2024-04-06 10:12:06,187:INFO:./kobe.pkl saved in current working directory
2024-04-06 10:12:06,189:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4618,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:12:06,189:INFO:save_model() successfully completed......................................
2024-04-06 10:12:06,305:INFO:Initializing load_model()
2024-04-06 10:12:06,305:INFO:load_model(model_name=./kobe, platform=None, authentication=None, verbose=True)
2024-04-06 10:12:06,314:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-06 10:12:07,758:WARNING:/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/ipykernel_3194/4239123901.py:110: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-06 10:12:28,163:INFO:PyCaret ClassificationExperiment
2024-04-06 10:12:28,163:INFO:Logging name: clf-default-name
2024-04-06 10:12:28,163:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 10:12:28,163:INFO:version 3.3.0
2024-04-06 10:12:28,163:INFO:Initializing setup()
2024-04-06 10:12:28,163:INFO:self.USI: baaf
2024-04-06 10:12:28,163:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 10:12:28,163:INFO:Checking environment
2024-04-06 10:12:28,163:INFO:python_version: 3.11.3
2024-04-06 10:12:28,163:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 10:12:28,163:INFO:machine: arm64
2024-04-06 10:12:28,163:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:12:28,163:INFO:Memory: svmem(total=8589934592, available=1694023680, percent=80.3, used=2793619456, free=54820864, active=1656438784, inactive=1633861632, wired=1137180672)
2024-04-06 10:12:28,163:INFO:Physical Core: 8
2024-04-06 10:12:28,163:INFO:Logical Core: 8
2024-04-06 10:12:28,163:INFO:Checking libraries
2024-04-06 10:12:28,163:INFO:System:
2024-04-06 10:12:28,163:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 10:12:28,163:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 10:12:28,163:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:12:28,163:INFO:PyCaret required dependencies:
2024-04-06 10:12:28,164:INFO:                 pip: 24.0
2024-04-06 10:12:28,164:INFO:          setuptools: 65.5.0
2024-04-06 10:12:28,164:INFO:             pycaret: 3.3.0
2024-04-06 10:12:28,164:INFO:             IPython: 8.23.0
2024-04-06 10:12:28,164:INFO:          ipywidgets: 8.1.2
2024-04-06 10:12:28,164:INFO:                tqdm: 4.66.2
2024-04-06 10:12:28,164:INFO:               numpy: 1.26.4
2024-04-06 10:12:28,164:INFO:              pandas: 2.1.4
2024-04-06 10:12:28,164:INFO:              jinja2: 3.1.3
2024-04-06 10:12:28,164:INFO:               scipy: 1.11.4
2024-04-06 10:12:28,164:INFO:              joblib: 1.3.2
2024-04-06 10:12:28,164:INFO:             sklearn: 1.4.1.post1
2024-04-06 10:12:28,164:INFO:                pyod: 1.1.3
2024-04-06 10:12:28,164:INFO:            imblearn: 0.12.2
2024-04-06 10:12:28,164:INFO:   category_encoders: 2.6.3
2024-04-06 10:12:28,164:INFO:            lightgbm: 4.3.0
2024-04-06 10:12:28,164:INFO:               numba: 0.59.1
2024-04-06 10:12:28,164:INFO:            requests: 2.31.0
2024-04-06 10:12:28,164:INFO:          matplotlib: 3.7.5
2024-04-06 10:12:28,164:INFO:          scikitplot: 0.3.7
2024-04-06 10:12:28,164:INFO:         yellowbrick: 1.5
2024-04-06 10:12:28,164:INFO:              plotly: 5.20.0
2024-04-06 10:12:28,164:INFO:    plotly-resampler: Not installed
2024-04-06 10:12:28,164:INFO:             kaleido: 0.2.1
2024-04-06 10:12:28,164:INFO:           schemdraw: 0.15
2024-04-06 10:12:28,164:INFO:         statsmodels: 0.14.1
2024-04-06 10:12:28,164:INFO:              sktime: 0.28.0
2024-04-06 10:12:28,164:INFO:               tbats: 1.1.3
2024-04-06 10:12:28,164:INFO:            pmdarima: 2.0.4
2024-04-06 10:12:28,164:INFO:              psutil: 5.9.8
2024-04-06 10:12:28,164:INFO:          markupsafe: 2.1.5
2024-04-06 10:12:28,164:INFO:             pickle5: Not installed
2024-04-06 10:12:28,164:INFO:         cloudpickle: 3.0.0
2024-04-06 10:12:28,164:INFO:         deprecation: 2.1.0
2024-04-06 10:12:28,164:INFO:              xxhash: 3.4.1
2024-04-06 10:12:28,164:INFO:           wurlitzer: 3.0.3
2024-04-06 10:12:28,164:INFO:PyCaret optional dependencies:
2024-04-06 10:12:28,164:INFO:                shap: Not installed
2024-04-06 10:12:28,164:INFO:           interpret: Not installed
2024-04-06 10:12:28,164:INFO:                umap: Not installed
2024-04-06 10:12:28,164:INFO:     ydata_profiling: Not installed
2024-04-06 10:12:28,164:INFO:  explainerdashboard: Not installed
2024-04-06 10:12:28,164:INFO:             autoviz: Not installed
2024-04-06 10:12:28,164:INFO:           fairlearn: Not installed
2024-04-06 10:12:28,164:INFO:          deepchecks: Not installed
2024-04-06 10:12:28,164:INFO:             xgboost: Not installed
2024-04-06 10:12:28,164:INFO:            catboost: Not installed
2024-04-06 10:12:28,164:INFO:              kmodes: Not installed
2024-04-06 10:12:28,164:INFO:             mlxtend: Not installed
2024-04-06 10:12:28,164:INFO:       statsforecast: Not installed
2024-04-06 10:12:28,164:INFO:        tune_sklearn: Not installed
2024-04-06 10:12:28,164:INFO:                 ray: Not installed
2024-04-06 10:12:28,164:INFO:            hyperopt: Not installed
2024-04-06 10:12:28,164:INFO:              optuna: Not installed
2024-04-06 10:12:28,164:INFO:               skopt: Not installed
2024-04-06 10:12:28,164:INFO:              mlflow: 2.11.3
2024-04-06 10:12:28,164:INFO:              gradio: Not installed
2024-04-06 10:12:28,164:INFO:             fastapi: Not installed
2024-04-06 10:12:28,164:INFO:             uvicorn: Not installed
2024-04-06 10:12:28,164:INFO:              m2cgen: Not installed
2024-04-06 10:12:28,164:INFO:           evidently: Not installed
2024-04-06 10:12:28,164:INFO:               fugue: Not installed
2024-04-06 10:12:28,164:INFO:           streamlit: 1.33.0
2024-04-06 10:12:28,164:INFO:             prophet: 1.1.5
2024-04-06 10:12:28,164:INFO:None
2024-04-06 10:12:28,164:INFO:Set up data.
2024-04-06 10:12:28,167:INFO:Set up folding strategy.
2024-04-06 10:12:28,168:INFO:Set up train/test split.
2024-04-06 10:12:28,168:INFO:Set up data.
2024-04-06 10:12:28,170:INFO:Set up index.
2024-04-06 10:12:28,170:INFO:Assigning column types.
2024-04-06 10:12:28,172:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 10:12:28,195:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:12:28,196:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:12:28,209:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:28,209:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:28,229:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:12:28,229:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:12:28,241:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:28,241:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:28,241:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 10:12:28,261:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:12:28,272:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:28,272:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:28,291:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:12:28,303:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:28,303:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:28,303:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 10:12:28,332:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:28,333:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:28,361:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:28,362:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:28,362:INFO:Preparing preprocessing pipeline...
2024-04-06 10:12:28,363:INFO:Set up simple imputation.
2024-04-06 10:12:28,363:INFO:Set up feature normalization.
2024-04-06 10:12:28,374:INFO:Finished creating preprocessing pipeline.
2024-04-06 10:12:28,376:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 10:12:28,376:INFO:Creating final display dataframe.
2024-04-06 10:12:28,406:INFO:Setup _display_container:                     Description             Value
0                    Session id              3560
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              baaf
2024-04-06 10:12:28,439:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:28,439:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:28,469:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:28,469:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:12:28,470:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 10:12:28,470:INFO:setup() successfully completed in 0.31s...............
2024-04-06 10:12:28,471:INFO:Initializing compare_models()
2024-04-06 10:12:28,471:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177cdc8d0>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x177cdc8d0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 10:12:28,471:INFO:Checking exceptions
2024-04-06 10:12:28,473:INFO:Preparing display monitor
2024-04-06 10:12:28,485:INFO:Initializing Logistic Regression
2024-04-06 10:12:28,485:INFO:Total runtime is 2.0821889241536456e-06 minutes
2024-04-06 10:12:28,486:INFO:SubProcess create_model() called ==================================
2024-04-06 10:12:28,487:INFO:Initializing create_model()
2024-04-06 10:12:28,487:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177cdc8d0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30e9f5810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:12:28,487:INFO:Checking exceptions
2024-04-06 10:12:28,487:INFO:Importing libraries
2024-04-06 10:12:28,487:INFO:Copying training dataset
2024-04-06 10:12:28,492:INFO:Defining folds
2024-04-06 10:12:28,492:INFO:Declaring metric variables
2024-04-06 10:12:28,494:INFO:Importing untrained model
2024-04-06 10:12:28,496:INFO:Logistic Regression Imported successfully
2024-04-06 10:12:28,498:INFO:Starting cross validation
2024-04-06 10:12:28,499:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:12:28,612:INFO:Calculating mean and std
2024-04-06 10:12:28,612:INFO:Creating metrics dataframe
2024-04-06 10:12:28,613:INFO:Uploading results into container
2024-04-06 10:12:28,613:INFO:Uploading model into container now
2024-04-06 10:12:28,613:INFO:_master_model_container: 1
2024-04-06 10:12:28,613:INFO:_display_container: 2
2024-04-06 10:12:28,613:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3560, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:12:28,613:INFO:create_model() successfully completed......................................
2024-04-06 10:12:28,813:INFO:SubProcess create_model() end ==================================
2024-04-06 10:12:28,813:INFO:Creating metrics dataframe
2024-04-06 10:12:28,816:INFO:Initializing Decision Tree Classifier
2024-04-06 10:12:28,816:INFO:Total runtime is 0.0055160999298095705 minutes
2024-04-06 10:12:28,817:INFO:SubProcess create_model() called ==================================
2024-04-06 10:12:28,817:INFO:Initializing create_model()
2024-04-06 10:12:28,817:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177cdc8d0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30e9f5810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:12:28,817:INFO:Checking exceptions
2024-04-06 10:12:28,817:INFO:Importing libraries
2024-04-06 10:12:28,817:INFO:Copying training dataset
2024-04-06 10:12:28,820:INFO:Defining folds
2024-04-06 10:12:28,820:INFO:Declaring metric variables
2024-04-06 10:12:28,822:INFO:Importing untrained model
2024-04-06 10:12:28,823:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:12:28,825:INFO:Starting cross validation
2024-04-06 10:12:28,826:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:12:28,923:INFO:Calculating mean and std
2024-04-06 10:12:28,923:INFO:Creating metrics dataframe
2024-04-06 10:12:28,924:INFO:Uploading results into container
2024-04-06 10:12:28,924:INFO:Uploading model into container now
2024-04-06 10:12:28,924:INFO:_master_model_container: 2
2024-04-06 10:12:28,924:INFO:_display_container: 2
2024-04-06 10:12:28,925:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3560, splitter='best')
2024-04-06 10:12:28,925:INFO:create_model() successfully completed......................................
2024-04-06 10:12:29,116:INFO:SubProcess create_model() end ==================================
2024-04-06 10:12:29,116:INFO:Creating metrics dataframe
2024-04-06 10:12:29,119:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 10:12:29,123:INFO:Initializing create_model()
2024-04-06 10:12:29,123:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177cdc8d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3560, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:12:29,123:INFO:Checking exceptions
2024-04-06 10:12:29,124:INFO:Importing libraries
2024-04-06 10:12:29,124:INFO:Copying training dataset
2024-04-06 10:12:29,127:INFO:Defining folds
2024-04-06 10:12:29,128:INFO:Declaring metric variables
2024-04-06 10:12:29,128:INFO:Importing untrained model
2024-04-06 10:12:29,128:INFO:Declaring custom model
2024-04-06 10:12:29,128:INFO:Logistic Regression Imported successfully
2024-04-06 10:12:29,128:INFO:Cross validation set to False
2024-04-06 10:12:29,129:INFO:Fitting Model
2024-04-06 10:12:29,145:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3560, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:12:29,168:INFO:create_model() successfully completed......................................
2024-04-06 10:12:29,392:INFO:Initializing create_model()
2024-04-06 10:12:29,392:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177cdc8d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3560, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:12:29,392:INFO:Checking exceptions
2024-04-06 10:12:29,396:INFO:Importing libraries
2024-04-06 10:12:29,396:INFO:Copying training dataset
2024-04-06 10:12:29,401:INFO:Defining folds
2024-04-06 10:12:29,401:INFO:Declaring metric variables
2024-04-06 10:12:29,402:INFO:Importing untrained model
2024-04-06 10:12:29,402:INFO:Declaring custom model
2024-04-06 10:12:29,402:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:12:29,403:INFO:Cross validation set to False
2024-04-06 10:12:29,403:INFO:Fitting Model
2024-04-06 10:12:29,418:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3560, splitter='best')
2024-04-06 10:12:29,418:INFO:create_model() successfully completed......................................
2024-04-06 10:12:29,532:INFO:_master_model_container: 2
2024-04-06 10:12:29,533:INFO:_display_container: 2
2024-04-06 10:12:29,533:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3560, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3560, splitter='best')]
2024-04-06 10:12:29,533:INFO:compare_models() successfully completed......................................
2024-04-06 10:12:29,534:INFO:Initializing predict_model()
2024-04-06 10:12:29,534:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177cdc8d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3560, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x177a4efc0>)
2024-04-06 10:12:29,534:INFO:Checking exceptions
2024-04-06 10:12:29,534:INFO:Preloading libraries
2024-04-06 10:12:30,284:INFO:Initializing predict_model()
2024-04-06 10:12:30,284:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177cdc8d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3560, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30e997a60>)
2024-04-06 10:12:30,284:INFO:Checking exceptions
2024-04-06 10:12:30,284:INFO:Preloading libraries
2024-04-06 10:12:30,712:INFO:Initializing tune_model()
2024-04-06 10:12:30,712:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177cdc8d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3560, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-06 10:12:30,712:INFO:Checking exceptions
2024-04-06 10:12:30,718:INFO:Copying training dataset
2024-04-06 10:12:30,725:INFO:Checking base model
2024-04-06 10:12:30,725:INFO:Base model : Logistic Regression
2024-04-06 10:12:30,765:INFO:Declaring metric variables
2024-04-06 10:12:30,777:INFO:Defining Hyperparameters
2024-04-06 10:12:30,908:INFO:Tuning with n_jobs=-1
2024-04-06 10:12:30,908:INFO:Initializing RandomizedSearchCV
2024-04-06 10:12:31,020:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 8.122}
2024-04-06 10:12:31,021:INFO:Hyperparameter search completed
2024-04-06 10:12:31,021:INFO:SubProcess create_model() called ==================================
2024-04-06 10:12:31,021:INFO:Initializing create_model()
2024-04-06 10:12:31,021:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177cdc8d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3560, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30a4dde50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'class_weight': 'balanced', 'C': 8.122})
2024-04-06 10:12:31,021:INFO:Checking exceptions
2024-04-06 10:12:31,021:INFO:Importing libraries
2024-04-06 10:12:31,021:INFO:Copying training dataset
2024-04-06 10:12:31,023:INFO:Defining folds
2024-04-06 10:12:31,023:INFO:Declaring metric variables
2024-04-06 10:12:31,024:INFO:Importing untrained model
2024-04-06 10:12:31,024:INFO:Declaring custom model
2024-04-06 10:12:31,026:INFO:Logistic Regression Imported successfully
2024-04-06 10:12:31,028:INFO:Starting cross validation
2024-04-06 10:12:31,028:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:12:31,086:INFO:Calculating mean and std
2024-04-06 10:12:31,087:INFO:Creating metrics dataframe
2024-04-06 10:12:31,088:INFO:Finalizing model
2024-04-06 10:12:31,115:INFO:Uploading results into container
2024-04-06 10:12:31,116:INFO:Uploading model into container now
2024-04-06 10:12:31,116:INFO:_master_model_container: 3
2024-04-06 10:12:31,117:INFO:_display_container: 5
2024-04-06 10:12:31,117:INFO:LogisticRegression(C=8.122, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3560, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:12:31,117:INFO:create_model() successfully completed......................................
2024-04-06 10:12:31,366:INFO:SubProcess create_model() end ==================================
2024-04-06 10:12:31,366:INFO:choose_better activated
2024-04-06 10:12:31,367:INFO:SubProcess create_model() called ==================================
2024-04-06 10:12:31,367:INFO:Initializing create_model()
2024-04-06 10:12:31,368:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177cdc8d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3560, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:12:31,368:INFO:Checking exceptions
2024-04-06 10:12:31,368:INFO:Importing libraries
2024-04-06 10:12:31,368:INFO:Copying training dataset
2024-04-06 10:12:31,371:INFO:Defining folds
2024-04-06 10:12:31,371:INFO:Declaring metric variables
2024-04-06 10:12:31,371:INFO:Importing untrained model
2024-04-06 10:12:31,371:INFO:Declaring custom model
2024-04-06 10:12:31,371:INFO:Logistic Regression Imported successfully
2024-04-06 10:12:31,371:INFO:Starting cross validation
2024-04-06 10:12:31,372:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:12:31,425:INFO:Calculating mean and std
2024-04-06 10:12:31,425:INFO:Creating metrics dataframe
2024-04-06 10:12:31,426:INFO:Finalizing model
2024-04-06 10:12:31,432:INFO:Uploading results into container
2024-04-06 10:12:31,433:INFO:Uploading model into container now
2024-04-06 10:12:31,435:INFO:_master_model_container: 4
2024-04-06 10:12:31,435:INFO:_display_container: 6
2024-04-06 10:12:31,438:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3560, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:12:31,438:INFO:create_model() successfully completed......................................
2024-04-06 10:12:31,729:INFO:SubProcess create_model() end ==================================
2024-04-06 10:12:31,730:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3560, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 0.5255
2024-04-06 10:12:31,730:INFO:LogisticRegression(C=8.122, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3560, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 0.5514
2024-04-06 10:12:31,730:INFO:LogisticRegression(C=8.122, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3560, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2024-04-06 10:12:31,730:INFO:choose_better completed
2024-04-06 10:12:31,734:INFO:_master_model_container: 4
2024-04-06 10:12:31,734:INFO:_display_container: 5
2024-04-06 10:12:31,734:INFO:LogisticRegression(C=8.122, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3560, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:12:31,734:INFO:tune_model() successfully completed......................................
2024-04-06 10:12:31,846:INFO:Initializing predict_model()
2024-04-06 10:12:31,846:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177cdc8d0>, estimator=LogisticRegression(C=8.122, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3560, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1756be0c0>)
2024-04-06 10:12:31,846:INFO:Checking exceptions
2024-04-06 10:12:31,846:INFO:Preloading libraries
2024-04-06 10:12:32,145:INFO:Initializing finalize_model()
2024-04-06 10:12:32,145:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177cdc8d0>, estimator=LogisticRegression(C=8.122, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3560, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-06 10:12:32,145:INFO:Finalizing LogisticRegression(C=8.122, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3560, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:12:32,147:INFO:Initializing create_model()
2024-04-06 10:12:32,147:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177cdc8d0>, estimator=LogisticRegression(C=8.122, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3560, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:12:32,147:INFO:Checking exceptions
2024-04-06 10:12:32,147:INFO:Importing libraries
2024-04-06 10:12:32,147:INFO:Copying training dataset
2024-04-06 10:12:32,147:INFO:Defining folds
2024-04-06 10:12:32,147:INFO:Declaring metric variables
2024-04-06 10:12:32,148:INFO:Importing untrained model
2024-04-06 10:12:32,148:INFO:Declaring custom model
2024-04-06 10:12:32,148:INFO:Logistic Regression Imported successfully
2024-04-06 10:12:32,148:INFO:Cross validation set to False
2024-04-06 10:12:32,148:INFO:Fitting Model
2024-04-06 10:12:32,182:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=8.122, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2',
                                    random_state=3560, solver='lbfgs',
                                    tol=0.0001, verbose=0, warm_start=False))],
         verbose=False)
2024-04-06 10:12:32,182:INFO:create_model() successfully completed......................................
2024-04-06 10:12:32,345:INFO:_master_model_container: 4
2024-04-06 10:12:32,345:INFO:_display_container: 6
2024-04-06 10:12:32,347:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=8.122, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2',
                                    random_state=3560, solver='lbfgs',
                                    tol=0.0001, verbose=0, warm_start=False))],
         verbose=False)
2024-04-06 10:12:32,347:INFO:finalize_model() successfully completed......................................
2024-04-06 10:12:32,503:INFO:Initializing save_model()
2024-04-06 10:12:32,503:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=8.122, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2',
                                    random_state=3560, solver='lbfgs',
                                    tol=0.0001, verbose=0, warm_start=False))],
         verbose=False), model_name=./kobe, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-06 10:12:32,503:INFO:Adding model into prep_pipe
2024-04-06 10:12:32,503:WARNING:Only Model saved as it was a pipeline.
2024-04-06 10:12:32,504:INFO:./kobe.pkl saved in current working directory
2024-04-06 10:12:32,506:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=8.122, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2',
                                    random_state=3560, solver='lbfgs',
                                    tol=0.0001, verbose=0, warm_start=False))],
         verbose=False)
2024-04-06 10:12:32,506:INFO:save_model() successfully completed......................................
2024-04-06 10:12:32,618:INFO:Initializing load_model()
2024-04-06 10:12:32,619:INFO:load_model(model_name=./kobe, platform=None, authentication=None, verbose=True)
2024-04-06 10:12:32,635:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-06 10:12:34,402:WARNING:/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/ipykernel_3194/4239123901.py:110: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-06 10:16:00,016:INFO:PyCaret ClassificationExperiment
2024-04-06 10:16:00,016:INFO:Logging name: clf-default-name
2024-04-06 10:16:00,016:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 10:16:00,016:INFO:version 3.3.0
2024-04-06 10:16:00,016:INFO:Initializing setup()
2024-04-06 10:16:00,016:INFO:self.USI: 51f2
2024-04-06 10:16:00,016:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 10:16:00,016:INFO:Checking environment
2024-04-06 10:16:00,016:INFO:python_version: 3.11.3
2024-04-06 10:16:00,016:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 10:16:00,016:INFO:machine: arm64
2024-04-06 10:16:00,016:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:16:00,017:INFO:Memory: svmem(total=8589934592, available=1853505536, percent=78.4, used=2873786368, free=42090496, active=1833500672, inactive=1799864320, wired=1040285696)
2024-04-06 10:16:00,017:INFO:Physical Core: 8
2024-04-06 10:16:00,017:INFO:Logical Core: 8
2024-04-06 10:16:00,017:INFO:Checking libraries
2024-04-06 10:16:00,017:INFO:System:
2024-04-06 10:16:00,017:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 10:16:00,017:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 10:16:00,017:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:16:00,017:INFO:PyCaret required dependencies:
2024-04-06 10:16:00,017:INFO:                 pip: 24.0
2024-04-06 10:16:00,017:INFO:          setuptools: 65.5.0
2024-04-06 10:16:00,017:INFO:             pycaret: 3.3.0
2024-04-06 10:16:00,017:INFO:             IPython: 8.23.0
2024-04-06 10:16:00,017:INFO:          ipywidgets: 8.1.2
2024-04-06 10:16:00,017:INFO:                tqdm: 4.66.2
2024-04-06 10:16:00,017:INFO:               numpy: 1.26.4
2024-04-06 10:16:00,017:INFO:              pandas: 2.1.4
2024-04-06 10:16:00,017:INFO:              jinja2: 3.1.3
2024-04-06 10:16:00,017:INFO:               scipy: 1.11.4
2024-04-06 10:16:00,017:INFO:              joblib: 1.3.2
2024-04-06 10:16:00,017:INFO:             sklearn: 1.4.1.post1
2024-04-06 10:16:00,017:INFO:                pyod: 1.1.3
2024-04-06 10:16:00,017:INFO:            imblearn: 0.12.2
2024-04-06 10:16:00,017:INFO:   category_encoders: 2.6.3
2024-04-06 10:16:00,017:INFO:            lightgbm: 4.3.0
2024-04-06 10:16:00,017:INFO:               numba: 0.59.1
2024-04-06 10:16:00,017:INFO:            requests: 2.31.0
2024-04-06 10:16:00,017:INFO:          matplotlib: 3.7.5
2024-04-06 10:16:00,017:INFO:          scikitplot: 0.3.7
2024-04-06 10:16:00,017:INFO:         yellowbrick: 1.5
2024-04-06 10:16:00,017:INFO:              plotly: 5.20.0
2024-04-06 10:16:00,017:INFO:    plotly-resampler: Not installed
2024-04-06 10:16:00,017:INFO:             kaleido: 0.2.1
2024-04-06 10:16:00,017:INFO:           schemdraw: 0.15
2024-04-06 10:16:00,017:INFO:         statsmodels: 0.14.1
2024-04-06 10:16:00,017:INFO:              sktime: 0.28.0
2024-04-06 10:16:00,017:INFO:               tbats: 1.1.3
2024-04-06 10:16:00,017:INFO:            pmdarima: 2.0.4
2024-04-06 10:16:00,017:INFO:              psutil: 5.9.8
2024-04-06 10:16:00,017:INFO:          markupsafe: 2.1.5
2024-04-06 10:16:00,017:INFO:             pickle5: Not installed
2024-04-06 10:16:00,017:INFO:         cloudpickle: 3.0.0
2024-04-06 10:16:00,017:INFO:         deprecation: 2.1.0
2024-04-06 10:16:00,017:INFO:              xxhash: 3.4.1
2024-04-06 10:16:00,017:INFO:           wurlitzer: 3.0.3
2024-04-06 10:16:00,017:INFO:PyCaret optional dependencies:
2024-04-06 10:16:00,017:INFO:                shap: Not installed
2024-04-06 10:16:00,017:INFO:           interpret: Not installed
2024-04-06 10:16:00,017:INFO:                umap: Not installed
2024-04-06 10:16:00,017:INFO:     ydata_profiling: Not installed
2024-04-06 10:16:00,017:INFO:  explainerdashboard: Not installed
2024-04-06 10:16:00,017:INFO:             autoviz: Not installed
2024-04-06 10:16:00,017:INFO:           fairlearn: Not installed
2024-04-06 10:16:00,017:INFO:          deepchecks: Not installed
2024-04-06 10:16:00,017:INFO:             xgboost: Not installed
2024-04-06 10:16:00,017:INFO:            catboost: Not installed
2024-04-06 10:16:00,017:INFO:              kmodes: Not installed
2024-04-06 10:16:00,017:INFO:             mlxtend: Not installed
2024-04-06 10:16:00,017:INFO:       statsforecast: Not installed
2024-04-06 10:16:00,017:INFO:        tune_sklearn: Not installed
2024-04-06 10:16:00,017:INFO:                 ray: Not installed
2024-04-06 10:16:00,017:INFO:            hyperopt: Not installed
2024-04-06 10:16:00,017:INFO:              optuna: Not installed
2024-04-06 10:16:00,017:INFO:               skopt: Not installed
2024-04-06 10:16:00,017:INFO:              mlflow: 2.11.3
2024-04-06 10:16:00,017:INFO:              gradio: Not installed
2024-04-06 10:16:00,017:INFO:             fastapi: Not installed
2024-04-06 10:16:00,017:INFO:             uvicorn: Not installed
2024-04-06 10:16:00,017:INFO:              m2cgen: Not installed
2024-04-06 10:16:00,017:INFO:           evidently: Not installed
2024-04-06 10:16:00,017:INFO:               fugue: Not installed
2024-04-06 10:16:00,017:INFO:           streamlit: 1.33.0
2024-04-06 10:16:00,017:INFO:             prophet: 1.1.5
2024-04-06 10:16:00,017:INFO:None
2024-04-06 10:16:00,017:INFO:Set up data.
2024-04-06 10:16:00,020:INFO:Set up folding strategy.
2024-04-06 10:16:00,020:INFO:Set up train/test split.
2024-04-06 10:16:00,020:INFO:Set up data.
2024-04-06 10:16:00,022:INFO:Set up index.
2024-04-06 10:16:00,022:INFO:Assigning column types.
2024-04-06 10:16:00,024:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 10:16:00,042:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:16:00,043:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:16:00,054:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:16:00,054:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:16:00,072:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:16:00,073:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:16:00,084:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:16:00,084:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:16:00,085:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 10:16:00,103:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:16:00,114:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:16:00,114:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:16:00,132:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:16:00,143:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:16:00,143:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:16:00,144:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 10:16:00,173:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:16:00,173:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:16:00,201:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:16:00,201:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:16:00,202:INFO:Preparing preprocessing pipeline...
2024-04-06 10:16:00,203:INFO:Set up simple imputation.
2024-04-06 10:16:00,203:INFO:Set up feature normalization.
2024-04-06 10:16:00,214:INFO:Finished creating preprocessing pipeline.
2024-04-06 10:16:00,215:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 10:16:00,215:INFO:Creating final display dataframe.
2024-04-06 10:16:00,247:INFO:Setup _display_container:                     Description             Value
0                    Session id              6000
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              51f2
2024-04-06 10:16:00,279:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:16:00,279:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:16:00,309:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:16:00,309:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:16:00,309:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 10:16:00,309:INFO:setup() successfully completed in 0.3s...............
2024-04-06 10:16:00,310:INFO:Initializing compare_models()
2024-04-06 10:16:00,310:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177812c50>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x177812c50>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 10:16:00,310:INFO:Checking exceptions
2024-04-06 10:16:00,312:INFO:Preparing display monitor
2024-04-06 10:16:00,320:INFO:Initializing Logistic Regression
2024-04-06 10:16:00,321:INFO:Total runtime is 1.712640126546224e-06 minutes
2024-04-06 10:16:00,322:INFO:SubProcess create_model() called ==================================
2024-04-06 10:16:00,322:INFO:Initializing create_model()
2024-04-06 10:16:00,322:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177812c50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30dff0190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:16:00,322:INFO:Checking exceptions
2024-04-06 10:16:00,322:INFO:Importing libraries
2024-04-06 10:16:00,322:INFO:Copying training dataset
2024-04-06 10:16:00,326:INFO:Defining folds
2024-04-06 10:16:00,326:INFO:Declaring metric variables
2024-04-06 10:16:00,327:INFO:Importing untrained model
2024-04-06 10:16:00,329:INFO:Logistic Regression Imported successfully
2024-04-06 10:16:00,332:INFO:Starting cross validation
2024-04-06 10:16:00,332:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:16:00,482:INFO:Calculating mean and std
2024-04-06 10:16:00,482:INFO:Creating metrics dataframe
2024-04-06 10:16:00,483:INFO:Uploading results into container
2024-04-06 10:16:00,483:INFO:Uploading model into container now
2024-04-06 10:16:00,483:INFO:_master_model_container: 1
2024-04-06 10:16:00,483:INFO:_display_container: 2
2024-04-06 10:16:00,484:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6000, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:16:00,484:INFO:create_model() successfully completed......................................
2024-04-06 10:16:00,670:INFO:SubProcess create_model() end ==================================
2024-04-06 10:16:00,670:INFO:Creating metrics dataframe
2024-04-06 10:16:00,673:INFO:Initializing Decision Tree Classifier
2024-04-06 10:16:00,673:INFO:Total runtime is 0.005878547827402751 minutes
2024-04-06 10:16:00,674:INFO:SubProcess create_model() called ==================================
2024-04-06 10:16:00,675:INFO:Initializing create_model()
2024-04-06 10:16:00,675:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177812c50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30dff0190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:16:00,675:INFO:Checking exceptions
2024-04-06 10:16:00,675:INFO:Importing libraries
2024-04-06 10:16:00,675:INFO:Copying training dataset
2024-04-06 10:16:00,677:INFO:Defining folds
2024-04-06 10:16:00,677:INFO:Declaring metric variables
2024-04-06 10:16:00,678:INFO:Importing untrained model
2024-04-06 10:16:00,679:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:16:00,681:INFO:Starting cross validation
2024-04-06 10:16:00,682:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:16:00,781:INFO:Calculating mean and std
2024-04-06 10:16:00,782:INFO:Creating metrics dataframe
2024-04-06 10:16:00,782:INFO:Uploading results into container
2024-04-06 10:16:00,782:INFO:Uploading model into container now
2024-04-06 10:16:00,783:INFO:_master_model_container: 2
2024-04-06 10:16:00,783:INFO:_display_container: 2
2024-04-06 10:16:00,783:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6000, splitter='best')
2024-04-06 10:16:00,783:INFO:create_model() successfully completed......................................
2024-04-06 10:16:00,894:INFO:SubProcess create_model() end ==================================
2024-04-06 10:16:00,895:INFO:Creating metrics dataframe
2024-04-06 10:16:00,897:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 10:16:00,900:INFO:Initializing create_model()
2024-04-06 10:16:00,901:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177812c50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6000, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:16:00,901:INFO:Checking exceptions
2024-04-06 10:16:00,901:INFO:Importing libraries
2024-04-06 10:16:00,901:INFO:Copying training dataset
2024-04-06 10:16:00,904:INFO:Defining folds
2024-04-06 10:16:00,904:INFO:Declaring metric variables
2024-04-06 10:16:00,904:INFO:Importing untrained model
2024-04-06 10:16:00,904:INFO:Declaring custom model
2024-04-06 10:16:00,904:INFO:Logistic Regression Imported successfully
2024-04-06 10:16:00,904:INFO:Cross validation set to False
2024-04-06 10:16:00,904:INFO:Fitting Model
2024-04-06 10:16:00,910:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6000, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:16:00,910:INFO:create_model() successfully completed......................................
2024-04-06 10:16:01,130:INFO:Initializing create_model()
2024-04-06 10:16:01,131:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177812c50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6000, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:16:01,131:INFO:Checking exceptions
2024-04-06 10:16:01,133:INFO:Importing libraries
2024-04-06 10:16:01,133:INFO:Copying training dataset
2024-04-06 10:16:01,143:INFO:Defining folds
2024-04-06 10:16:01,143:INFO:Declaring metric variables
2024-04-06 10:16:01,143:INFO:Importing untrained model
2024-04-06 10:16:01,143:INFO:Declaring custom model
2024-04-06 10:16:01,143:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:16:01,143:INFO:Cross validation set to False
2024-04-06 10:16:01,143:INFO:Fitting Model
2024-04-06 10:16:01,178:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6000, splitter='best')
2024-04-06 10:16:01,178:INFO:create_model() successfully completed......................................
2024-04-06 10:16:01,309:INFO:_master_model_container: 2
2024-04-06 10:16:01,309:INFO:_display_container: 2
2024-04-06 10:16:01,309:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6000, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6000, splitter='best')]
2024-04-06 10:16:01,310:INFO:compare_models() successfully completed......................................
2024-04-06 10:16:01,310:INFO:Initializing predict_model()
2024-04-06 10:16:01,310:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177812c50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6000, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x177a57420>)
2024-04-06 10:16:01,310:INFO:Checking exceptions
2024-04-06 10:16:01,311:INFO:Preloading libraries
2024-04-06 10:16:02,063:INFO:Initializing predict_model()
2024-04-06 10:16:02,063:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177812c50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6000, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1684e6d40>)
2024-04-06 10:16:02,063:INFO:Checking exceptions
2024-04-06 10:16:02,063:INFO:Preloading libraries
2024-04-06 10:16:02,519:INFO:Initializing tune_model()
2024-04-06 10:16:02,519:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177812c50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6000, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-06 10:16:02,519:INFO:Checking exceptions
2024-04-06 10:16:02,525:INFO:Copying training dataset
2024-04-06 10:16:02,533:INFO:Checking base model
2024-04-06 10:16:02,533:INFO:Base model : Decision Tree Classifier
2024-04-06 10:16:02,535:INFO:Declaring metric variables
2024-04-06 10:16:02,537:INFO:Defining Hyperparameters
2024-04-06 10:16:02,662:INFO:Tuning with n_jobs=-1
2024-04-06 10:16:02,662:INFO:Initializing RandomizedSearchCV
2024-04-06 10:16:02,767:INFO:best_params: {'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0.005, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 3, 'actual_estimator__criterion': 'gini'}
2024-04-06 10:16:02,767:INFO:Hyperparameter search completed
2024-04-06 10:16:02,767:INFO:SubProcess create_model() called ==================================
2024-04-06 10:16:02,767:INFO:Initializing create_model()
2024-04-06 10:16:02,767:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177812c50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6000, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x176deb890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 9, 'min_samples_leaf': 6, 'min_impurity_decrease': 0.005, 'max_features': 1.0, 'max_depth': 3, 'criterion': 'gini'})
2024-04-06 10:16:02,767:INFO:Checking exceptions
2024-04-06 10:16:02,767:INFO:Importing libraries
2024-04-06 10:16:02,767:INFO:Copying training dataset
2024-04-06 10:16:02,769:INFO:Defining folds
2024-04-06 10:16:02,769:INFO:Declaring metric variables
2024-04-06 10:16:02,771:INFO:Importing untrained model
2024-04-06 10:16:02,771:INFO:Declaring custom model
2024-04-06 10:16:02,772:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:16:02,774:INFO:Starting cross validation
2024-04-06 10:16:02,775:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:16:02,828:INFO:Calculating mean and std
2024-04-06 10:16:02,828:INFO:Creating metrics dataframe
2024-04-06 10:16:02,829:INFO:Finalizing model
2024-04-06 10:16:02,836:INFO:Uploading results into container
2024-04-06 10:16:02,836:INFO:Uploading model into container now
2024-04-06 10:16:02,837:INFO:_master_model_container: 3
2024-04-06 10:16:02,837:INFO:_display_container: 5
2024-04-06 10:16:02,837:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=3, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.005, min_samples_leaf=6,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6000, splitter='best')
2024-04-06 10:16:02,837:INFO:create_model() successfully completed......................................
2024-04-06 10:16:02,974:INFO:SubProcess create_model() end ==================================
2024-04-06 10:16:02,974:INFO:choose_better activated
2024-04-06 10:16:02,975:INFO:SubProcess create_model() called ==================================
2024-04-06 10:16:02,975:INFO:Initializing create_model()
2024-04-06 10:16:02,976:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177812c50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6000, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:16:02,976:INFO:Checking exceptions
2024-04-06 10:16:02,976:INFO:Importing libraries
2024-04-06 10:16:02,976:INFO:Copying training dataset
2024-04-06 10:16:02,979:INFO:Defining folds
2024-04-06 10:16:02,979:INFO:Declaring metric variables
2024-04-06 10:16:02,979:INFO:Importing untrained model
2024-04-06 10:16:02,979:INFO:Declaring custom model
2024-04-06 10:16:02,979:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:16:02,979:INFO:Starting cross validation
2024-04-06 10:16:02,979:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:16:03,038:INFO:Calculating mean and std
2024-04-06 10:16:03,038:INFO:Creating metrics dataframe
2024-04-06 10:16:03,039:INFO:Finalizing model
2024-04-06 10:16:03,050:INFO:Uploading results into container
2024-04-06 10:16:03,050:INFO:Uploading model into container now
2024-04-06 10:16:03,050:INFO:_master_model_container: 4
2024-04-06 10:16:03,050:INFO:_display_container: 6
2024-04-06 10:16:03,051:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6000, splitter='best')
2024-04-06 10:16:03,051:INFO:create_model() successfully completed......................................
2024-04-06 10:16:03,187:INFO:SubProcess create_model() end ==================================
2024-04-06 10:16:03,187:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6000, splitter='best') result for F1 is 0.5105
2024-04-06 10:16:03,188:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=3, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.005, min_samples_leaf=6,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6000, splitter='best') result for F1 is 0.4639
2024-04-06 10:16:03,188:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6000, splitter='best') is best model
2024-04-06 10:16:03,188:INFO:choose_better completed
2024-04-06 10:16:03,188:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-06 10:16:03,192:INFO:_master_model_container: 4
2024-04-06 10:16:03,192:INFO:_display_container: 5
2024-04-06 10:16:03,192:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6000, splitter='best')
2024-04-06 10:16:03,192:INFO:tune_model() successfully completed......................................
2024-04-06 10:16:03,310:INFO:Initializing predict_model()
2024-04-06 10:16:03,310:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177812c50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6000, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x177a56020>)
2024-04-06 10:16:03,310:INFO:Checking exceptions
2024-04-06 10:16:03,310:INFO:Preloading libraries
2024-04-06 10:16:03,515:INFO:Initializing finalize_model()
2024-04-06 10:16:03,516:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177812c50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6000, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-06 10:16:03,516:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6000, splitter='best')
2024-04-06 10:16:03,518:INFO:Initializing create_model()
2024-04-06 10:16:03,518:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177812c50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6000, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:16:03,518:INFO:Checking exceptions
2024-04-06 10:16:03,518:INFO:Importing libraries
2024-04-06 10:16:03,518:INFO:Copying training dataset
2024-04-06 10:16:03,518:INFO:Defining folds
2024-04-06 10:16:03,518:INFO:Declaring metric variables
2024-04-06 10:16:03,518:INFO:Importing untrained model
2024-04-06 10:16:03,518:INFO:Declaring custom model
2024-04-06 10:16:03,519:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:16:03,519:INFO:Cross validation set to False
2024-04-06 10:16:03,519:INFO:Fitting Model
2024-04-06 10:16:03,571:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6000,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:16:03,571:INFO:create_model() successfully completed......................................
2024-04-06 10:16:03,684:INFO:_master_model_container: 4
2024-04-06 10:16:03,685:INFO:_display_container: 6
2024-04-06 10:16:03,686:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6000,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:16:03,686:INFO:finalize_model() successfully completed......................................
2024-04-06 10:16:03,800:INFO:Initializing save_model()
2024-04-06 10:16:03,800:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6000,
                                        splitter='best'))],
         verbose=False), model_name=./kobe, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-06 10:16:03,800:INFO:Adding model into prep_pipe
2024-04-06 10:16:03,800:WARNING:Only Model saved as it was a pipeline.
2024-04-06 10:16:03,803:INFO:./kobe.pkl saved in current working directory
2024-04-06 10:16:03,805:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6000,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:16:03,805:INFO:save_model() successfully completed......................................
2024-04-06 10:16:03,918:INFO:Initializing load_model()
2024-04-06 10:16:03,918:INFO:load_model(model_name=./kobe, platform=None, authentication=None, verbose=True)
2024-04-06 10:16:03,927:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-06 10:16:05,773:WARNING:/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/ipykernel_3194/1141803399.py:150: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-06 10:18:22,952:INFO:PyCaret ClassificationExperiment
2024-04-06 10:18:22,952:INFO:Logging name: clf-default-name
2024-04-06 10:18:22,952:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 10:18:22,952:INFO:version 3.3.0
2024-04-06 10:18:22,952:INFO:Initializing setup()
2024-04-06 10:18:22,952:INFO:self.USI: 962c
2024-04-06 10:18:22,952:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 10:18:22,952:INFO:Checking environment
2024-04-06 10:18:22,952:INFO:python_version: 3.11.3
2024-04-06 10:18:22,952:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 10:18:22,952:INFO:machine: arm64
2024-04-06 10:18:22,952:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:18:22,953:INFO:Memory: svmem(total=8589934592, available=1811185664, percent=78.9, used=2844819456, free=42106880, active=1780678656, inactive=1767194624, wired=1064140800)
2024-04-06 10:18:22,953:INFO:Physical Core: 8
2024-04-06 10:18:22,953:INFO:Logical Core: 8
2024-04-06 10:18:22,953:INFO:Checking libraries
2024-04-06 10:18:22,953:INFO:System:
2024-04-06 10:18:22,953:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 10:18:22,953:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 10:18:22,953:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:18:22,953:INFO:PyCaret required dependencies:
2024-04-06 10:18:22,953:INFO:                 pip: 24.0
2024-04-06 10:18:22,953:INFO:          setuptools: 65.5.0
2024-04-06 10:18:22,953:INFO:             pycaret: 3.3.0
2024-04-06 10:18:22,953:INFO:             IPython: 8.23.0
2024-04-06 10:18:22,953:INFO:          ipywidgets: 8.1.2
2024-04-06 10:18:22,953:INFO:                tqdm: 4.66.2
2024-04-06 10:18:22,953:INFO:               numpy: 1.26.4
2024-04-06 10:18:22,953:INFO:              pandas: 2.1.4
2024-04-06 10:18:22,953:INFO:              jinja2: 3.1.3
2024-04-06 10:18:22,953:INFO:               scipy: 1.11.4
2024-04-06 10:18:22,953:INFO:              joblib: 1.3.2
2024-04-06 10:18:22,953:INFO:             sklearn: 1.4.1.post1
2024-04-06 10:18:22,953:INFO:                pyod: 1.1.3
2024-04-06 10:18:22,953:INFO:            imblearn: 0.12.2
2024-04-06 10:18:22,953:INFO:   category_encoders: 2.6.3
2024-04-06 10:18:22,953:INFO:            lightgbm: 4.3.0
2024-04-06 10:18:22,953:INFO:               numba: 0.59.1
2024-04-06 10:18:22,953:INFO:            requests: 2.31.0
2024-04-06 10:18:22,953:INFO:          matplotlib: 3.7.5
2024-04-06 10:18:22,953:INFO:          scikitplot: 0.3.7
2024-04-06 10:18:22,953:INFO:         yellowbrick: 1.5
2024-04-06 10:18:22,953:INFO:              plotly: 5.20.0
2024-04-06 10:18:22,953:INFO:    plotly-resampler: Not installed
2024-04-06 10:18:22,953:INFO:             kaleido: 0.2.1
2024-04-06 10:18:22,953:INFO:           schemdraw: 0.15
2024-04-06 10:18:22,953:INFO:         statsmodels: 0.14.1
2024-04-06 10:18:22,953:INFO:              sktime: 0.28.0
2024-04-06 10:18:22,953:INFO:               tbats: 1.1.3
2024-04-06 10:18:22,953:INFO:            pmdarima: 2.0.4
2024-04-06 10:18:22,953:INFO:              psutil: 5.9.8
2024-04-06 10:18:22,953:INFO:          markupsafe: 2.1.5
2024-04-06 10:18:22,953:INFO:             pickle5: Not installed
2024-04-06 10:18:22,953:INFO:         cloudpickle: 3.0.0
2024-04-06 10:18:22,953:INFO:         deprecation: 2.1.0
2024-04-06 10:18:22,953:INFO:              xxhash: 3.4.1
2024-04-06 10:18:22,953:INFO:           wurlitzer: 3.0.3
2024-04-06 10:18:22,953:INFO:PyCaret optional dependencies:
2024-04-06 10:18:22,953:INFO:                shap: Not installed
2024-04-06 10:18:22,953:INFO:           interpret: Not installed
2024-04-06 10:18:22,953:INFO:                umap: Not installed
2024-04-06 10:18:22,953:INFO:     ydata_profiling: Not installed
2024-04-06 10:18:22,953:INFO:  explainerdashboard: Not installed
2024-04-06 10:18:22,953:INFO:             autoviz: Not installed
2024-04-06 10:18:22,953:INFO:           fairlearn: Not installed
2024-04-06 10:18:22,953:INFO:          deepchecks: Not installed
2024-04-06 10:18:22,953:INFO:             xgboost: Not installed
2024-04-06 10:18:22,953:INFO:            catboost: Not installed
2024-04-06 10:18:22,953:INFO:              kmodes: Not installed
2024-04-06 10:18:22,953:INFO:             mlxtend: Not installed
2024-04-06 10:18:22,953:INFO:       statsforecast: Not installed
2024-04-06 10:18:22,953:INFO:        tune_sklearn: Not installed
2024-04-06 10:18:22,953:INFO:                 ray: Not installed
2024-04-06 10:18:22,953:INFO:            hyperopt: Not installed
2024-04-06 10:18:22,953:INFO:              optuna: Not installed
2024-04-06 10:18:22,953:INFO:               skopt: Not installed
2024-04-06 10:18:22,953:INFO:              mlflow: 2.11.3
2024-04-06 10:18:22,953:INFO:              gradio: Not installed
2024-04-06 10:18:22,953:INFO:             fastapi: Not installed
2024-04-06 10:18:22,953:INFO:             uvicorn: Not installed
2024-04-06 10:18:22,953:INFO:              m2cgen: Not installed
2024-04-06 10:18:22,953:INFO:           evidently: Not installed
2024-04-06 10:18:22,953:INFO:               fugue: Not installed
2024-04-06 10:18:22,954:INFO:           streamlit: 1.33.0
2024-04-06 10:18:22,954:INFO:             prophet: 1.1.5
2024-04-06 10:18:22,954:INFO:None
2024-04-06 10:18:22,954:INFO:Set up data.
2024-04-06 10:18:22,957:INFO:Set up folding strategy.
2024-04-06 10:18:22,957:INFO:Set up train/test split.
2024-04-06 10:18:22,957:INFO:Set up data.
2024-04-06 10:18:22,959:INFO:Set up index.
2024-04-06 10:18:22,959:INFO:Assigning column types.
2024-04-06 10:18:22,962:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 10:18:22,981:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:18:22,982:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:18:22,993:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:18:22,993:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:18:23,011:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:18:23,011:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:18:23,022:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:18:23,023:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:18:23,023:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 10:18:23,041:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:18:23,052:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:18:23,052:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:18:23,070:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:18:23,081:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:18:23,081:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:18:23,081:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 10:18:23,112:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:18:23,112:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:18:23,142:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:18:23,142:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:18:23,142:INFO:Preparing preprocessing pipeline...
2024-04-06 10:18:23,143:INFO:Set up simple imputation.
2024-04-06 10:18:23,143:INFO:Set up feature normalization.
2024-04-06 10:18:23,153:INFO:Finished creating preprocessing pipeline.
2024-04-06 10:18:23,155:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 10:18:23,155:INFO:Creating final display dataframe.
2024-04-06 10:18:23,184:INFO:Setup _display_container:                     Description             Value
0                    Session id              4428
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              962c
2024-04-06 10:18:23,217:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:18:23,217:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:18:23,247:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:18:23,247:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:18:23,247:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 10:18:23,248:INFO:setup() successfully completed in 0.3s...............
2024-04-06 10:18:23,248:INFO:Initializing compare_models()
2024-04-06 10:18:23,248:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9dc190>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x30e9dc190>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 10:18:23,248:INFO:Checking exceptions
2024-04-06 10:18:23,251:INFO:Preparing display monitor
2024-04-06 10:18:23,259:INFO:Initializing Logistic Regression
2024-04-06 10:18:23,259:INFO:Total runtime is 2.566973368326823e-06 minutes
2024-04-06 10:18:23,261:INFO:SubProcess create_model() called ==================================
2024-04-06 10:18:23,261:INFO:Initializing create_model()
2024-04-06 10:18:23,261:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9dc190>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x176c36fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:18:23,261:INFO:Checking exceptions
2024-04-06 10:18:23,261:INFO:Importing libraries
2024-04-06 10:18:23,261:INFO:Copying training dataset
2024-04-06 10:18:23,265:INFO:Defining folds
2024-04-06 10:18:23,265:INFO:Declaring metric variables
2024-04-06 10:18:23,266:INFO:Importing untrained model
2024-04-06 10:18:23,268:INFO:Logistic Regression Imported successfully
2024-04-06 10:18:23,293:INFO:Starting cross validation
2024-04-06 10:18:23,294:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:18:23,445:INFO:Calculating mean and std
2024-04-06 10:18:23,445:INFO:Creating metrics dataframe
2024-04-06 10:18:23,446:INFO:Uploading results into container
2024-04-06 10:18:23,446:INFO:Uploading model into container now
2024-04-06 10:18:23,446:INFO:_master_model_container: 1
2024-04-06 10:18:23,446:INFO:_display_container: 2
2024-04-06 10:18:23,446:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4428, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:18:23,446:INFO:create_model() successfully completed......................................
2024-04-06 10:18:23,643:INFO:SubProcess create_model() end ==================================
2024-04-06 10:18:23,643:INFO:Creating metrics dataframe
2024-04-06 10:18:23,646:INFO:Initializing Decision Tree Classifier
2024-04-06 10:18:23,646:INFO:Total runtime is 0.006439816951751709 minutes
2024-04-06 10:18:23,647:INFO:SubProcess create_model() called ==================================
2024-04-06 10:18:23,647:INFO:Initializing create_model()
2024-04-06 10:18:23,647:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9dc190>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x176c36fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:18:23,647:INFO:Checking exceptions
2024-04-06 10:18:23,647:INFO:Importing libraries
2024-04-06 10:18:23,647:INFO:Copying training dataset
2024-04-06 10:18:23,650:INFO:Defining folds
2024-04-06 10:18:23,650:INFO:Declaring metric variables
2024-04-06 10:18:23,651:INFO:Importing untrained model
2024-04-06 10:18:23,652:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:18:23,655:INFO:Starting cross validation
2024-04-06 10:18:23,655:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:18:23,734:INFO:Calculating mean and std
2024-04-06 10:18:23,734:INFO:Creating metrics dataframe
2024-04-06 10:18:23,735:INFO:Uploading results into container
2024-04-06 10:18:23,735:INFO:Uploading model into container now
2024-04-06 10:18:23,735:INFO:_master_model_container: 2
2024-04-06 10:18:23,735:INFO:_display_container: 2
2024-04-06 10:18:23,735:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4428, splitter='best')
2024-04-06 10:18:23,735:INFO:create_model() successfully completed......................................
2024-04-06 10:18:23,855:INFO:SubProcess create_model() end ==================================
2024-04-06 10:18:23,855:INFO:Creating metrics dataframe
2024-04-06 10:18:23,858:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 10:18:23,861:INFO:Initializing create_model()
2024-04-06 10:18:23,861:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9dc190>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4428, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:18:23,861:INFO:Checking exceptions
2024-04-06 10:18:23,862:INFO:Importing libraries
2024-04-06 10:18:23,862:INFO:Copying training dataset
2024-04-06 10:18:23,864:INFO:Defining folds
2024-04-06 10:18:23,864:INFO:Declaring metric variables
2024-04-06 10:18:23,864:INFO:Importing untrained model
2024-04-06 10:18:23,864:INFO:Declaring custom model
2024-04-06 10:18:23,864:INFO:Logistic Regression Imported successfully
2024-04-06 10:18:23,865:INFO:Cross validation set to False
2024-04-06 10:18:23,865:INFO:Fitting Model
2024-04-06 10:18:23,880:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4428, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:18:23,880:INFO:create_model() successfully completed......................................
2024-04-06 10:18:24,066:INFO:Initializing create_model()
2024-04-06 10:18:24,066:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9dc190>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4428, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:18:24,066:INFO:Checking exceptions
2024-04-06 10:18:24,068:INFO:Importing libraries
2024-04-06 10:18:24,068:INFO:Copying training dataset
2024-04-06 10:18:24,077:INFO:Defining folds
2024-04-06 10:18:24,077:INFO:Declaring metric variables
2024-04-06 10:18:24,078:INFO:Importing untrained model
2024-04-06 10:18:24,078:INFO:Declaring custom model
2024-04-06 10:18:24,078:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:18:24,079:INFO:Cross validation set to False
2024-04-06 10:18:24,079:INFO:Fitting Model
2024-04-06 10:18:24,095:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4428, splitter='best')
2024-04-06 10:18:24,096:INFO:create_model() successfully completed......................................
2024-04-06 10:18:24,236:INFO:_master_model_container: 2
2024-04-06 10:18:24,236:INFO:_display_container: 2
2024-04-06 10:18:24,236:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4428, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4428, splitter='best')]
2024-04-06 10:18:24,236:INFO:compare_models() successfully completed......................................
2024-04-06 10:18:24,236:INFO:Initializing predict_model()
2024-04-06 10:18:24,236:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9dc190>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4428, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x173bfad40>)
2024-04-06 10:18:24,236:INFO:Checking exceptions
2024-04-06 10:18:24,236:INFO:Preloading libraries
2024-04-06 10:18:25,047:INFO:Initializing predict_model()
2024-04-06 10:18:25,047:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9dc190>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4428, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30fa3b100>)
2024-04-06 10:18:25,047:INFO:Checking exceptions
2024-04-06 10:18:25,047:INFO:Preloading libraries
2024-04-06 10:18:25,522:INFO:Initializing tune_model()
2024-04-06 10:18:25,522:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9dc190>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4428, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-06 10:18:25,522:INFO:Checking exceptions
2024-04-06 10:18:25,528:INFO:Copying training dataset
2024-04-06 10:18:25,533:INFO:Checking base model
2024-04-06 10:18:25,533:INFO:Base model : Decision Tree Classifier
2024-04-06 10:18:25,535:INFO:Declaring metric variables
2024-04-06 10:18:25,538:INFO:Defining Hyperparameters
2024-04-06 10:18:25,657:INFO:Tuning with n_jobs=-1
2024-04-06 10:18:25,657:INFO:Initializing RandomizedSearchCV
2024-04-06 10:18:25,755:INFO:best_params: {'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.4, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'entropy'}
2024-04-06 10:18:25,755:INFO:Hyperparameter search completed
2024-04-06 10:18:25,755:INFO:SubProcess create_model() called ==================================
2024-04-06 10:18:25,755:INFO:Initializing create_model()
2024-04-06 10:18:25,755:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9dc190>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4428, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30e9f7bd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 9, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.4, 'max_features': 'log2', 'max_depth': 10, 'criterion': 'entropy'})
2024-04-06 10:18:25,755:INFO:Checking exceptions
2024-04-06 10:18:25,755:INFO:Importing libraries
2024-04-06 10:18:25,755:INFO:Copying training dataset
2024-04-06 10:18:25,757:INFO:Defining folds
2024-04-06 10:18:25,757:INFO:Declaring metric variables
2024-04-06 10:18:25,759:INFO:Importing untrained model
2024-04-06 10:18:25,759:INFO:Declaring custom model
2024-04-06 10:18:25,761:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:18:25,763:INFO:Starting cross validation
2024-04-06 10:18:25,763:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:18:25,783:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-06 10:18:25,783:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-06 10:18:25,786:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-06 10:18:25,795:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-06 10:18:25,807:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-06 10:18:25,811:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-06 10:18:25,813:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-06 10:18:25,821:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-06 10:18:25,823:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-06 10:18:25,829:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-06 10:18:25,837:INFO:Calculating mean and std
2024-04-06 10:18:25,838:INFO:Creating metrics dataframe
2024-04-06 10:18:25,840:INFO:Finalizing model
2024-04-06 10:18:25,849:INFO:Uploading results into container
2024-04-06 10:18:25,850:INFO:Uploading model into container now
2024-04-06 10:18:25,851:INFO:_master_model_container: 3
2024-04-06 10:18:25,851:INFO:_display_container: 5
2024-04-06 10:18:25,851:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=10, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0.4, min_samples_leaf=5,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4428, splitter='best')
2024-04-06 10:18:25,852:INFO:create_model() successfully completed......................................
2024-04-06 10:18:25,970:INFO:SubProcess create_model() end ==================================
2024-04-06 10:18:25,970:INFO:choose_better activated
2024-04-06 10:18:25,971:INFO:SubProcess create_model() called ==================================
2024-04-06 10:18:25,971:INFO:Initializing create_model()
2024-04-06 10:18:25,971:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9dc190>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4428, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:18:25,971:INFO:Checking exceptions
2024-04-06 10:18:25,972:INFO:Importing libraries
2024-04-06 10:18:25,972:INFO:Copying training dataset
2024-04-06 10:18:25,974:INFO:Defining folds
2024-04-06 10:18:25,974:INFO:Declaring metric variables
2024-04-06 10:18:25,974:INFO:Importing untrained model
2024-04-06 10:18:25,974:INFO:Declaring custom model
2024-04-06 10:18:25,975:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:18:25,975:INFO:Starting cross validation
2024-04-06 10:18:25,975:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:18:26,041:INFO:Calculating mean and std
2024-04-06 10:18:26,041:INFO:Creating metrics dataframe
2024-04-06 10:18:26,042:INFO:Finalizing model
2024-04-06 10:18:26,055:INFO:Uploading results into container
2024-04-06 10:18:26,055:INFO:Uploading model into container now
2024-04-06 10:18:26,055:INFO:_master_model_container: 4
2024-04-06 10:18:26,055:INFO:_display_container: 6
2024-04-06 10:18:26,055:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4428, splitter='best')
2024-04-06 10:18:26,055:INFO:create_model() successfully completed......................................
2024-04-06 10:18:26,164:INFO:SubProcess create_model() end ==================================
2024-04-06 10:18:26,164:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4428, splitter='best') result for F1 is 0.5121
2024-04-06 10:18:26,165:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=10, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0.4, min_samples_leaf=5,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4428, splitter='best') result for F1 is 0.0
2024-04-06 10:18:26,165:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4428, splitter='best') is best model
2024-04-06 10:18:26,165:INFO:choose_better completed
2024-04-06 10:18:26,165:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-06 10:18:26,168:INFO:_master_model_container: 4
2024-04-06 10:18:26,169:INFO:_display_container: 5
2024-04-06 10:18:26,169:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4428, splitter='best')
2024-04-06 10:18:26,169:INFO:tune_model() successfully completed......................................
2024-04-06 10:18:26,282:INFO:Initializing predict_model()
2024-04-06 10:18:26,282:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9dc190>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4428, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1778fa8e0>)
2024-04-06 10:18:26,282:INFO:Checking exceptions
2024-04-06 10:18:26,282:INFO:Preloading libraries
2024-04-06 10:18:26,456:INFO:Initializing finalize_model()
2024-04-06 10:18:26,456:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9dc190>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4428, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-06 10:18:26,457:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4428, splitter='best')
2024-04-06 10:18:26,458:INFO:Initializing create_model()
2024-04-06 10:18:26,458:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9dc190>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4428, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:18:26,458:INFO:Checking exceptions
2024-04-06 10:18:26,459:INFO:Importing libraries
2024-04-06 10:18:26,459:INFO:Copying training dataset
2024-04-06 10:18:26,459:INFO:Defining folds
2024-04-06 10:18:26,459:INFO:Declaring metric variables
2024-04-06 10:18:26,459:INFO:Importing untrained model
2024-04-06 10:18:26,459:INFO:Declaring custom model
2024-04-06 10:18:26,459:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:18:26,459:INFO:Cross validation set to False
2024-04-06 10:18:26,459:INFO:Fitting Model
2024-04-06 10:18:26,511:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4428,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:18:26,511:INFO:create_model() successfully completed......................................
2024-04-06 10:18:26,619:INFO:_master_model_container: 4
2024-04-06 10:18:26,619:INFO:_display_container: 6
2024-04-06 10:18:26,620:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4428,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:18:26,621:INFO:finalize_model() successfully completed......................................
2024-04-06 10:18:26,731:INFO:Initializing save_model()
2024-04-06 10:18:26,731:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4428,
                                        splitter='best'))],
         verbose=False), model_name=./kobe, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-06 10:18:26,731:INFO:Adding model into prep_pipe
2024-04-06 10:18:26,732:WARNING:Only Model saved as it was a pipeline.
2024-04-06 10:18:26,734:INFO:./kobe.pkl saved in current working directory
2024-04-06 10:18:26,735:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4428,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:18:26,735:INFO:save_model() successfully completed......................................
2024-04-06 10:18:26,843:INFO:Initializing load_model()
2024-04-06 10:18:26,843:INFO:load_model(model_name=./kobe, platform=None, authentication=None, verbose=True)
2024-04-06 10:18:26,852:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-06 10:18:28,560:WARNING:/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/ipykernel_3194/2209919716.py:143: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-06 10:22:53,540:INFO:PyCaret ClassificationExperiment
2024-04-06 10:22:53,542:INFO:Logging name: clf-default-name
2024-04-06 10:22:53,542:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 10:22:53,542:INFO:version 3.3.0
2024-04-06 10:22:53,542:INFO:Initializing setup()
2024-04-06 10:22:53,542:INFO:self.USI: 0350
2024-04-06 10:22:53,542:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 10:22:53,542:INFO:Checking environment
2024-04-06 10:22:53,542:INFO:python_version: 3.11.3
2024-04-06 10:22:53,542:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 10:22:53,542:INFO:machine: arm64
2024-04-06 10:22:53,542:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:22:53,543:INFO:Memory: svmem(total=8589934592, available=1790902272, percent=79.2, used=2831384576, free=21102592, active=1785528320, inactive=1767948288, wired=1045856256)
2024-04-06 10:22:53,543:INFO:Physical Core: 8
2024-04-06 10:22:53,543:INFO:Logical Core: 8
2024-04-06 10:22:53,543:INFO:Checking libraries
2024-04-06 10:22:53,543:INFO:System:
2024-04-06 10:22:53,543:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 10:22:53,543:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 10:22:53,543:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:22:53,543:INFO:PyCaret required dependencies:
2024-04-06 10:22:53,543:INFO:                 pip: 24.0
2024-04-06 10:22:53,543:INFO:          setuptools: 65.5.0
2024-04-06 10:22:53,543:INFO:             pycaret: 3.3.0
2024-04-06 10:22:53,543:INFO:             IPython: 8.23.0
2024-04-06 10:22:53,543:INFO:          ipywidgets: 8.1.2
2024-04-06 10:22:53,543:INFO:                tqdm: 4.66.2
2024-04-06 10:22:53,543:INFO:               numpy: 1.26.4
2024-04-06 10:22:53,543:INFO:              pandas: 2.1.4
2024-04-06 10:22:53,543:INFO:              jinja2: 3.1.3
2024-04-06 10:22:53,543:INFO:               scipy: 1.11.4
2024-04-06 10:22:53,543:INFO:              joblib: 1.3.2
2024-04-06 10:22:53,543:INFO:             sklearn: 1.4.1.post1
2024-04-06 10:22:53,543:INFO:                pyod: 1.1.3
2024-04-06 10:22:53,543:INFO:            imblearn: 0.12.2
2024-04-06 10:22:53,543:INFO:   category_encoders: 2.6.3
2024-04-06 10:22:53,543:INFO:            lightgbm: 4.3.0
2024-04-06 10:22:53,543:INFO:               numba: 0.59.1
2024-04-06 10:22:53,543:INFO:            requests: 2.31.0
2024-04-06 10:22:53,543:INFO:          matplotlib: 3.7.5
2024-04-06 10:22:53,543:INFO:          scikitplot: 0.3.7
2024-04-06 10:22:53,543:INFO:         yellowbrick: 1.5
2024-04-06 10:22:53,543:INFO:              plotly: 5.20.0
2024-04-06 10:22:53,543:INFO:    plotly-resampler: Not installed
2024-04-06 10:22:53,543:INFO:             kaleido: 0.2.1
2024-04-06 10:22:53,543:INFO:           schemdraw: 0.15
2024-04-06 10:22:53,543:INFO:         statsmodels: 0.14.1
2024-04-06 10:22:53,544:INFO:              sktime: 0.28.0
2024-04-06 10:22:53,544:INFO:               tbats: 1.1.3
2024-04-06 10:22:53,544:INFO:            pmdarima: 2.0.4
2024-04-06 10:22:53,544:INFO:              psutil: 5.9.8
2024-04-06 10:22:53,544:INFO:          markupsafe: 2.1.5
2024-04-06 10:22:53,544:INFO:             pickle5: Not installed
2024-04-06 10:22:53,544:INFO:         cloudpickle: 3.0.0
2024-04-06 10:22:53,544:INFO:         deprecation: 2.1.0
2024-04-06 10:22:53,544:INFO:              xxhash: 3.4.1
2024-04-06 10:22:53,544:INFO:           wurlitzer: 3.0.3
2024-04-06 10:22:53,544:INFO:PyCaret optional dependencies:
2024-04-06 10:22:53,544:INFO:                shap: Not installed
2024-04-06 10:22:53,544:INFO:           interpret: Not installed
2024-04-06 10:22:53,544:INFO:                umap: Not installed
2024-04-06 10:22:53,544:INFO:     ydata_profiling: Not installed
2024-04-06 10:22:53,544:INFO:  explainerdashboard: Not installed
2024-04-06 10:22:53,544:INFO:             autoviz: Not installed
2024-04-06 10:22:53,544:INFO:           fairlearn: Not installed
2024-04-06 10:22:53,544:INFO:          deepchecks: Not installed
2024-04-06 10:22:53,544:INFO:             xgboost: Not installed
2024-04-06 10:22:53,544:INFO:            catboost: Not installed
2024-04-06 10:22:53,544:INFO:              kmodes: Not installed
2024-04-06 10:22:53,544:INFO:             mlxtend: Not installed
2024-04-06 10:22:53,544:INFO:       statsforecast: Not installed
2024-04-06 10:22:53,544:INFO:        tune_sklearn: Not installed
2024-04-06 10:22:53,544:INFO:                 ray: Not installed
2024-04-06 10:22:53,544:INFO:            hyperopt: Not installed
2024-04-06 10:22:53,544:INFO:              optuna: Not installed
2024-04-06 10:22:53,544:INFO:               skopt: Not installed
2024-04-06 10:22:53,544:INFO:              mlflow: 2.11.3
2024-04-06 10:22:53,544:INFO:              gradio: Not installed
2024-04-06 10:22:53,544:INFO:             fastapi: Not installed
2024-04-06 10:22:53,544:INFO:             uvicorn: Not installed
2024-04-06 10:22:53,544:INFO:              m2cgen: Not installed
2024-04-06 10:22:53,544:INFO:           evidently: Not installed
2024-04-06 10:22:53,544:INFO:               fugue: Not installed
2024-04-06 10:22:53,544:INFO:           streamlit: 1.33.0
2024-04-06 10:22:53,544:INFO:             prophet: 1.1.5
2024-04-06 10:22:53,544:INFO:None
2024-04-06 10:22:53,544:INFO:Set up data.
2024-04-06 10:22:53,555:INFO:Set up folding strategy.
2024-04-06 10:22:53,555:INFO:Set up train/test split.
2024-04-06 10:22:53,555:INFO:Set up data.
2024-04-06 10:22:53,558:INFO:Set up index.
2024-04-06 10:22:53,558:INFO:Assigning column types.
2024-04-06 10:22:53,561:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 10:22:53,580:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:22:53,581:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:22:53,593:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:22:53,593:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:22:53,612:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:22:53,612:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:22:53,624:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:22:53,624:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:22:53,624:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 10:22:53,643:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:22:53,654:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:22:53,655:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:22:53,674:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:22:53,686:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:22:53,686:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:22:53,686:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 10:22:53,715:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:22:53,715:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:22:53,744:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:22:53,744:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:22:53,745:INFO:Preparing preprocessing pipeline...
2024-04-06 10:22:53,745:INFO:Set up simple imputation.
2024-04-06 10:22:53,745:INFO:Set up feature normalization.
2024-04-06 10:22:53,756:INFO:Finished creating preprocessing pipeline.
2024-04-06 10:22:53,757:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 10:22:53,757:INFO:Creating final display dataframe.
2024-04-06 10:22:53,787:INFO:Setup _display_container:                     Description             Value
0                    Session id              3702
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              0350
2024-04-06 10:22:53,820:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:22:53,820:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:22:53,850:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:22:53,850:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:22:53,850:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 10:22:53,851:INFO:setup() successfully completed in 0.32s...............
2024-04-06 10:22:53,851:INFO:Initializing compare_models()
2024-04-06 10:22:53,851:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x176d1e150>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x176d1e150>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 10:22:53,851:INFO:Checking exceptions
2024-04-06 10:22:53,853:INFO:Preparing display monitor
2024-04-06 10:22:53,862:INFO:Initializing Logistic Regression
2024-04-06 10:22:53,862:INFO:Total runtime is 1.71661376953125e-06 minutes
2024-04-06 10:22:53,864:INFO:SubProcess create_model() called ==================================
2024-04-06 10:22:53,865:INFO:Initializing create_model()
2024-04-06 10:22:53,865:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x176d1e150>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x176da9a50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:22:53,865:INFO:Checking exceptions
2024-04-06 10:22:53,865:INFO:Importing libraries
2024-04-06 10:22:53,865:INFO:Copying training dataset
2024-04-06 10:22:53,868:INFO:Defining folds
2024-04-06 10:22:53,868:INFO:Declaring metric variables
2024-04-06 10:22:53,869:INFO:Importing untrained model
2024-04-06 10:22:53,871:INFO:Logistic Regression Imported successfully
2024-04-06 10:22:53,873:INFO:Starting cross validation
2024-04-06 10:22:53,874:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:22:54,054:INFO:Calculating mean and std
2024-04-06 10:22:54,054:INFO:Creating metrics dataframe
2024-04-06 10:22:54,055:INFO:Uploading results into container
2024-04-06 10:22:54,055:INFO:Uploading model into container now
2024-04-06 10:22:54,055:INFO:_master_model_container: 1
2024-04-06 10:22:54,055:INFO:_display_container: 2
2024-04-06 10:22:54,055:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3702, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:22:54,055:INFO:create_model() successfully completed......................................
2024-04-06 10:22:54,258:INFO:SubProcess create_model() end ==================================
2024-04-06 10:22:54,258:INFO:Creating metrics dataframe
2024-04-06 10:22:54,261:INFO:Initializing Decision Tree Classifier
2024-04-06 10:22:54,261:INFO:Total runtime is 0.006639631589253744 minutes
2024-04-06 10:22:54,262:INFO:SubProcess create_model() called ==================================
2024-04-06 10:22:54,262:INFO:Initializing create_model()
2024-04-06 10:22:54,262:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x176d1e150>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x176da9a50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:22:54,262:INFO:Checking exceptions
2024-04-06 10:22:54,262:INFO:Importing libraries
2024-04-06 10:22:54,262:INFO:Copying training dataset
2024-04-06 10:22:54,264:INFO:Defining folds
2024-04-06 10:22:54,264:INFO:Declaring metric variables
2024-04-06 10:22:54,266:INFO:Importing untrained model
2024-04-06 10:22:54,267:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:22:54,269:INFO:Starting cross validation
2024-04-06 10:22:54,269:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:22:54,364:INFO:Calculating mean and std
2024-04-06 10:22:54,364:INFO:Creating metrics dataframe
2024-04-06 10:22:54,365:INFO:Uploading results into container
2024-04-06 10:22:54,365:INFO:Uploading model into container now
2024-04-06 10:22:54,365:INFO:_master_model_container: 2
2024-04-06 10:22:54,365:INFO:_display_container: 2
2024-04-06 10:22:54,366:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3702, splitter='best')
2024-04-06 10:22:54,366:INFO:create_model() successfully completed......................................
2024-04-06 10:22:54,480:INFO:SubProcess create_model() end ==================================
2024-04-06 10:22:54,481:INFO:Creating metrics dataframe
2024-04-06 10:22:54,483:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 10:22:54,486:INFO:Initializing create_model()
2024-04-06 10:22:54,487:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x176d1e150>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3702, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:22:54,487:INFO:Checking exceptions
2024-04-06 10:22:54,487:INFO:Importing libraries
2024-04-06 10:22:54,487:INFO:Copying training dataset
2024-04-06 10:22:54,490:INFO:Defining folds
2024-04-06 10:22:54,490:INFO:Declaring metric variables
2024-04-06 10:22:54,490:INFO:Importing untrained model
2024-04-06 10:22:54,490:INFO:Declaring custom model
2024-04-06 10:22:54,490:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:22:54,490:INFO:Cross validation set to False
2024-04-06 10:22:54,490:INFO:Fitting Model
2024-04-06 10:22:54,504:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3702, splitter='best')
2024-04-06 10:22:54,504:INFO:create_model() successfully completed......................................
2024-04-06 10:22:54,642:INFO:Initializing create_model()
2024-04-06 10:22:54,642:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x176d1e150>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3702, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:22:54,642:INFO:Checking exceptions
2024-04-06 10:22:54,643:INFO:Importing libraries
2024-04-06 10:22:54,643:INFO:Copying training dataset
2024-04-06 10:22:54,645:INFO:Defining folds
2024-04-06 10:22:54,645:INFO:Declaring metric variables
2024-04-06 10:22:54,645:INFO:Importing untrained model
2024-04-06 10:22:54,645:INFO:Declaring custom model
2024-04-06 10:22:54,645:INFO:Logistic Regression Imported successfully
2024-04-06 10:22:54,645:INFO:Cross validation set to False
2024-04-06 10:22:54,645:INFO:Fitting Model
2024-04-06 10:22:54,655:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3702, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:22:54,655:INFO:create_model() successfully completed......................................
2024-04-06 10:22:54,925:INFO:_master_model_container: 2
2024-04-06 10:22:54,926:INFO:_display_container: 2
2024-04-06 10:22:54,926:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3702, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3702, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-06 10:22:54,926:INFO:compare_models() successfully completed......................................
2024-04-06 10:22:54,926:INFO:Initializing predict_model()
2024-04-06 10:22:54,926:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x176d1e150>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3702, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x176c276a0>)
2024-04-06 10:22:54,926:INFO:Checking exceptions
2024-04-06 10:22:54,926:INFO:Preloading libraries
2024-04-06 10:24:58,443:INFO:PyCaret ClassificationExperiment
2024-04-06 10:24:58,444:INFO:Logging name: clf-default-name
2024-04-06 10:24:58,444:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 10:24:58,444:INFO:version 3.3.0
2024-04-06 10:24:58,444:INFO:Initializing setup()
2024-04-06 10:24:58,444:INFO:self.USI: f2f1
2024-04-06 10:24:58,444:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 10:24:58,444:INFO:Checking environment
2024-04-06 10:24:58,444:INFO:python_version: 3.11.3
2024-04-06 10:24:58,444:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 10:24:58,444:INFO:machine: arm64
2024-04-06 10:24:58,444:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:24:58,444:INFO:Memory: svmem(total=8589934592, available=2469232640, percent=71.3, used=3416719360, free=83017728, active=2389737472, inactive=2374189056, wired=1026981888)
2024-04-06 10:24:58,444:INFO:Physical Core: 8
2024-04-06 10:24:58,444:INFO:Logical Core: 8
2024-04-06 10:24:58,444:INFO:Checking libraries
2024-04-06 10:24:58,444:INFO:System:
2024-04-06 10:24:58,444:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 10:24:58,444:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 10:24:58,444:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:24:58,444:INFO:PyCaret required dependencies:
2024-04-06 10:24:58,444:INFO:                 pip: 24.0
2024-04-06 10:24:58,444:INFO:          setuptools: 65.5.0
2024-04-06 10:24:58,444:INFO:             pycaret: 3.3.0
2024-04-06 10:24:58,444:INFO:             IPython: 8.23.0
2024-04-06 10:24:58,444:INFO:          ipywidgets: 8.1.2
2024-04-06 10:24:58,444:INFO:                tqdm: 4.66.2
2024-04-06 10:24:58,444:INFO:               numpy: 1.26.4
2024-04-06 10:24:58,444:INFO:              pandas: 2.1.4
2024-04-06 10:24:58,444:INFO:              jinja2: 3.1.3
2024-04-06 10:24:58,444:INFO:               scipy: 1.11.4
2024-04-06 10:24:58,444:INFO:              joblib: 1.3.2
2024-04-06 10:24:58,444:INFO:             sklearn: 1.4.1.post1
2024-04-06 10:24:58,444:INFO:                pyod: 1.1.3
2024-04-06 10:24:58,444:INFO:            imblearn: 0.12.2
2024-04-06 10:24:58,444:INFO:   category_encoders: 2.6.3
2024-04-06 10:24:58,444:INFO:            lightgbm: 4.3.0
2024-04-06 10:24:58,444:INFO:               numba: 0.59.1
2024-04-06 10:24:58,444:INFO:            requests: 2.31.0
2024-04-06 10:24:58,444:INFO:          matplotlib: 3.7.5
2024-04-06 10:24:58,444:INFO:          scikitplot: 0.3.7
2024-04-06 10:24:58,444:INFO:         yellowbrick: 1.5
2024-04-06 10:24:58,444:INFO:              plotly: 5.20.0
2024-04-06 10:24:58,444:INFO:    plotly-resampler: Not installed
2024-04-06 10:24:58,444:INFO:             kaleido: 0.2.1
2024-04-06 10:24:58,444:INFO:           schemdraw: 0.15
2024-04-06 10:24:58,444:INFO:         statsmodels: 0.14.1
2024-04-06 10:24:58,444:INFO:              sktime: 0.28.0
2024-04-06 10:24:58,444:INFO:               tbats: 1.1.3
2024-04-06 10:24:58,444:INFO:            pmdarima: 2.0.4
2024-04-06 10:24:58,444:INFO:              psutil: 5.9.8
2024-04-06 10:24:58,444:INFO:          markupsafe: 2.1.5
2024-04-06 10:24:58,444:INFO:             pickle5: Not installed
2024-04-06 10:24:58,444:INFO:         cloudpickle: 3.0.0
2024-04-06 10:24:58,444:INFO:         deprecation: 2.1.0
2024-04-06 10:24:58,444:INFO:              xxhash: 3.4.1
2024-04-06 10:24:58,444:INFO:           wurlitzer: 3.0.3
2024-04-06 10:24:58,444:INFO:PyCaret optional dependencies:
2024-04-06 10:24:58,445:INFO:                shap: Not installed
2024-04-06 10:24:58,445:INFO:           interpret: Not installed
2024-04-06 10:24:58,445:INFO:                umap: Not installed
2024-04-06 10:24:58,445:INFO:     ydata_profiling: Not installed
2024-04-06 10:24:58,445:INFO:  explainerdashboard: Not installed
2024-04-06 10:24:58,445:INFO:             autoviz: Not installed
2024-04-06 10:24:58,445:INFO:           fairlearn: Not installed
2024-04-06 10:24:58,445:INFO:          deepchecks: Not installed
2024-04-06 10:24:58,445:INFO:             xgboost: Not installed
2024-04-06 10:24:58,445:INFO:            catboost: Not installed
2024-04-06 10:24:58,445:INFO:              kmodes: Not installed
2024-04-06 10:24:58,445:INFO:             mlxtend: Not installed
2024-04-06 10:24:58,445:INFO:       statsforecast: Not installed
2024-04-06 10:24:58,445:INFO:        tune_sklearn: Not installed
2024-04-06 10:24:58,445:INFO:                 ray: Not installed
2024-04-06 10:24:58,445:INFO:            hyperopt: Not installed
2024-04-06 10:24:58,445:INFO:              optuna: Not installed
2024-04-06 10:24:58,445:INFO:               skopt: Not installed
2024-04-06 10:24:58,445:INFO:              mlflow: 2.11.3
2024-04-06 10:24:58,445:INFO:              gradio: Not installed
2024-04-06 10:24:58,445:INFO:             fastapi: Not installed
2024-04-06 10:24:58,445:INFO:             uvicorn: Not installed
2024-04-06 10:24:58,445:INFO:              m2cgen: Not installed
2024-04-06 10:24:58,445:INFO:           evidently: Not installed
2024-04-06 10:24:58,445:INFO:               fugue: Not installed
2024-04-06 10:24:58,445:INFO:           streamlit: 1.33.0
2024-04-06 10:24:58,445:INFO:             prophet: 1.1.5
2024-04-06 10:24:58,445:INFO:None
2024-04-06 10:24:58,445:INFO:Set up data.
2024-04-06 10:24:58,447:INFO:Set up folding strategy.
2024-04-06 10:24:58,447:INFO:Set up train/test split.
2024-04-06 10:24:58,447:INFO:Set up data.
2024-04-06 10:24:58,450:INFO:Set up index.
2024-04-06 10:24:58,450:INFO:Assigning column types.
2024-04-06 10:24:58,452:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 10:24:58,473:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:24:58,474:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:24:58,485:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:24:58,485:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:24:58,504:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:24:58,504:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:24:58,516:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:24:58,516:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:24:58,516:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 10:24:58,534:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:24:58,545:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:24:58,545:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:24:58,563:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:24:58,574:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:24:58,574:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:24:58,574:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 10:24:58,602:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:24:58,602:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:24:58,631:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:24:58,631:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:24:58,631:INFO:Preparing preprocessing pipeline...
2024-04-06 10:24:58,632:INFO:Set up simple imputation.
2024-04-06 10:24:58,632:INFO:Set up feature normalization.
2024-04-06 10:24:58,642:INFO:Finished creating preprocessing pipeline.
2024-04-06 10:24:58,643:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 10:24:58,643:INFO:Creating final display dataframe.
2024-04-06 10:24:58,674:INFO:Setup _display_container:                     Description             Value
0                    Session id              5574
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              f2f1
2024-04-06 10:24:58,705:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:24:58,705:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:24:58,734:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:24:58,735:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:24:58,735:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 10:24:58,735:INFO:setup() successfully completed in 0.29s...............
2024-04-06 10:24:58,735:INFO:Initializing compare_models()
2024-04-06 10:24:58,736:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9a8c10>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x30e9a8c10>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 10:24:58,736:INFO:Checking exceptions
2024-04-06 10:24:58,737:INFO:Preparing display monitor
2024-04-06 10:24:58,744:INFO:Initializing Logistic Regression
2024-04-06 10:24:58,744:INFO:Total runtime is 1.3987223307291666e-06 minutes
2024-04-06 10:24:58,746:INFO:SubProcess create_model() called ==================================
2024-04-06 10:24:58,746:INFO:Initializing create_model()
2024-04-06 10:24:58,746:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9a8c10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x177e7dcd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:24:58,746:INFO:Checking exceptions
2024-04-06 10:24:58,746:INFO:Importing libraries
2024-04-06 10:24:58,746:INFO:Copying training dataset
2024-04-06 10:24:58,749:INFO:Defining folds
2024-04-06 10:24:58,749:INFO:Declaring metric variables
2024-04-06 10:24:58,750:INFO:Importing untrained model
2024-04-06 10:24:58,752:INFO:Logistic Regression Imported successfully
2024-04-06 10:24:58,754:INFO:Starting cross validation
2024-04-06 10:24:58,755:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:25:00,831:INFO:Calculating mean and std
2024-04-06 10:25:00,835:INFO:Creating metrics dataframe
2024-04-06 10:25:00,840:INFO:Uploading results into container
2024-04-06 10:25:00,840:INFO:Uploading model into container now
2024-04-06 10:25:00,841:INFO:_master_model_container: 1
2024-04-06 10:25:00,841:INFO:_display_container: 2
2024-04-06 10:25:00,842:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5574, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:25:00,842:INFO:create_model() successfully completed......................................
2024-04-06 10:25:01,062:INFO:SubProcess create_model() end ==================================
2024-04-06 10:25:01,062:INFO:Creating metrics dataframe
2024-04-06 10:25:01,066:INFO:Initializing Decision Tree Classifier
2024-04-06 10:25:01,066:INFO:Total runtime is 0.03868971665700277 minutes
2024-04-06 10:25:01,067:INFO:SubProcess create_model() called ==================================
2024-04-06 10:25:01,067:INFO:Initializing create_model()
2024-04-06 10:25:01,067:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9a8c10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x177e7dcd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:25:01,067:INFO:Checking exceptions
2024-04-06 10:25:01,068:INFO:Importing libraries
2024-04-06 10:25:01,068:INFO:Copying training dataset
2024-04-06 10:25:01,070:INFO:Defining folds
2024-04-06 10:25:01,071:INFO:Declaring metric variables
2024-04-06 10:25:01,072:INFO:Importing untrained model
2024-04-06 10:25:01,073:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:25:01,076:INFO:Starting cross validation
2024-04-06 10:25:01,076:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:25:01,156:INFO:Calculating mean and std
2024-04-06 10:25:01,156:INFO:Creating metrics dataframe
2024-04-06 10:25:01,157:INFO:Uploading results into container
2024-04-06 10:25:01,157:INFO:Uploading model into container now
2024-04-06 10:25:01,157:INFO:_master_model_container: 2
2024-04-06 10:25:01,157:INFO:_display_container: 2
2024-04-06 10:25:01,158:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5574, splitter='best')
2024-04-06 10:25:01,158:INFO:create_model() successfully completed......................................
2024-04-06 10:25:01,267:INFO:SubProcess create_model() end ==================================
2024-04-06 10:25:01,268:INFO:Creating metrics dataframe
2024-04-06 10:25:01,270:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 10:25:01,273:INFO:Initializing create_model()
2024-04-06 10:25:01,273:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9a8c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5574, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:25:01,273:INFO:Checking exceptions
2024-04-06 10:25:01,274:INFO:Importing libraries
2024-04-06 10:25:01,275:INFO:Copying training dataset
2024-04-06 10:25:01,277:INFO:Defining folds
2024-04-06 10:25:01,277:INFO:Declaring metric variables
2024-04-06 10:25:01,277:INFO:Importing untrained model
2024-04-06 10:25:01,277:INFO:Declaring custom model
2024-04-06 10:25:01,277:INFO:Logistic Regression Imported successfully
2024-04-06 10:25:01,278:INFO:Cross validation set to False
2024-04-06 10:25:01,278:INFO:Fitting Model
2024-04-06 10:25:01,287:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5574, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:25:01,287:INFO:create_model() successfully completed......................................
2024-04-06 10:25:01,457:INFO:Initializing create_model()
2024-04-06 10:25:01,457:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9a8c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5574, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:25:01,457:INFO:Checking exceptions
2024-04-06 10:25:01,459:INFO:Importing libraries
2024-04-06 10:25:01,459:INFO:Copying training dataset
2024-04-06 10:25:01,466:INFO:Defining folds
2024-04-06 10:25:01,466:INFO:Declaring metric variables
2024-04-06 10:25:01,466:INFO:Importing untrained model
2024-04-06 10:25:01,466:INFO:Declaring custom model
2024-04-06 10:25:01,467:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:25:01,468:INFO:Cross validation set to False
2024-04-06 10:25:01,468:INFO:Fitting Model
2024-04-06 10:25:01,494:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5574, splitter='best')
2024-04-06 10:25:01,494:INFO:create_model() successfully completed......................................
2024-04-06 10:25:01,627:INFO:_master_model_container: 2
2024-04-06 10:25:01,627:INFO:_display_container: 2
2024-04-06 10:25:01,627:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5574, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5574, splitter='best')]
2024-04-06 10:25:01,627:INFO:compare_models() successfully completed......................................
2024-04-06 10:25:01,627:INFO:Initializing predict_model()
2024-04-06 10:25:01,627:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9a8c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5574, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x177a56020>)
2024-04-06 10:25:01,628:INFO:Checking exceptions
2024-04-06 10:25:01,628:INFO:Preloading libraries
2024-04-06 10:25:02,289:INFO:Initializing predict_model()
2024-04-06 10:25:02,289:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9a8c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5574, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x177879080>)
2024-04-06 10:25:02,289:INFO:Checking exceptions
2024-04-06 10:25:02,289:INFO:Preloading libraries
2024-04-06 10:25:02,678:INFO:Initializing tune_model()
2024-04-06 10:25:02,678:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9a8c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5574, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-06 10:25:02,678:INFO:Checking exceptions
2024-04-06 10:25:02,688:INFO:Copying training dataset
2024-04-06 10:25:02,692:INFO:Checking base model
2024-04-06 10:25:02,692:INFO:Base model : Decision Tree Classifier
2024-04-06 10:25:02,696:INFO:Declaring metric variables
2024-04-06 10:25:02,698:INFO:Defining Hyperparameters
2024-04-06 10:25:02,820:INFO:Tuning with n_jobs=-1
2024-04-06 10:25:02,820:INFO:Initializing RandomizedSearchCV
2024-04-06 10:25:02,948:INFO:best_params: {'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.0005, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 6, 'actual_estimator__criterion': 'entropy'}
2024-04-06 10:25:02,948:INFO:Hyperparameter search completed
2024-04-06 10:25:02,948:INFO:SubProcess create_model() called ==================================
2024-04-06 10:25:02,948:INFO:Initializing create_model()
2024-04-06 10:25:02,948:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9a8c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5574, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30cd70f10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 9, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.0005, 'max_features': 1.0, 'max_depth': 6, 'criterion': 'entropy'})
2024-04-06 10:25:02,948:INFO:Checking exceptions
2024-04-06 10:25:02,948:INFO:Importing libraries
2024-04-06 10:25:02,948:INFO:Copying training dataset
2024-04-06 10:25:02,950:INFO:Defining folds
2024-04-06 10:25:02,950:INFO:Declaring metric variables
2024-04-06 10:25:02,951:INFO:Importing untrained model
2024-04-06 10:25:02,951:INFO:Declaring custom model
2024-04-06 10:25:02,953:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:25:02,955:INFO:Starting cross validation
2024-04-06 10:25:02,955:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:25:03,020:INFO:Calculating mean and std
2024-04-06 10:25:03,021:INFO:Creating metrics dataframe
2024-04-06 10:25:03,023:INFO:Finalizing model
2024-04-06 10:25:03,033:INFO:Uploading results into container
2024-04-06 10:25:03,033:INFO:Uploading model into container now
2024-04-06 10:25:03,034:INFO:_master_model_container: 3
2024-04-06 10:25:03,034:INFO:_display_container: 5
2024-04-06 10:25:03,034:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=6, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.0005, min_samples_leaf=5,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5574, splitter='best')
2024-04-06 10:25:03,034:INFO:create_model() successfully completed......................................
2024-04-06 10:25:03,147:INFO:SubProcess create_model() end ==================================
2024-04-06 10:25:03,147:INFO:choose_better activated
2024-04-06 10:25:03,149:INFO:SubProcess create_model() called ==================================
2024-04-06 10:25:03,149:INFO:Initializing create_model()
2024-04-06 10:25:03,149:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9a8c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5574, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:25:03,149:INFO:Checking exceptions
2024-04-06 10:25:03,150:INFO:Importing libraries
2024-04-06 10:25:03,150:INFO:Copying training dataset
2024-04-06 10:25:03,152:INFO:Defining folds
2024-04-06 10:25:03,152:INFO:Declaring metric variables
2024-04-06 10:25:03,152:INFO:Importing untrained model
2024-04-06 10:25:03,152:INFO:Declaring custom model
2024-04-06 10:25:03,153:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:25:03,153:INFO:Starting cross validation
2024-04-06 10:25:03,153:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:25:03,230:INFO:Calculating mean and std
2024-04-06 10:25:03,230:INFO:Creating metrics dataframe
2024-04-06 10:25:03,231:INFO:Finalizing model
2024-04-06 10:25:03,247:INFO:Uploading results into container
2024-04-06 10:25:03,247:INFO:Uploading model into container now
2024-04-06 10:25:03,248:INFO:_master_model_container: 4
2024-04-06 10:25:03,248:INFO:_display_container: 6
2024-04-06 10:25:03,248:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5574, splitter='best')
2024-04-06 10:25:03,248:INFO:create_model() successfully completed......................................
2024-04-06 10:25:03,412:INFO:SubProcess create_model() end ==================================
2024-04-06 10:25:03,412:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5574, splitter='best') result for F1 is 0.5233
2024-04-06 10:25:03,413:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=6, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.0005, min_samples_leaf=5,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5574, splitter='best') result for F1 is 0.4757
2024-04-06 10:25:03,413:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5574, splitter='best') is best model
2024-04-06 10:25:03,413:INFO:choose_better completed
2024-04-06 10:25:03,413:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-06 10:25:03,417:INFO:_master_model_container: 4
2024-04-06 10:25:03,417:INFO:_display_container: 5
2024-04-06 10:25:03,417:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5574, splitter='best')
2024-04-06 10:25:03,417:INFO:tune_model() successfully completed......................................
2024-04-06 10:25:03,533:INFO:Initializing predict_model()
2024-04-06 10:25:03,534:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9a8c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5574, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x176944e00>)
2024-04-06 10:25:03,534:INFO:Checking exceptions
2024-04-06 10:25:03,534:INFO:Preloading libraries
2024-04-06 10:25:03,706:INFO:Initializing finalize_model()
2024-04-06 10:25:03,706:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9a8c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5574, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-06 10:25:03,706:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5574, splitter='best')
2024-04-06 10:25:03,708:INFO:Initializing create_model()
2024-04-06 10:25:03,708:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9a8c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5574, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:25:03,708:INFO:Checking exceptions
2024-04-06 10:25:03,708:INFO:Importing libraries
2024-04-06 10:25:03,708:INFO:Copying training dataset
2024-04-06 10:25:03,708:INFO:Defining folds
2024-04-06 10:25:03,708:INFO:Declaring metric variables
2024-04-06 10:25:03,708:INFO:Importing untrained model
2024-04-06 10:25:03,708:INFO:Declaring custom model
2024-04-06 10:25:03,708:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:25:03,709:INFO:Cross validation set to False
2024-04-06 10:25:03,709:INFO:Fitting Model
2024-04-06 10:25:03,761:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=5574,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:25:03,761:INFO:create_model() successfully completed......................................
2024-04-06 10:25:03,870:INFO:_master_model_container: 4
2024-04-06 10:25:03,870:INFO:_display_container: 6
2024-04-06 10:25:03,872:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=5574,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:25:03,872:INFO:finalize_model() successfully completed......................................
2024-04-06 10:25:03,986:INFO:Initializing save_model()
2024-04-06 10:25:03,986:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=5574,
                                        splitter='best'))],
         verbose=False), model_name=./kobe, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-06 10:25:03,986:INFO:Adding model into prep_pipe
2024-04-06 10:25:03,986:WARNING:Only Model saved as it was a pipeline.
2024-04-06 10:25:03,988:INFO:./kobe.pkl saved in current working directory
2024-04-06 10:25:03,990:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=5574,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:25:03,990:INFO:save_model() successfully completed......................................
2024-04-06 10:25:04,103:INFO:Initializing load_model()
2024-04-06 10:25:04,103:INFO:load_model(model_name=./kobe, platform=None, authentication=None, verbose=True)
2024-04-06 10:25:04,112:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-06 10:25:05,570:WARNING:/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/ipykernel_3194/1794427493.py:176: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-06 10:26:08,796:INFO:PyCaret ClassificationExperiment
2024-04-06 10:26:08,796:INFO:Logging name: clf-default-name
2024-04-06 10:26:08,796:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 10:26:08,796:INFO:version 3.3.0
2024-04-06 10:26:08,796:INFO:Initializing setup()
2024-04-06 10:26:08,796:INFO:self.USI: 0332
2024-04-06 10:26:08,796:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 10:26:08,796:INFO:Checking environment
2024-04-06 10:26:08,796:INFO:python_version: 3.11.3
2024-04-06 10:26:08,796:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 10:26:08,796:INFO:machine: arm64
2024-04-06 10:26:08,796:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:26:08,796:INFO:Memory: svmem(total=8589934592, available=1894105088, percent=77.9, used=2852962304, free=80330752, active=1828175872, inactive=1801650176, wired=1024786432)
2024-04-06 10:26:08,796:INFO:Physical Core: 8
2024-04-06 10:26:08,796:INFO:Logical Core: 8
2024-04-06 10:26:08,796:INFO:Checking libraries
2024-04-06 10:26:08,796:INFO:System:
2024-04-06 10:26:08,796:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 10:26:08,796:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 10:26:08,796:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:26:08,796:INFO:PyCaret required dependencies:
2024-04-06 10:26:08,797:INFO:                 pip: 24.0
2024-04-06 10:26:08,797:INFO:          setuptools: 65.5.0
2024-04-06 10:26:08,797:INFO:             pycaret: 3.3.0
2024-04-06 10:26:08,797:INFO:             IPython: 8.23.0
2024-04-06 10:26:08,797:INFO:          ipywidgets: 8.1.2
2024-04-06 10:26:08,797:INFO:                tqdm: 4.66.2
2024-04-06 10:26:08,797:INFO:               numpy: 1.26.4
2024-04-06 10:26:08,797:INFO:              pandas: 2.1.4
2024-04-06 10:26:08,797:INFO:              jinja2: 3.1.3
2024-04-06 10:26:08,797:INFO:               scipy: 1.11.4
2024-04-06 10:26:08,797:INFO:              joblib: 1.3.2
2024-04-06 10:26:08,797:INFO:             sklearn: 1.4.1.post1
2024-04-06 10:26:08,797:INFO:                pyod: 1.1.3
2024-04-06 10:26:08,797:INFO:            imblearn: 0.12.2
2024-04-06 10:26:08,797:INFO:   category_encoders: 2.6.3
2024-04-06 10:26:08,797:INFO:            lightgbm: 4.3.0
2024-04-06 10:26:08,797:INFO:               numba: 0.59.1
2024-04-06 10:26:08,797:INFO:            requests: 2.31.0
2024-04-06 10:26:08,797:INFO:          matplotlib: 3.7.5
2024-04-06 10:26:08,797:INFO:          scikitplot: 0.3.7
2024-04-06 10:26:08,797:INFO:         yellowbrick: 1.5
2024-04-06 10:26:08,797:INFO:              plotly: 5.20.0
2024-04-06 10:26:08,797:INFO:    plotly-resampler: Not installed
2024-04-06 10:26:08,797:INFO:             kaleido: 0.2.1
2024-04-06 10:26:08,797:INFO:           schemdraw: 0.15
2024-04-06 10:26:08,797:INFO:         statsmodels: 0.14.1
2024-04-06 10:26:08,797:INFO:              sktime: 0.28.0
2024-04-06 10:26:08,797:INFO:               tbats: 1.1.3
2024-04-06 10:26:08,797:INFO:            pmdarima: 2.0.4
2024-04-06 10:26:08,797:INFO:              psutil: 5.9.8
2024-04-06 10:26:08,797:INFO:          markupsafe: 2.1.5
2024-04-06 10:26:08,797:INFO:             pickle5: Not installed
2024-04-06 10:26:08,797:INFO:         cloudpickle: 3.0.0
2024-04-06 10:26:08,797:INFO:         deprecation: 2.1.0
2024-04-06 10:26:08,797:INFO:              xxhash: 3.4.1
2024-04-06 10:26:08,797:INFO:           wurlitzer: 3.0.3
2024-04-06 10:26:08,797:INFO:PyCaret optional dependencies:
2024-04-06 10:26:08,797:INFO:                shap: Not installed
2024-04-06 10:26:08,797:INFO:           interpret: Not installed
2024-04-06 10:26:08,797:INFO:                umap: Not installed
2024-04-06 10:26:08,797:INFO:     ydata_profiling: Not installed
2024-04-06 10:26:08,797:INFO:  explainerdashboard: Not installed
2024-04-06 10:26:08,797:INFO:             autoviz: Not installed
2024-04-06 10:26:08,797:INFO:           fairlearn: Not installed
2024-04-06 10:26:08,797:INFO:          deepchecks: Not installed
2024-04-06 10:26:08,797:INFO:             xgboost: Not installed
2024-04-06 10:26:08,797:INFO:            catboost: Not installed
2024-04-06 10:26:08,797:INFO:              kmodes: Not installed
2024-04-06 10:26:08,797:INFO:             mlxtend: Not installed
2024-04-06 10:26:08,797:INFO:       statsforecast: Not installed
2024-04-06 10:26:08,797:INFO:        tune_sklearn: Not installed
2024-04-06 10:26:08,797:INFO:                 ray: Not installed
2024-04-06 10:26:08,797:INFO:            hyperopt: Not installed
2024-04-06 10:26:08,797:INFO:              optuna: Not installed
2024-04-06 10:26:08,797:INFO:               skopt: Not installed
2024-04-06 10:26:08,797:INFO:              mlflow: 2.11.3
2024-04-06 10:26:08,797:INFO:              gradio: Not installed
2024-04-06 10:26:08,797:INFO:             fastapi: Not installed
2024-04-06 10:26:08,797:INFO:             uvicorn: Not installed
2024-04-06 10:26:08,797:INFO:              m2cgen: Not installed
2024-04-06 10:26:08,797:INFO:           evidently: Not installed
2024-04-06 10:26:08,797:INFO:               fugue: Not installed
2024-04-06 10:26:08,797:INFO:           streamlit: 1.33.0
2024-04-06 10:26:08,797:INFO:             prophet: 1.1.5
2024-04-06 10:26:08,797:INFO:None
2024-04-06 10:26:08,797:INFO:Set up data.
2024-04-06 10:26:08,800:INFO:Set up folding strategy.
2024-04-06 10:26:08,800:INFO:Set up train/test split.
2024-04-06 10:26:08,800:INFO:Set up data.
2024-04-06 10:26:08,802:INFO:Set up index.
2024-04-06 10:26:08,802:INFO:Assigning column types.
2024-04-06 10:26:08,804:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 10:26:08,822:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:26:08,823:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:26:08,834:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:08,835:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:08,853:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:26:08,853:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:26:08,864:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:08,864:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:08,864:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 10:26:08,882:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:26:08,894:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:08,894:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:08,911:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:26:08,922:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:08,923:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:08,923:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 10:26:08,951:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:08,951:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:08,981:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:08,981:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:08,982:INFO:Preparing preprocessing pipeline...
2024-04-06 10:26:08,983:INFO:Set up simple imputation.
2024-04-06 10:26:08,983:INFO:Set up feature normalization.
2024-04-06 10:26:08,994:INFO:Finished creating preprocessing pipeline.
2024-04-06 10:26:08,996:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 10:26:08,996:INFO:Creating final display dataframe.
2024-04-06 10:26:09,024:INFO:Setup _display_container:                     Description             Value
0                    Session id              8036
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              0332
2024-04-06 10:26:09,057:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:09,057:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:09,087:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:09,088:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:09,088:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 10:26:09,088:INFO:setup() successfully completed in 0.29s...............
2024-04-06 10:26:09,089:INFO:Initializing compare_models()
2024-04-06 10:26:09,089:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177e81b50>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x177e81b50>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 10:26:09,089:INFO:Checking exceptions
2024-04-06 10:26:09,092:INFO:Preparing display monitor
2024-04-06 10:26:09,100:INFO:Initializing Logistic Regression
2024-04-06 10:26:09,100:INFO:Total runtime is 2.964337666829427e-06 minutes
2024-04-06 10:26:09,101:INFO:SubProcess create_model() called ==================================
2024-04-06 10:26:09,102:INFO:Initializing create_model()
2024-04-06 10:26:09,102:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177e81b50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x177bf4850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:26:09,102:INFO:Checking exceptions
2024-04-06 10:26:09,102:INFO:Importing libraries
2024-04-06 10:26:09,102:INFO:Copying training dataset
2024-04-06 10:26:09,107:INFO:Defining folds
2024-04-06 10:26:09,107:INFO:Declaring metric variables
2024-04-06 10:26:09,124:INFO:Importing untrained model
2024-04-06 10:26:09,144:INFO:Logistic Regression Imported successfully
2024-04-06 10:26:09,154:INFO:Starting cross validation
2024-04-06 10:26:09,155:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:26:09,300:INFO:Calculating mean and std
2024-04-06 10:26:09,300:INFO:Creating metrics dataframe
2024-04-06 10:26:09,301:INFO:Uploading results into container
2024-04-06 10:26:09,301:INFO:Uploading model into container now
2024-04-06 10:26:09,301:INFO:_master_model_container: 1
2024-04-06 10:26:09,301:INFO:_display_container: 2
2024-04-06 10:26:09,302:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8036, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:26:09,302:INFO:create_model() successfully completed......................................
2024-04-06 10:26:09,505:INFO:SubProcess create_model() end ==================================
2024-04-06 10:26:09,505:INFO:Creating metrics dataframe
2024-04-06 10:26:09,507:INFO:Initializing Decision Tree Classifier
2024-04-06 10:26:09,507:INFO:Total runtime is 0.006786727905273438 minutes
2024-04-06 10:26:09,508:INFO:SubProcess create_model() called ==================================
2024-04-06 10:26:09,508:INFO:Initializing create_model()
2024-04-06 10:26:09,508:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177e81b50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x177bf4850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:26:09,508:INFO:Checking exceptions
2024-04-06 10:26:09,508:INFO:Importing libraries
2024-04-06 10:26:09,508:INFO:Copying training dataset
2024-04-06 10:26:09,511:INFO:Defining folds
2024-04-06 10:26:09,511:INFO:Declaring metric variables
2024-04-06 10:26:09,512:INFO:Importing untrained model
2024-04-06 10:26:09,513:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:26:09,516:INFO:Starting cross validation
2024-04-06 10:26:09,516:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:26:09,596:INFO:Calculating mean and std
2024-04-06 10:26:09,596:INFO:Creating metrics dataframe
2024-04-06 10:26:09,597:INFO:Uploading results into container
2024-04-06 10:26:09,597:INFO:Uploading model into container now
2024-04-06 10:26:09,597:INFO:_master_model_container: 2
2024-04-06 10:26:09,597:INFO:_display_container: 2
2024-04-06 10:26:09,597:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8036, splitter='best')
2024-04-06 10:26:09,597:INFO:create_model() successfully completed......................................
2024-04-06 10:26:09,710:INFO:SubProcess create_model() end ==================================
2024-04-06 10:26:09,710:INFO:Creating metrics dataframe
2024-04-06 10:26:09,712:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 10:26:09,716:INFO:Initializing create_model()
2024-04-06 10:26:09,716:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177e81b50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8036, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:26:09,716:INFO:Checking exceptions
2024-04-06 10:26:09,716:INFO:Importing libraries
2024-04-06 10:26:09,717:INFO:Copying training dataset
2024-04-06 10:26:09,719:INFO:Defining folds
2024-04-06 10:26:09,719:INFO:Declaring metric variables
2024-04-06 10:26:09,719:INFO:Importing untrained model
2024-04-06 10:26:09,719:INFO:Declaring custom model
2024-04-06 10:26:09,719:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:26:09,719:INFO:Cross validation set to False
2024-04-06 10:26:09,719:INFO:Fitting Model
2024-04-06 10:26:09,733:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8036, splitter='best')
2024-04-06 10:26:09,733:INFO:create_model() successfully completed......................................
2024-04-06 10:26:09,847:INFO:Initializing create_model()
2024-04-06 10:26:09,847:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177e81b50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8036, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:26:09,847:INFO:Checking exceptions
2024-04-06 10:26:09,847:INFO:Importing libraries
2024-04-06 10:26:09,848:INFO:Copying training dataset
2024-04-06 10:26:09,850:INFO:Defining folds
2024-04-06 10:26:09,850:INFO:Declaring metric variables
2024-04-06 10:26:09,850:INFO:Importing untrained model
2024-04-06 10:26:09,850:INFO:Declaring custom model
2024-04-06 10:26:09,850:INFO:Logistic Regression Imported successfully
2024-04-06 10:26:09,850:INFO:Cross validation set to False
2024-04-06 10:26:09,850:INFO:Fitting Model
2024-04-06 10:26:09,856:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8036, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:26:09,856:INFO:create_model() successfully completed......................................
2024-04-06 10:26:10,057:INFO:_master_model_container: 2
2024-04-06 10:26:10,057:INFO:_display_container: 2
2024-04-06 10:26:10,058:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8036, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8036, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-06 10:26:10,065:INFO:compare_models() successfully completed......................................
2024-04-06 10:26:10,067:INFO:Initializing predict_model()
2024-04-06 10:26:10,067:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177e81b50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8036, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x308097ce0>)
2024-04-06 10:26:10,067:INFO:Checking exceptions
2024-04-06 10:26:10,067:INFO:Preloading libraries
2024-04-06 10:26:31,748:INFO:PyCaret ClassificationExperiment
2024-04-06 10:26:31,748:INFO:Logging name: clf-default-name
2024-04-06 10:26:31,748:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 10:26:31,748:INFO:version 3.3.0
2024-04-06 10:26:31,748:INFO:Initializing setup()
2024-04-06 10:26:31,748:INFO:self.USI: f1e1
2024-04-06 10:26:31,748:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 10:26:31,748:INFO:Checking environment
2024-04-06 10:26:31,748:INFO:python_version: 3.11.3
2024-04-06 10:26:31,748:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 10:26:31,748:INFO:machine: arm64
2024-04-06 10:26:31,748:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:26:31,748:INFO:Memory: svmem(total=8589934592, available=2579873792, percent=70.0, used=3060416512, free=561512448, active=2028961792, inactive=2006220800, wired=1031454720)
2024-04-06 10:26:31,748:INFO:Physical Core: 8
2024-04-06 10:26:31,748:INFO:Logical Core: 8
2024-04-06 10:26:31,748:INFO:Checking libraries
2024-04-06 10:26:31,748:INFO:System:
2024-04-06 10:26:31,748:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 10:26:31,748:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 10:26:31,748:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:26:31,748:INFO:PyCaret required dependencies:
2024-04-06 10:26:31,748:INFO:                 pip: 24.0
2024-04-06 10:26:31,748:INFO:          setuptools: 65.5.0
2024-04-06 10:26:31,749:INFO:             pycaret: 3.3.0
2024-04-06 10:26:31,749:INFO:             IPython: 8.23.0
2024-04-06 10:26:31,749:INFO:          ipywidgets: 8.1.2
2024-04-06 10:26:31,749:INFO:                tqdm: 4.66.2
2024-04-06 10:26:31,749:INFO:               numpy: 1.26.4
2024-04-06 10:26:31,749:INFO:              pandas: 2.1.4
2024-04-06 10:26:31,749:INFO:              jinja2: 3.1.3
2024-04-06 10:26:31,749:INFO:               scipy: 1.11.4
2024-04-06 10:26:31,749:INFO:              joblib: 1.3.2
2024-04-06 10:26:31,749:INFO:             sklearn: 1.4.1.post1
2024-04-06 10:26:31,749:INFO:                pyod: 1.1.3
2024-04-06 10:26:31,749:INFO:            imblearn: 0.12.2
2024-04-06 10:26:31,749:INFO:   category_encoders: 2.6.3
2024-04-06 10:26:31,749:INFO:            lightgbm: 4.3.0
2024-04-06 10:26:31,749:INFO:               numba: 0.59.1
2024-04-06 10:26:31,749:INFO:            requests: 2.31.0
2024-04-06 10:26:31,749:INFO:          matplotlib: 3.7.5
2024-04-06 10:26:31,749:INFO:          scikitplot: 0.3.7
2024-04-06 10:26:31,749:INFO:         yellowbrick: 1.5
2024-04-06 10:26:31,749:INFO:              plotly: 5.20.0
2024-04-06 10:26:31,749:INFO:    plotly-resampler: Not installed
2024-04-06 10:26:31,749:INFO:             kaleido: 0.2.1
2024-04-06 10:26:31,749:INFO:           schemdraw: 0.15
2024-04-06 10:26:31,749:INFO:         statsmodels: 0.14.1
2024-04-06 10:26:31,749:INFO:              sktime: 0.28.0
2024-04-06 10:26:31,749:INFO:               tbats: 1.1.3
2024-04-06 10:26:31,749:INFO:            pmdarima: 2.0.4
2024-04-06 10:26:31,749:INFO:              psutil: 5.9.8
2024-04-06 10:26:31,749:INFO:          markupsafe: 2.1.5
2024-04-06 10:26:31,749:INFO:             pickle5: Not installed
2024-04-06 10:26:31,749:INFO:         cloudpickle: 3.0.0
2024-04-06 10:26:31,749:INFO:         deprecation: 2.1.0
2024-04-06 10:26:31,749:INFO:              xxhash: 3.4.1
2024-04-06 10:26:31,749:INFO:           wurlitzer: 3.0.3
2024-04-06 10:26:31,749:INFO:PyCaret optional dependencies:
2024-04-06 10:26:31,749:INFO:                shap: Not installed
2024-04-06 10:26:31,749:INFO:           interpret: Not installed
2024-04-06 10:26:31,749:INFO:                umap: Not installed
2024-04-06 10:26:31,749:INFO:     ydata_profiling: Not installed
2024-04-06 10:26:31,749:INFO:  explainerdashboard: Not installed
2024-04-06 10:26:31,749:INFO:             autoviz: Not installed
2024-04-06 10:26:31,749:INFO:           fairlearn: Not installed
2024-04-06 10:26:31,749:INFO:          deepchecks: Not installed
2024-04-06 10:26:31,749:INFO:             xgboost: Not installed
2024-04-06 10:26:31,749:INFO:            catboost: Not installed
2024-04-06 10:26:31,749:INFO:              kmodes: Not installed
2024-04-06 10:26:31,749:INFO:             mlxtend: Not installed
2024-04-06 10:26:31,749:INFO:       statsforecast: Not installed
2024-04-06 10:26:31,749:INFO:        tune_sklearn: Not installed
2024-04-06 10:26:31,749:INFO:                 ray: Not installed
2024-04-06 10:26:31,749:INFO:            hyperopt: Not installed
2024-04-06 10:26:31,749:INFO:              optuna: Not installed
2024-04-06 10:26:31,749:INFO:               skopt: Not installed
2024-04-06 10:26:31,749:INFO:              mlflow: 2.11.3
2024-04-06 10:26:31,749:INFO:              gradio: Not installed
2024-04-06 10:26:31,749:INFO:             fastapi: Not installed
2024-04-06 10:26:31,749:INFO:             uvicorn: Not installed
2024-04-06 10:26:31,749:INFO:              m2cgen: Not installed
2024-04-06 10:26:31,749:INFO:           evidently: Not installed
2024-04-06 10:26:31,749:INFO:               fugue: Not installed
2024-04-06 10:26:31,749:INFO:           streamlit: 1.33.0
2024-04-06 10:26:31,749:INFO:             prophet: 1.1.5
2024-04-06 10:26:31,749:INFO:None
2024-04-06 10:26:31,749:INFO:Set up data.
2024-04-06 10:26:31,751:INFO:Set up folding strategy.
2024-04-06 10:26:31,751:INFO:Set up train/test split.
2024-04-06 10:26:31,751:INFO:Set up data.
2024-04-06 10:26:31,753:INFO:Set up index.
2024-04-06 10:26:31,753:INFO:Assigning column types.
2024-04-06 10:26:31,755:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 10:26:31,774:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:26:31,774:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:26:31,786:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:31,786:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:31,805:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:26:31,805:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:26:31,817:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:31,817:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:31,817:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 10:26:31,835:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:26:31,845:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:31,845:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:31,864:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:26:31,875:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:31,875:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:31,875:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 10:26:31,904:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:31,904:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:31,932:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:31,932:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:31,933:INFO:Preparing preprocessing pipeline...
2024-04-06 10:26:31,933:INFO:Set up simple imputation.
2024-04-06 10:26:31,933:INFO:Set up feature normalization.
2024-04-06 10:26:31,941:INFO:Finished creating preprocessing pipeline.
2024-04-06 10:26:31,943:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 10:26:31,943:INFO:Creating final display dataframe.
2024-04-06 10:26:31,972:INFO:Setup _display_container:                     Description             Value
0                    Session id              2426
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              f1e1
2024-04-06 10:26:32,003:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:32,003:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:32,033:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:32,033:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:26:32,033:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 10:26:32,033:INFO:setup() successfully completed in 0.29s...............
2024-04-06 10:26:32,034:INFO:Initializing compare_models()
2024-04-06 10:26:32,034:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177a01750>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x177a01750>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 10:26:32,034:INFO:Checking exceptions
2024-04-06 10:26:32,036:INFO:Preparing display monitor
2024-04-06 10:26:32,043:INFO:Initializing Logistic Regression
2024-04-06 10:26:32,043:INFO:Total runtime is 2.566973368326823e-06 minutes
2024-04-06 10:26:32,044:INFO:SubProcess create_model() called ==================================
2024-04-06 10:26:32,044:INFO:Initializing create_model()
2024-04-06 10:26:32,044:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177a01750>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x176a64fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:26:32,044:INFO:Checking exceptions
2024-04-06 10:26:32,044:INFO:Importing libraries
2024-04-06 10:26:32,044:INFO:Copying training dataset
2024-04-06 10:26:32,048:INFO:Defining folds
2024-04-06 10:26:32,048:INFO:Declaring metric variables
2024-04-06 10:26:32,050:INFO:Importing untrained model
2024-04-06 10:26:32,051:INFO:Logistic Regression Imported successfully
2024-04-06 10:26:32,054:INFO:Starting cross validation
2024-04-06 10:26:32,054:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:26:34,094:INFO:Calculating mean and std
2024-04-06 10:26:34,097:INFO:Creating metrics dataframe
2024-04-06 10:26:34,102:INFO:Uploading results into container
2024-04-06 10:26:34,106:INFO:Uploading model into container now
2024-04-06 10:26:34,107:INFO:_master_model_container: 1
2024-04-06 10:26:34,108:INFO:_display_container: 2
2024-04-06 10:26:34,109:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2426, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:26:34,109:INFO:create_model() successfully completed......................................
2024-04-06 10:26:34,325:INFO:SubProcess create_model() end ==================================
2024-04-06 10:26:34,325:INFO:Creating metrics dataframe
2024-04-06 10:26:34,328:INFO:Initializing Decision Tree Classifier
2024-04-06 10:26:34,328:INFO:Total runtime is 0.03808166980743408 minutes
2024-04-06 10:26:34,329:INFO:SubProcess create_model() called ==================================
2024-04-06 10:26:34,329:INFO:Initializing create_model()
2024-04-06 10:26:34,329:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177a01750>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x176a64fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:26:34,329:INFO:Checking exceptions
2024-04-06 10:26:34,329:INFO:Importing libraries
2024-04-06 10:26:34,330:INFO:Copying training dataset
2024-04-06 10:26:34,332:INFO:Defining folds
2024-04-06 10:26:34,332:INFO:Declaring metric variables
2024-04-06 10:26:34,334:INFO:Importing untrained model
2024-04-06 10:26:34,335:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:26:34,338:INFO:Starting cross validation
2024-04-06 10:26:34,339:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:26:34,474:INFO:Calculating mean and std
2024-04-06 10:26:34,475:INFO:Creating metrics dataframe
2024-04-06 10:26:34,476:INFO:Uploading results into container
2024-04-06 10:26:34,476:INFO:Uploading model into container now
2024-04-06 10:26:34,477:INFO:_master_model_container: 2
2024-04-06 10:26:34,477:INFO:_display_container: 2
2024-04-06 10:26:34,477:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2426, splitter='best')
2024-04-06 10:26:34,477:INFO:create_model() successfully completed......................................
2024-04-06 10:26:34,600:INFO:SubProcess create_model() end ==================================
2024-04-06 10:26:34,600:INFO:Creating metrics dataframe
2024-04-06 10:26:34,603:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 10:26:34,608:INFO:Initializing create_model()
2024-04-06 10:26:34,608:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177a01750>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2426, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:26:34,608:INFO:Checking exceptions
2024-04-06 10:26:34,609:INFO:Importing libraries
2024-04-06 10:26:34,609:INFO:Copying training dataset
2024-04-06 10:26:34,612:INFO:Defining folds
2024-04-06 10:26:34,612:INFO:Declaring metric variables
2024-04-06 10:26:34,612:INFO:Importing untrained model
2024-04-06 10:26:34,612:INFO:Declaring custom model
2024-04-06 10:26:34,613:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:26:34,613:INFO:Cross validation set to False
2024-04-06 10:26:34,613:INFO:Fitting Model
2024-04-06 10:26:34,625:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2426, splitter='best')
2024-04-06 10:26:34,625:INFO:create_model() successfully completed......................................
2024-04-06 10:26:34,742:INFO:Initializing create_model()
2024-04-06 10:26:34,742:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177a01750>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2426, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:26:34,742:INFO:Checking exceptions
2024-04-06 10:26:34,742:INFO:Importing libraries
2024-04-06 10:26:34,742:INFO:Copying training dataset
2024-04-06 10:26:34,745:INFO:Defining folds
2024-04-06 10:26:34,745:INFO:Declaring metric variables
2024-04-06 10:26:34,745:INFO:Importing untrained model
2024-04-06 10:26:34,745:INFO:Declaring custom model
2024-04-06 10:26:34,745:INFO:Logistic Regression Imported successfully
2024-04-06 10:26:34,745:INFO:Cross validation set to False
2024-04-06 10:26:34,745:INFO:Fitting Model
2024-04-06 10:26:34,765:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2426, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:26:34,765:INFO:create_model() successfully completed......................................
2024-04-06 10:26:34,997:INFO:_master_model_container: 2
2024-04-06 10:26:34,997:INFO:_display_container: 2
2024-04-06 10:26:34,998:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2426, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2426, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-06 10:26:34,999:INFO:compare_models() successfully completed......................................
2024-04-06 10:26:35,000:INFO:Initializing predict_model()
2024-04-06 10:26:35,000:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177a01750>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2426, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x175290e00>)
2024-04-06 10:26:35,000:INFO:Checking exceptions
2024-04-06 10:26:35,001:INFO:Preloading libraries
2024-04-06 10:27:32,720:INFO:PyCaret ClassificationExperiment
2024-04-06 10:27:32,721:INFO:Logging name: clf-default-name
2024-04-06 10:27:32,721:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 10:27:32,721:INFO:version 3.3.0
2024-04-06 10:27:32,721:INFO:Initializing setup()
2024-04-06 10:27:32,721:INFO:self.USI: b988
2024-04-06 10:27:32,721:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 10:27:32,721:INFO:Checking environment
2024-04-06 10:27:32,721:INFO:python_version: 3.11.3
2024-04-06 10:27:32,721:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 10:27:32,721:INFO:machine: arm64
2024-04-06 10:27:32,721:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:27:32,721:INFO:Memory: svmem(total=8589934592, available=2419703808, percent=71.8, used=3365765120, free=86966272, active=2344681472, inactive=2269020160, wired=1021083648)
2024-04-06 10:27:32,721:INFO:Physical Core: 8
2024-04-06 10:27:32,721:INFO:Logical Core: 8
2024-04-06 10:27:32,721:INFO:Checking libraries
2024-04-06 10:27:32,721:INFO:System:
2024-04-06 10:27:32,721:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 10:27:32,721:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 10:27:32,721:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:27:32,721:INFO:PyCaret required dependencies:
2024-04-06 10:27:32,721:INFO:                 pip: 24.0
2024-04-06 10:27:32,721:INFO:          setuptools: 65.5.0
2024-04-06 10:27:32,721:INFO:             pycaret: 3.3.0
2024-04-06 10:27:32,721:INFO:             IPython: 8.23.0
2024-04-06 10:27:32,721:INFO:          ipywidgets: 8.1.2
2024-04-06 10:27:32,721:INFO:                tqdm: 4.66.2
2024-04-06 10:27:32,721:INFO:               numpy: 1.26.4
2024-04-06 10:27:32,721:INFO:              pandas: 2.1.4
2024-04-06 10:27:32,721:INFO:              jinja2: 3.1.3
2024-04-06 10:27:32,721:INFO:               scipy: 1.11.4
2024-04-06 10:27:32,721:INFO:              joblib: 1.3.2
2024-04-06 10:27:32,721:INFO:             sklearn: 1.4.1.post1
2024-04-06 10:27:32,721:INFO:                pyod: 1.1.3
2024-04-06 10:27:32,721:INFO:            imblearn: 0.12.2
2024-04-06 10:27:32,721:INFO:   category_encoders: 2.6.3
2024-04-06 10:27:32,721:INFO:            lightgbm: 4.3.0
2024-04-06 10:27:32,721:INFO:               numba: 0.59.1
2024-04-06 10:27:32,721:INFO:            requests: 2.31.0
2024-04-06 10:27:32,721:INFO:          matplotlib: 3.7.5
2024-04-06 10:27:32,721:INFO:          scikitplot: 0.3.7
2024-04-06 10:27:32,721:INFO:         yellowbrick: 1.5
2024-04-06 10:27:32,721:INFO:              plotly: 5.20.0
2024-04-06 10:27:32,721:INFO:    plotly-resampler: Not installed
2024-04-06 10:27:32,721:INFO:             kaleido: 0.2.1
2024-04-06 10:27:32,721:INFO:           schemdraw: 0.15
2024-04-06 10:27:32,721:INFO:         statsmodels: 0.14.1
2024-04-06 10:27:32,721:INFO:              sktime: 0.28.0
2024-04-06 10:27:32,721:INFO:               tbats: 1.1.3
2024-04-06 10:27:32,721:INFO:            pmdarima: 2.0.4
2024-04-06 10:27:32,721:INFO:              psutil: 5.9.8
2024-04-06 10:27:32,721:INFO:          markupsafe: 2.1.5
2024-04-06 10:27:32,721:INFO:             pickle5: Not installed
2024-04-06 10:27:32,721:INFO:         cloudpickle: 3.0.0
2024-04-06 10:27:32,721:INFO:         deprecation: 2.1.0
2024-04-06 10:27:32,721:INFO:              xxhash: 3.4.1
2024-04-06 10:27:32,721:INFO:           wurlitzer: 3.0.3
2024-04-06 10:27:32,721:INFO:PyCaret optional dependencies:
2024-04-06 10:27:32,721:INFO:                shap: Not installed
2024-04-06 10:27:32,721:INFO:           interpret: Not installed
2024-04-06 10:27:32,721:INFO:                umap: Not installed
2024-04-06 10:27:32,721:INFO:     ydata_profiling: Not installed
2024-04-06 10:27:32,721:INFO:  explainerdashboard: Not installed
2024-04-06 10:27:32,721:INFO:             autoviz: Not installed
2024-04-06 10:27:32,721:INFO:           fairlearn: Not installed
2024-04-06 10:27:32,721:INFO:          deepchecks: Not installed
2024-04-06 10:27:32,721:INFO:             xgboost: Not installed
2024-04-06 10:27:32,721:INFO:            catboost: Not installed
2024-04-06 10:27:32,721:INFO:              kmodes: Not installed
2024-04-06 10:27:32,721:INFO:             mlxtend: Not installed
2024-04-06 10:27:32,721:INFO:       statsforecast: Not installed
2024-04-06 10:27:32,721:INFO:        tune_sklearn: Not installed
2024-04-06 10:27:32,721:INFO:                 ray: Not installed
2024-04-06 10:27:32,722:INFO:            hyperopt: Not installed
2024-04-06 10:27:32,722:INFO:              optuna: Not installed
2024-04-06 10:27:32,722:INFO:               skopt: Not installed
2024-04-06 10:27:32,722:INFO:              mlflow: 2.11.3
2024-04-06 10:27:32,722:INFO:              gradio: Not installed
2024-04-06 10:27:32,722:INFO:             fastapi: Not installed
2024-04-06 10:27:32,722:INFO:             uvicorn: Not installed
2024-04-06 10:27:32,722:INFO:              m2cgen: Not installed
2024-04-06 10:27:32,722:INFO:           evidently: Not installed
2024-04-06 10:27:32,722:INFO:               fugue: Not installed
2024-04-06 10:27:32,722:INFO:           streamlit: 1.33.0
2024-04-06 10:27:32,722:INFO:             prophet: 1.1.5
2024-04-06 10:27:32,722:INFO:None
2024-04-06 10:27:32,722:INFO:Set up data.
2024-04-06 10:27:32,723:INFO:Set up folding strategy.
2024-04-06 10:27:32,723:INFO:Set up train/test split.
2024-04-06 10:27:32,723:INFO:Set up data.
2024-04-06 10:27:32,725:INFO:Set up index.
2024-04-06 10:27:32,726:INFO:Assigning column types.
2024-04-06 10:27:32,728:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 10:27:32,747:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:27:32,747:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:27:32,759:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:27:32,759:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:27:32,777:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:27:32,777:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:27:32,788:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:27:32,788:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:27:32,788:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 10:27:32,807:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:27:32,818:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:27:32,818:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:27:32,836:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:27:32,847:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:27:32,847:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:27:32,847:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 10:27:32,876:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:27:32,876:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:27:32,905:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:27:32,906:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:27:32,906:INFO:Preparing preprocessing pipeline...
2024-04-06 10:27:32,906:INFO:Set up simple imputation.
2024-04-06 10:27:32,906:INFO:Set up feature normalization.
2024-04-06 10:27:32,916:INFO:Finished creating preprocessing pipeline.
2024-04-06 10:27:32,918:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 10:27:32,918:INFO:Creating final display dataframe.
2024-04-06 10:27:32,950:INFO:Setup _display_container:                     Description             Value
0                    Session id               767
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              b988
2024-04-06 10:27:32,981:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:27:32,981:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:27:33,011:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:27:33,012:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:27:33,012:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 10:27:33,012:INFO:setup() successfully completed in 0.29s...............
2024-04-06 10:27:33,013:INFO:Initializing compare_models()
2024-04-06 10:27:33,013:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x176d138d0>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x176d138d0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 10:27:33,013:INFO:Checking exceptions
2024-04-06 10:27:33,014:INFO:Preparing display monitor
2024-04-06 10:27:33,022:INFO:Initializing Logistic Regression
2024-04-06 10:27:33,022:INFO:Total runtime is 2.5987625122070313e-06 minutes
2024-04-06 10:27:33,023:INFO:SubProcess create_model() called ==================================
2024-04-06 10:27:33,023:INFO:Initializing create_model()
2024-04-06 10:27:33,023:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x176d138d0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17511bc50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:27:33,023:INFO:Checking exceptions
2024-04-06 10:27:33,023:INFO:Importing libraries
2024-04-06 10:27:33,023:INFO:Copying training dataset
2024-04-06 10:27:33,026:INFO:Defining folds
2024-04-06 10:27:33,026:INFO:Declaring metric variables
2024-04-06 10:27:33,027:INFO:Importing untrained model
2024-04-06 10:27:33,029:INFO:Logistic Regression Imported successfully
2024-04-06 10:27:33,032:INFO:Starting cross validation
2024-04-06 10:27:33,032:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:27:35,217:INFO:Calculating mean and std
2024-04-06 10:27:35,219:INFO:Creating metrics dataframe
2024-04-06 10:27:35,223:INFO:Uploading results into container
2024-04-06 10:27:35,223:INFO:Uploading model into container now
2024-04-06 10:27:35,224:INFO:_master_model_container: 1
2024-04-06 10:27:35,224:INFO:_display_container: 2
2024-04-06 10:27:35,225:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=767, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:27:35,225:INFO:create_model() successfully completed......................................
2024-04-06 10:27:35,447:INFO:SubProcess create_model() end ==================================
2024-04-06 10:27:35,448:INFO:Creating metrics dataframe
2024-04-06 10:27:35,451:INFO:Initializing Decision Tree Classifier
2024-04-06 10:27:35,451:INFO:Total runtime is 0.04047950108846028 minutes
2024-04-06 10:27:35,452:INFO:SubProcess create_model() called ==================================
2024-04-06 10:27:35,452:INFO:Initializing create_model()
2024-04-06 10:27:35,452:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x176d138d0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17511bc50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:27:35,452:INFO:Checking exceptions
2024-04-06 10:27:35,452:INFO:Importing libraries
2024-04-06 10:27:35,452:INFO:Copying training dataset
2024-04-06 10:27:35,455:INFO:Defining folds
2024-04-06 10:27:35,455:INFO:Declaring metric variables
2024-04-06 10:27:35,456:INFO:Importing untrained model
2024-04-06 10:27:35,458:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:27:35,460:INFO:Starting cross validation
2024-04-06 10:27:35,460:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:27:35,541:INFO:Calculating mean and std
2024-04-06 10:27:35,541:INFO:Creating metrics dataframe
2024-04-06 10:27:35,542:INFO:Uploading results into container
2024-04-06 10:27:35,542:INFO:Uploading model into container now
2024-04-06 10:27:35,542:INFO:_master_model_container: 2
2024-04-06 10:27:35,542:INFO:_display_container: 2
2024-04-06 10:27:35,542:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=767, splitter='best')
2024-04-06 10:27:35,542:INFO:create_model() successfully completed......................................
2024-04-06 10:27:35,654:INFO:SubProcess create_model() end ==================================
2024-04-06 10:27:35,654:INFO:Creating metrics dataframe
2024-04-06 10:27:35,656:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 10:27:35,660:INFO:Initializing create_model()
2024-04-06 10:27:35,660:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x176d138d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=767, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:27:35,660:INFO:Checking exceptions
2024-04-06 10:27:35,661:INFO:Importing libraries
2024-04-06 10:27:35,661:INFO:Copying training dataset
2024-04-06 10:27:35,664:INFO:Defining folds
2024-04-06 10:27:35,664:INFO:Declaring metric variables
2024-04-06 10:27:35,664:INFO:Importing untrained model
2024-04-06 10:27:35,664:INFO:Declaring custom model
2024-04-06 10:27:35,664:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:27:35,665:INFO:Cross validation set to False
2024-04-06 10:27:35,665:INFO:Fitting Model
2024-04-06 10:27:35,678:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=767, splitter='best')
2024-04-06 10:27:35,678:INFO:create_model() successfully completed......................................
2024-04-06 10:27:35,792:INFO:Initializing create_model()
2024-04-06 10:27:35,792:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x176d138d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=767, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:27:35,792:INFO:Checking exceptions
2024-04-06 10:27:35,793:INFO:Importing libraries
2024-04-06 10:27:35,794:INFO:Copying training dataset
2024-04-06 10:27:35,796:INFO:Defining folds
2024-04-06 10:27:35,796:INFO:Declaring metric variables
2024-04-06 10:27:35,796:INFO:Importing untrained model
2024-04-06 10:27:35,796:INFO:Declaring custom model
2024-04-06 10:27:35,796:INFO:Logistic Regression Imported successfully
2024-04-06 10:27:35,796:INFO:Cross validation set to False
2024-04-06 10:27:35,796:INFO:Fitting Model
2024-04-06 10:27:35,807:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=767, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:27:35,807:INFO:create_model() successfully completed......................................
2024-04-06 10:27:36,039:INFO:_master_model_container: 2
2024-04-06 10:27:36,044:INFO:_display_container: 2
2024-04-06 10:27:36,045:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=767, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=767, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-06 10:27:36,045:INFO:compare_models() successfully completed......................................
2024-04-06 10:27:36,053:INFO:Initializing predict_model()
2024-04-06 10:27:36,053:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x176d138d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=767, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x177a4efc0>)
2024-04-06 10:27:36,054:INFO:Checking exceptions
2024-04-06 10:27:36,054:INFO:Preloading libraries
2024-04-06 10:27:37,005:INFO:Initializing predict_model()
2024-04-06 10:27:37,005:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x176d138d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=767, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30aa10040>)
2024-04-06 10:27:37,005:INFO:Checking exceptions
2024-04-06 10:27:37,005:INFO:Preloading libraries
2024-04-06 10:27:37,456:INFO:Initializing tune_model()
2024-04-06 10:27:37,456:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x176d138d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=767, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-06 10:27:37,456:INFO:Checking exceptions
2024-04-06 10:27:37,462:INFO:Copying training dataset
2024-04-06 10:27:37,469:INFO:Checking base model
2024-04-06 10:27:37,469:INFO:Base model : Decision Tree Classifier
2024-04-06 10:27:37,471:INFO:Declaring metric variables
2024-04-06 10:27:37,474:INFO:Defining Hyperparameters
2024-04-06 10:27:37,620:INFO:Tuning with n_jobs=-1
2024-04-06 10:27:37,620:INFO:Initializing RandomizedSearchCV
2024-04-06 10:27:37,742:INFO:best_params: {'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.0002, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 3, 'actual_estimator__criterion': 'gini'}
2024-04-06 10:27:37,742:INFO:Hyperparameter search completed
2024-04-06 10:27:37,742:INFO:SubProcess create_model() called ==================================
2024-04-06 10:27:37,742:INFO:Initializing create_model()
2024-04-06 10:27:37,742:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x176d138d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=767, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30fa02450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 9, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.0002, 'max_features': 'log2', 'max_depth': 3, 'criterion': 'gini'})
2024-04-06 10:27:37,742:INFO:Checking exceptions
2024-04-06 10:27:37,742:INFO:Importing libraries
2024-04-06 10:27:37,742:INFO:Copying training dataset
2024-04-06 10:27:37,744:INFO:Defining folds
2024-04-06 10:27:37,744:INFO:Declaring metric variables
2024-04-06 10:27:37,746:INFO:Importing untrained model
2024-04-06 10:27:37,746:INFO:Declaring custom model
2024-04-06 10:27:37,747:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:27:37,750:INFO:Starting cross validation
2024-04-06 10:27:37,750:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:27:37,783:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-06 10:27:37,807:INFO:Calculating mean and std
2024-04-06 10:27:37,808:INFO:Creating metrics dataframe
2024-04-06 10:27:37,810:INFO:Finalizing model
2024-04-06 10:27:37,817:INFO:Uploading results into container
2024-04-06 10:27:37,817:INFO:Uploading model into container now
2024-04-06 10:27:37,817:INFO:_master_model_container: 3
2024-04-06 10:27:37,817:INFO:_display_container: 5
2024-04-06 10:27:37,818:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=3, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0.0002, min_samples_leaf=2,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=767, splitter='best')
2024-04-06 10:27:37,818:INFO:create_model() successfully completed......................................
2024-04-06 10:27:37,937:INFO:SubProcess create_model() end ==================================
2024-04-06 10:27:37,937:INFO:choose_better activated
2024-04-06 10:27:37,938:INFO:SubProcess create_model() called ==================================
2024-04-06 10:27:37,939:INFO:Initializing create_model()
2024-04-06 10:27:37,939:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x176d138d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=767, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:27:37,939:INFO:Checking exceptions
2024-04-06 10:27:37,939:INFO:Importing libraries
2024-04-06 10:27:37,940:INFO:Copying training dataset
2024-04-06 10:27:37,942:INFO:Defining folds
2024-04-06 10:27:37,942:INFO:Declaring metric variables
2024-04-06 10:27:37,942:INFO:Importing untrained model
2024-04-06 10:27:37,942:INFO:Declaring custom model
2024-04-06 10:27:37,943:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:27:37,943:INFO:Starting cross validation
2024-04-06 10:27:37,943:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:27:38,009:INFO:Calculating mean and std
2024-04-06 10:27:38,009:INFO:Creating metrics dataframe
2024-04-06 10:27:38,010:INFO:Finalizing model
2024-04-06 10:27:38,022:INFO:Uploading results into container
2024-04-06 10:27:38,022:INFO:Uploading model into container now
2024-04-06 10:27:38,022:INFO:_master_model_container: 4
2024-04-06 10:27:38,022:INFO:_display_container: 6
2024-04-06 10:27:38,022:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=767, splitter='best')
2024-04-06 10:27:38,022:INFO:create_model() successfully completed......................................
2024-04-06 10:27:38,136:INFO:SubProcess create_model() end ==================================
2024-04-06 10:27:38,137:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=767, splitter='best') result for F1 is 0.5339
2024-04-06 10:27:38,137:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=3, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0.0002, min_samples_leaf=2,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=767, splitter='best') result for F1 is 0.4269
2024-04-06 10:27:38,137:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=767, splitter='best') is best model
2024-04-06 10:27:38,137:INFO:choose_better completed
2024-04-06 10:27:38,137:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-06 10:27:38,142:INFO:_master_model_container: 4
2024-04-06 10:27:38,142:INFO:_display_container: 5
2024-04-06 10:27:38,142:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=767, splitter='best')
2024-04-06 10:27:38,142:INFO:tune_model() successfully completed......................................
2024-04-06 10:27:38,269:INFO:Initializing predict_model()
2024-04-06 10:27:38,269:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x176d138d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=767, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x175247c40>)
2024-04-06 10:27:38,269:INFO:Checking exceptions
2024-04-06 10:27:38,269:INFO:Preloading libraries
2024-04-06 10:27:38,447:INFO:Initializing finalize_model()
2024-04-06 10:27:38,447:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x176d138d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=767, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-06 10:27:38,447:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=767, splitter='best')
2024-04-06 10:27:38,448:INFO:Initializing create_model()
2024-04-06 10:27:38,448:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x176d138d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=767, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:27:38,448:INFO:Checking exceptions
2024-04-06 10:27:38,449:INFO:Importing libraries
2024-04-06 10:27:38,449:INFO:Copying training dataset
2024-04-06 10:27:38,449:INFO:Defining folds
2024-04-06 10:27:38,449:INFO:Declaring metric variables
2024-04-06 10:27:38,449:INFO:Importing untrained model
2024-04-06 10:27:38,449:INFO:Declaring custom model
2024-04-06 10:27:38,449:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:27:38,450:INFO:Cross validation set to False
2024-04-06 10:27:38,450:INFO:Fitting Model
2024-04-06 10:27:38,501:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=767,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:27:38,501:INFO:create_model() successfully completed......................................
2024-04-06 10:27:38,610:INFO:_master_model_container: 4
2024-04-06 10:27:38,610:INFO:_display_container: 6
2024-04-06 10:27:38,612:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=767,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:27:38,612:INFO:finalize_model() successfully completed......................................
2024-04-06 10:27:38,723:INFO:Initializing save_model()
2024-04-06 10:27:38,723:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=767,
                                        splitter='best'))],
         verbose=False), model_name=./kobe, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-06 10:27:38,723:INFO:Adding model into prep_pipe
2024-04-06 10:27:38,723:WARNING:Only Model saved as it was a pipeline.
2024-04-06 10:27:38,726:INFO:./kobe.pkl saved in current working directory
2024-04-06 10:27:38,728:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=767,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:27:38,728:INFO:save_model() successfully completed......................................
2024-04-06 10:27:38,837:INFO:Initializing load_model()
2024-04-06 10:27:38,838:INFO:load_model(model_name=./kobe, platform=None, authentication=None, verbose=True)
2024-04-06 10:27:38,846:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-06 10:27:40,336:WARNING:/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/ipykernel_3194/3788302827.py:109: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-06 10:32:12,642:INFO:PyCaret ClassificationExperiment
2024-04-06 10:32:12,642:INFO:Logging name: clf-default-name
2024-04-06 10:32:12,642:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 10:32:12,642:INFO:version 3.3.0
2024-04-06 10:32:12,642:INFO:Initializing setup()
2024-04-06 10:32:12,642:INFO:self.USI: b414
2024-04-06 10:32:12,642:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 10:32:12,642:INFO:Checking environment
2024-04-06 10:32:12,642:INFO:python_version: 3.11.3
2024-04-06 10:32:12,642:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 10:32:12,642:INFO:machine: arm64
2024-04-06 10:32:12,642:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:32:12,646:INFO:Memory: svmem(total=8589934592, available=1812889600, percent=78.9, used=2828828672, free=48201728, active=1768275968, inactive=1758035968, wired=1060552704)
2024-04-06 10:32:12,648:INFO:Physical Core: 8
2024-04-06 10:32:12,648:INFO:Logical Core: 8
2024-04-06 10:32:12,648:INFO:Checking libraries
2024-04-06 10:32:12,649:INFO:System:
2024-04-06 10:32:12,649:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 10:32:12,649:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 10:32:12,649:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:32:12,649:INFO:PyCaret required dependencies:
2024-04-06 10:32:12,650:INFO:                 pip: 24.0
2024-04-06 10:32:12,650:INFO:          setuptools: 65.5.0
2024-04-06 10:32:12,650:INFO:             pycaret: 3.3.0
2024-04-06 10:32:12,650:INFO:             IPython: 8.23.0
2024-04-06 10:32:12,650:INFO:          ipywidgets: 8.1.2
2024-04-06 10:32:12,650:INFO:                tqdm: 4.66.2
2024-04-06 10:32:12,650:INFO:               numpy: 1.26.4
2024-04-06 10:32:12,650:INFO:              pandas: 2.1.4
2024-04-06 10:32:12,650:INFO:              jinja2: 3.1.3
2024-04-06 10:32:12,650:INFO:               scipy: 1.11.4
2024-04-06 10:32:12,650:INFO:              joblib: 1.3.2
2024-04-06 10:32:12,650:INFO:             sklearn: 1.4.1.post1
2024-04-06 10:32:12,650:INFO:                pyod: 1.1.3
2024-04-06 10:32:12,650:INFO:            imblearn: 0.12.2
2024-04-06 10:32:12,650:INFO:   category_encoders: 2.6.3
2024-04-06 10:32:12,650:INFO:            lightgbm: 4.3.0
2024-04-06 10:32:12,650:INFO:               numba: 0.59.1
2024-04-06 10:32:12,650:INFO:            requests: 2.31.0
2024-04-06 10:32:12,650:INFO:          matplotlib: 3.7.5
2024-04-06 10:32:12,650:INFO:          scikitplot: 0.3.7
2024-04-06 10:32:12,651:INFO:         yellowbrick: 1.5
2024-04-06 10:32:12,651:INFO:              plotly: 5.20.0
2024-04-06 10:32:12,651:INFO:    plotly-resampler: Not installed
2024-04-06 10:32:12,651:INFO:             kaleido: 0.2.1
2024-04-06 10:32:12,651:INFO:           schemdraw: 0.15
2024-04-06 10:32:12,651:INFO:         statsmodels: 0.14.1
2024-04-06 10:32:12,651:INFO:              sktime: 0.28.0
2024-04-06 10:32:12,651:INFO:               tbats: 1.1.3
2024-04-06 10:32:12,651:INFO:            pmdarima: 2.0.4
2024-04-06 10:32:12,651:INFO:              psutil: 5.9.8
2024-04-06 10:32:12,651:INFO:          markupsafe: 2.1.5
2024-04-06 10:32:12,651:INFO:             pickle5: Not installed
2024-04-06 10:32:12,651:INFO:         cloudpickle: 3.0.0
2024-04-06 10:32:12,652:INFO:         deprecation: 2.1.0
2024-04-06 10:32:12,652:INFO:              xxhash: 3.4.1
2024-04-06 10:32:12,652:INFO:           wurlitzer: 3.0.3
2024-04-06 10:32:12,652:INFO:PyCaret optional dependencies:
2024-04-06 10:32:12,652:INFO:                shap: Not installed
2024-04-06 10:32:12,652:INFO:           interpret: Not installed
2024-04-06 10:32:12,652:INFO:                umap: Not installed
2024-04-06 10:32:12,652:INFO:     ydata_profiling: Not installed
2024-04-06 10:32:12,652:INFO:  explainerdashboard: Not installed
2024-04-06 10:32:12,652:INFO:             autoviz: Not installed
2024-04-06 10:32:12,652:INFO:           fairlearn: Not installed
2024-04-06 10:32:12,652:INFO:          deepchecks: Not installed
2024-04-06 10:32:12,653:INFO:             xgboost: Not installed
2024-04-06 10:32:12,653:INFO:            catboost: Not installed
2024-04-06 10:32:12,653:INFO:              kmodes: Not installed
2024-04-06 10:32:12,653:INFO:             mlxtend: Not installed
2024-04-06 10:32:12,653:INFO:       statsforecast: Not installed
2024-04-06 10:32:12,653:INFO:        tune_sklearn: Not installed
2024-04-06 10:32:12,653:INFO:                 ray: Not installed
2024-04-06 10:32:12,653:INFO:            hyperopt: Not installed
2024-04-06 10:32:12,653:INFO:              optuna: Not installed
2024-04-06 10:32:12,653:INFO:               skopt: Not installed
2024-04-06 10:32:12,653:INFO:              mlflow: 2.11.3
2024-04-06 10:32:12,653:INFO:              gradio: Not installed
2024-04-06 10:32:12,653:INFO:             fastapi: Not installed
2024-04-06 10:32:12,653:INFO:             uvicorn: Not installed
2024-04-06 10:32:12,653:INFO:              m2cgen: Not installed
2024-04-06 10:32:12,653:INFO:           evidently: Not installed
2024-04-06 10:32:12,653:INFO:               fugue: Not installed
2024-04-06 10:32:12,653:INFO:           streamlit: 1.33.0
2024-04-06 10:32:12,654:INFO:             prophet: 1.1.5
2024-04-06 10:32:12,654:INFO:None
2024-04-06 10:32:12,654:INFO:Set up data.
2024-04-06 10:32:12,670:INFO:Set up folding strategy.
2024-04-06 10:32:12,670:INFO:Set up train/test split.
2024-04-06 10:32:12,670:INFO:Set up data.
2024-04-06 10:32:12,672:INFO:Set up index.
2024-04-06 10:32:12,673:INFO:Assigning column types.
2024-04-06 10:32:12,676:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 10:32:12,698:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:32:12,699:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:32:12,711:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:12,711:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:12,730:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:32:12,731:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:32:12,742:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:12,742:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:12,742:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 10:32:12,760:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:32:12,771:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:12,771:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:12,789:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:32:12,800:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:12,800:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:12,800:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 10:32:12,829:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:12,829:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:12,858:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:12,858:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:12,858:INFO:Preparing preprocessing pipeline...
2024-04-06 10:32:12,860:INFO:Set up simple imputation.
2024-04-06 10:32:12,860:INFO:Set up feature normalization.
2024-04-06 10:32:12,870:INFO:Finished creating preprocessing pipeline.
2024-04-06 10:32:12,872:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 10:32:12,872:INFO:Creating final display dataframe.
2024-04-06 10:32:12,901:INFO:Setup _display_container:                     Description             Value
0                    Session id              3363
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              b414
2024-04-06 10:32:12,937:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:12,937:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:12,966:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:12,966:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:12,967:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 10:32:12,967:INFO:setup() successfully completed in 0.33s...............
2024-04-06 10:32:12,968:INFO:Initializing compare_models()
2024-04-06 10:32:12,968:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 10:32:12,968:INFO:Checking exceptions
2024-04-06 10:32:12,970:INFO:Preparing display monitor
2024-04-06 10:32:12,978:INFO:Initializing Logistic Regression
2024-04-06 10:32:12,978:INFO:Total runtime is 1.998742421468099e-06 minutes
2024-04-06 10:32:12,979:INFO:SubProcess create_model() called ==================================
2024-04-06 10:32:12,980:INFO:Initializing create_model()
2024-04-06 10:32:12,980:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30aae7e10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:32:12,980:INFO:Checking exceptions
2024-04-06 10:32:12,980:INFO:Importing libraries
2024-04-06 10:32:12,980:INFO:Copying training dataset
2024-04-06 10:32:12,983:INFO:Defining folds
2024-04-06 10:32:12,983:INFO:Declaring metric variables
2024-04-06 10:32:12,984:INFO:Importing untrained model
2024-04-06 10:32:12,985:INFO:Logistic Regression Imported successfully
2024-04-06 10:32:12,988:INFO:Starting cross validation
2024-04-06 10:32:12,988:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:32:13,134:INFO:Calculating mean and std
2024-04-06 10:32:13,135:INFO:Creating metrics dataframe
2024-04-06 10:32:13,135:INFO:Uploading results into container
2024-04-06 10:32:13,135:INFO:Uploading model into container now
2024-04-06 10:32:13,136:INFO:_master_model_container: 1
2024-04-06 10:32:13,136:INFO:_display_container: 2
2024-04-06 10:32:13,136:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3363, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:32:13,136:INFO:create_model() successfully completed......................................
2024-04-06 10:32:13,318:INFO:SubProcess create_model() end ==================================
2024-04-06 10:32:13,318:INFO:Creating metrics dataframe
2024-04-06 10:32:13,320:INFO:Initializing Decision Tree Classifier
2024-04-06 10:32:13,320:INFO:Total runtime is 0.005699233214060466 minutes
2024-04-06 10:32:13,322:INFO:SubProcess create_model() called ==================================
2024-04-06 10:32:13,322:INFO:Initializing create_model()
2024-04-06 10:32:13,322:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30aae7e10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:32:13,322:INFO:Checking exceptions
2024-04-06 10:32:13,322:INFO:Importing libraries
2024-04-06 10:32:13,322:INFO:Copying training dataset
2024-04-06 10:32:13,324:INFO:Defining folds
2024-04-06 10:32:13,324:INFO:Declaring metric variables
2024-04-06 10:32:13,326:INFO:Importing untrained model
2024-04-06 10:32:13,327:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:32:13,329:INFO:Starting cross validation
2024-04-06 10:32:13,329:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:32:13,412:INFO:Calculating mean and std
2024-04-06 10:32:13,412:INFO:Creating metrics dataframe
2024-04-06 10:32:13,413:INFO:Uploading results into container
2024-04-06 10:32:13,413:INFO:Uploading model into container now
2024-04-06 10:32:13,413:INFO:_master_model_container: 2
2024-04-06 10:32:13,413:INFO:_display_container: 2
2024-04-06 10:32:13,413:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3363, splitter='best')
2024-04-06 10:32:13,413:INFO:create_model() successfully completed......................................
2024-04-06 10:32:13,531:INFO:SubProcess create_model() end ==================================
2024-04-06 10:32:13,531:INFO:Creating metrics dataframe
2024-04-06 10:32:13,533:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 10:32:13,536:INFO:Initializing create_model()
2024-04-06 10:32:13,536:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3363, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:32:13,536:INFO:Checking exceptions
2024-04-06 10:32:13,537:INFO:Importing libraries
2024-04-06 10:32:13,537:INFO:Copying training dataset
2024-04-06 10:32:13,540:INFO:Defining folds
2024-04-06 10:32:13,540:INFO:Declaring metric variables
2024-04-06 10:32:13,540:INFO:Importing untrained model
2024-04-06 10:32:13,540:INFO:Declaring custom model
2024-04-06 10:32:13,540:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:32:13,540:INFO:Cross validation set to False
2024-04-06 10:32:13,540:INFO:Fitting Model
2024-04-06 10:32:13,554:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3363, splitter='best')
2024-04-06 10:32:13,554:INFO:create_model() successfully completed......................................
2024-04-06 10:32:13,706:INFO:Initializing create_model()
2024-04-06 10:32:13,706:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3363, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:32:13,706:INFO:Checking exceptions
2024-04-06 10:32:13,707:INFO:Importing libraries
2024-04-06 10:32:13,708:INFO:Copying training dataset
2024-04-06 10:32:13,710:INFO:Defining folds
2024-04-06 10:32:13,710:INFO:Declaring metric variables
2024-04-06 10:32:13,710:INFO:Importing untrained model
2024-04-06 10:32:13,710:INFO:Declaring custom model
2024-04-06 10:32:13,710:INFO:Logistic Regression Imported successfully
2024-04-06 10:32:13,711:INFO:Cross validation set to False
2024-04-06 10:32:13,711:INFO:Fitting Model
2024-04-06 10:32:13,741:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3363, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:32:13,742:INFO:create_model() successfully completed......................................
2024-04-06 10:32:13,992:INFO:_master_model_container: 2
2024-04-06 10:32:13,992:INFO:_display_container: 2
2024-04-06 10:32:13,992:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3363, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3363, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-06 10:32:13,992:INFO:compare_models() successfully completed......................................
2024-04-06 10:32:13,993:INFO:Initializing predict_model()
2024-04-06 10:32:13,993:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3363, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1684e6b60>)
2024-04-06 10:32:13,993:INFO:Checking exceptions
2024-04-06 10:32:13,993:INFO:Preloading libraries
2024-04-06 10:32:14,780:INFO:Initializing predict_model()
2024-04-06 10:32:14,780:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3363, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1778ece00>)
2024-04-06 10:32:14,780:INFO:Checking exceptions
2024-04-06 10:32:14,780:INFO:Preloading libraries
2024-04-06 10:32:15,281:INFO:Initializing tune_model()
2024-04-06 10:32:15,281:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3363, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-06 10:32:15,281:INFO:Checking exceptions
2024-04-06 10:32:15,312:INFO:Copying training dataset
2024-04-06 10:32:15,319:INFO:Checking base model
2024-04-06 10:32:15,319:INFO:Base model : Decision Tree Classifier
2024-04-06 10:32:15,324:INFO:Declaring metric variables
2024-04-06 10:32:15,327:INFO:Defining Hyperparameters
2024-04-06 10:32:15,503:INFO:Tuning with n_jobs=-1
2024-04-06 10:32:15,504:INFO:Initializing RandomizedSearchCV
2024-04-06 10:32:15,633:INFO:best_params: {'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.0002, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 15, 'actual_estimator__criterion': 'entropy'}
2024-04-06 10:32:15,633:INFO:Hyperparameter search completed
2024-04-06 10:32:15,633:INFO:SubProcess create_model() called ==================================
2024-04-06 10:32:15,633:INFO:Initializing create_model()
2024-04-06 10:32:15,633:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3363, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30e9a8050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 2, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.0002, 'max_features': 'sqrt', 'max_depth': 15, 'criterion': 'entropy'})
2024-04-06 10:32:15,633:INFO:Checking exceptions
2024-04-06 10:32:15,634:INFO:Importing libraries
2024-04-06 10:32:15,634:INFO:Copying training dataset
2024-04-06 10:32:15,635:INFO:Defining folds
2024-04-06 10:32:15,635:INFO:Declaring metric variables
2024-04-06 10:32:15,637:INFO:Importing untrained model
2024-04-06 10:32:15,637:INFO:Declaring custom model
2024-04-06 10:32:15,638:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:32:15,640:INFO:Starting cross validation
2024-04-06 10:32:15,641:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:32:15,693:INFO:Calculating mean and std
2024-04-06 10:32:15,693:INFO:Creating metrics dataframe
2024-04-06 10:32:15,695:INFO:Finalizing model
2024-04-06 10:32:15,703:INFO:Uploading results into container
2024-04-06 10:32:15,704:INFO:Uploading model into container now
2024-04-06 10:32:15,704:INFO:_master_model_container: 3
2024-04-06 10:32:15,704:INFO:_display_container: 5
2024-04-06 10:32:15,704:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=15, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.0002, min_samples_leaf=2,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3363, splitter='best')
2024-04-06 10:32:15,704:INFO:create_model() successfully completed......................................
2024-04-06 10:32:15,832:INFO:SubProcess create_model() end ==================================
2024-04-06 10:32:15,832:INFO:choose_better activated
2024-04-06 10:32:15,833:INFO:SubProcess create_model() called ==================================
2024-04-06 10:32:15,833:INFO:Initializing create_model()
2024-04-06 10:32:15,833:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3363, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:32:15,833:INFO:Checking exceptions
2024-04-06 10:32:15,834:INFO:Importing libraries
2024-04-06 10:32:15,834:INFO:Copying training dataset
2024-04-06 10:32:15,837:INFO:Defining folds
2024-04-06 10:32:15,837:INFO:Declaring metric variables
2024-04-06 10:32:15,837:INFO:Importing untrained model
2024-04-06 10:32:15,837:INFO:Declaring custom model
2024-04-06 10:32:15,837:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:32:15,837:INFO:Starting cross validation
2024-04-06 10:32:15,837:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:32:15,907:INFO:Calculating mean and std
2024-04-06 10:32:15,907:INFO:Creating metrics dataframe
2024-04-06 10:32:15,908:INFO:Finalizing model
2024-04-06 10:32:15,921:INFO:Uploading results into container
2024-04-06 10:32:15,921:INFO:Uploading model into container now
2024-04-06 10:32:15,921:INFO:_master_model_container: 4
2024-04-06 10:32:15,921:INFO:_display_container: 6
2024-04-06 10:32:15,921:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3363, splitter='best')
2024-04-06 10:32:15,921:INFO:create_model() successfully completed......................................
2024-04-06 10:32:16,035:INFO:SubProcess create_model() end ==================================
2024-04-06 10:32:16,036:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3363, splitter='best') result for F1 is 0.5204
2024-04-06 10:32:16,036:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=15, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.0002, min_samples_leaf=2,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3363, splitter='best') result for F1 is 0.5119
2024-04-06 10:32:16,036:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3363, splitter='best') is best model
2024-04-06 10:32:16,036:INFO:choose_better completed
2024-04-06 10:32:16,036:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-06 10:32:16,040:INFO:_master_model_container: 4
2024-04-06 10:32:16,040:INFO:_display_container: 5
2024-04-06 10:32:16,040:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3363, splitter='best')
2024-04-06 10:32:16,040:INFO:tune_model() successfully completed......................................
2024-04-06 10:32:16,153:INFO:Initializing predict_model()
2024-04-06 10:32:16,153:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3363, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1778ee3e0>)
2024-04-06 10:32:16,153:INFO:Checking exceptions
2024-04-06 10:32:16,153:INFO:Preloading libraries
2024-04-06 10:32:16,365:INFO:Initializing finalize_model()
2024-04-06 10:32:16,365:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3363, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-06 10:32:16,365:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3363, splitter='best')
2024-04-06 10:32:16,367:INFO:Initializing create_model()
2024-04-06 10:32:16,367:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3363, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:32:16,367:INFO:Checking exceptions
2024-04-06 10:32:16,367:INFO:Importing libraries
2024-04-06 10:32:16,367:INFO:Copying training dataset
2024-04-06 10:32:16,368:INFO:Defining folds
2024-04-06 10:32:16,368:INFO:Declaring metric variables
2024-04-06 10:32:16,368:INFO:Importing untrained model
2024-04-06 10:32:16,368:INFO:Declaring custom model
2024-04-06 10:32:16,368:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:32:16,368:INFO:Cross validation set to False
2024-04-06 10:32:16,368:INFO:Fitting Model
2024-04-06 10:32:16,420:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=3363,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:32:16,420:INFO:create_model() successfully completed......................................
2024-04-06 10:32:16,540:INFO:_master_model_container: 4
2024-04-06 10:32:16,540:INFO:_display_container: 6
2024-04-06 10:32:16,541:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=3363,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:32:16,541:INFO:finalize_model() successfully completed......................................
2024-04-06 10:32:16,652:INFO:Initializing save_model()
2024-04-06 10:32:16,652:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=3363,
                                        splitter='best'))],
         verbose=False), model_name=./kobe, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-06 10:32:16,652:INFO:Adding model into prep_pipe
2024-04-06 10:32:16,652:WARNING:Only Model saved as it was a pipeline.
2024-04-06 10:32:16,655:INFO:./kobe.pkl saved in current working directory
2024-04-06 10:32:16,657:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=3363,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:32:16,657:INFO:save_model() successfully completed......................................
2024-04-06 10:32:16,766:INFO:Initializing load_model()
2024-04-06 10:32:16,766:INFO:load_model(model_name=./kobe, platform=None, authentication=None, verbose=True)
2024-04-06 10:32:16,775:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-06 10:32:18,543:WARNING:/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/ipykernel_3194/1407620280.py:109: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-06 10:32:42,770:INFO:PyCaret ClassificationExperiment
2024-04-06 10:32:42,770:INFO:Logging name: clf-default-name
2024-04-06 10:32:42,770:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 10:32:42,770:INFO:version 3.3.0
2024-04-06 10:32:42,770:INFO:Initializing setup()
2024-04-06 10:32:42,770:INFO:self.USI: 043f
2024-04-06 10:32:42,770:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 10:32:42,770:INFO:Checking environment
2024-04-06 10:32:42,770:INFO:python_version: 3.11.3
2024-04-06 10:32:42,770:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 10:32:42,770:INFO:machine: arm64
2024-04-06 10:32:42,770:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:32:42,770:INFO:Memory: svmem(total=8589934592, available=1758871552, percent=79.5, used=2825125888, free=21086208, active=1751285760, inactive=1733820416, wired=1073840128)
2024-04-06 10:32:42,770:INFO:Physical Core: 8
2024-04-06 10:32:42,770:INFO:Logical Core: 8
2024-04-06 10:32:42,770:INFO:Checking libraries
2024-04-06 10:32:42,770:INFO:System:
2024-04-06 10:32:42,770:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 10:32:42,770:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 10:32:42,770:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:32:42,770:INFO:PyCaret required dependencies:
2024-04-06 10:32:42,771:INFO:                 pip: 24.0
2024-04-06 10:32:42,771:INFO:          setuptools: 65.5.0
2024-04-06 10:32:42,771:INFO:             pycaret: 3.3.0
2024-04-06 10:32:42,771:INFO:             IPython: 8.23.0
2024-04-06 10:32:42,771:INFO:          ipywidgets: 8.1.2
2024-04-06 10:32:42,771:INFO:                tqdm: 4.66.2
2024-04-06 10:32:42,771:INFO:               numpy: 1.26.4
2024-04-06 10:32:42,771:INFO:              pandas: 2.1.4
2024-04-06 10:32:42,771:INFO:              jinja2: 3.1.3
2024-04-06 10:32:42,771:INFO:               scipy: 1.11.4
2024-04-06 10:32:42,771:INFO:              joblib: 1.3.2
2024-04-06 10:32:42,771:INFO:             sklearn: 1.4.1.post1
2024-04-06 10:32:42,771:INFO:                pyod: 1.1.3
2024-04-06 10:32:42,771:INFO:            imblearn: 0.12.2
2024-04-06 10:32:42,771:INFO:   category_encoders: 2.6.3
2024-04-06 10:32:42,771:INFO:            lightgbm: 4.3.0
2024-04-06 10:32:42,771:INFO:               numba: 0.59.1
2024-04-06 10:32:42,771:INFO:            requests: 2.31.0
2024-04-06 10:32:42,771:INFO:          matplotlib: 3.7.5
2024-04-06 10:32:42,771:INFO:          scikitplot: 0.3.7
2024-04-06 10:32:42,771:INFO:         yellowbrick: 1.5
2024-04-06 10:32:42,771:INFO:              plotly: 5.20.0
2024-04-06 10:32:42,771:INFO:    plotly-resampler: Not installed
2024-04-06 10:32:42,771:INFO:             kaleido: 0.2.1
2024-04-06 10:32:42,771:INFO:           schemdraw: 0.15
2024-04-06 10:32:42,771:INFO:         statsmodels: 0.14.1
2024-04-06 10:32:42,771:INFO:              sktime: 0.28.0
2024-04-06 10:32:42,771:INFO:               tbats: 1.1.3
2024-04-06 10:32:42,771:INFO:            pmdarima: 2.0.4
2024-04-06 10:32:42,771:INFO:              psutil: 5.9.8
2024-04-06 10:32:42,771:INFO:          markupsafe: 2.1.5
2024-04-06 10:32:42,771:INFO:             pickle5: Not installed
2024-04-06 10:32:42,771:INFO:         cloudpickle: 3.0.0
2024-04-06 10:32:42,771:INFO:         deprecation: 2.1.0
2024-04-06 10:32:42,771:INFO:              xxhash: 3.4.1
2024-04-06 10:32:42,771:INFO:           wurlitzer: 3.0.3
2024-04-06 10:32:42,771:INFO:PyCaret optional dependencies:
2024-04-06 10:32:42,771:INFO:                shap: Not installed
2024-04-06 10:32:42,771:INFO:           interpret: Not installed
2024-04-06 10:32:42,771:INFO:                umap: Not installed
2024-04-06 10:32:42,771:INFO:     ydata_profiling: Not installed
2024-04-06 10:32:42,771:INFO:  explainerdashboard: Not installed
2024-04-06 10:32:42,771:INFO:             autoviz: Not installed
2024-04-06 10:32:42,771:INFO:           fairlearn: Not installed
2024-04-06 10:32:42,771:INFO:          deepchecks: Not installed
2024-04-06 10:32:42,771:INFO:             xgboost: Not installed
2024-04-06 10:32:42,771:INFO:            catboost: Not installed
2024-04-06 10:32:42,771:INFO:              kmodes: Not installed
2024-04-06 10:32:42,771:INFO:             mlxtend: Not installed
2024-04-06 10:32:42,771:INFO:       statsforecast: Not installed
2024-04-06 10:32:42,771:INFO:        tune_sklearn: Not installed
2024-04-06 10:32:42,772:INFO:                 ray: Not installed
2024-04-06 10:32:42,772:INFO:            hyperopt: Not installed
2024-04-06 10:32:42,772:INFO:              optuna: Not installed
2024-04-06 10:32:42,772:INFO:               skopt: Not installed
2024-04-06 10:32:42,772:INFO:              mlflow: 2.11.3
2024-04-06 10:32:42,772:INFO:              gradio: Not installed
2024-04-06 10:32:42,772:INFO:             fastapi: Not installed
2024-04-06 10:32:42,772:INFO:             uvicorn: Not installed
2024-04-06 10:32:42,772:INFO:              m2cgen: Not installed
2024-04-06 10:32:42,772:INFO:           evidently: Not installed
2024-04-06 10:32:42,772:INFO:               fugue: Not installed
2024-04-06 10:32:42,772:INFO:           streamlit: 1.33.0
2024-04-06 10:32:42,772:INFO:             prophet: 1.1.5
2024-04-06 10:32:42,772:INFO:None
2024-04-06 10:32:42,772:INFO:Set up data.
2024-04-06 10:32:42,784:INFO:Set up folding strategy.
2024-04-06 10:32:42,784:INFO:Set up train/test split.
2024-04-06 10:32:42,784:INFO:Set up data.
2024-04-06 10:32:42,789:INFO:Set up index.
2024-04-06 10:32:42,790:INFO:Assigning column types.
2024-04-06 10:32:42,796:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 10:32:42,818:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:32:42,819:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:32:42,831:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:42,831:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:42,850:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:32:42,850:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:32:42,862:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:42,862:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:42,862:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 10:32:42,880:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:32:42,891:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:42,891:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:42,910:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:32:42,921:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:42,921:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:42,921:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 10:32:42,950:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:42,950:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:42,980:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:42,980:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:42,981:INFO:Preparing preprocessing pipeline...
2024-04-06 10:32:42,981:INFO:Set up simple imputation.
2024-04-06 10:32:42,981:INFO:Set up feature normalization.
2024-04-06 10:32:42,991:INFO:Finished creating preprocessing pipeline.
2024-04-06 10:32:42,993:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 10:32:42,993:INFO:Creating final display dataframe.
2024-04-06 10:32:43,023:INFO:Setup _display_container:                     Description             Value
0                    Session id              6075
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              043f
2024-04-06 10:32:43,058:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:43,058:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:43,089:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:43,090:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:32:43,090:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 10:32:43,095:INFO:setup() successfully completed in 0.33s...............
2024-04-06 10:32:43,096:INFO:Initializing compare_models()
2024-04-06 10:32:43,096:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30d8bcf10>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x30d8bcf10>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 10:32:43,096:INFO:Checking exceptions
2024-04-06 10:32:43,098:INFO:Preparing display monitor
2024-04-06 10:32:43,107:INFO:Initializing Logistic Regression
2024-04-06 10:32:43,107:INFO:Total runtime is 1.3669331868489583e-06 minutes
2024-04-06 10:32:43,108:INFO:SubProcess create_model() called ==================================
2024-04-06 10:32:43,108:INFO:Initializing create_model()
2024-04-06 10:32:43,108:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30d8bcf10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30e980ad0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:32:43,108:INFO:Checking exceptions
2024-04-06 10:32:43,108:INFO:Importing libraries
2024-04-06 10:32:43,109:INFO:Copying training dataset
2024-04-06 10:32:43,112:INFO:Defining folds
2024-04-06 10:32:43,112:INFO:Declaring metric variables
2024-04-06 10:32:43,114:INFO:Importing untrained model
2024-04-06 10:32:43,117:INFO:Logistic Regression Imported successfully
2024-04-06 10:32:43,121:INFO:Starting cross validation
2024-04-06 10:32:43,121:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:32:43,263:INFO:Calculating mean and std
2024-04-06 10:32:43,264:INFO:Creating metrics dataframe
2024-04-06 10:32:43,265:INFO:Uploading results into container
2024-04-06 10:32:43,265:INFO:Uploading model into container now
2024-04-06 10:32:43,265:INFO:_master_model_container: 1
2024-04-06 10:32:43,265:INFO:_display_container: 2
2024-04-06 10:32:43,265:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6075, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:32:43,265:INFO:create_model() successfully completed......................................
2024-04-06 10:32:43,449:INFO:SubProcess create_model() end ==================================
2024-04-06 10:32:43,449:INFO:Creating metrics dataframe
2024-04-06 10:32:43,452:INFO:Initializing Decision Tree Classifier
2024-04-06 10:32:43,452:INFO:Total runtime is 0.005747318267822266 minutes
2024-04-06 10:32:43,453:INFO:SubProcess create_model() called ==================================
2024-04-06 10:32:43,454:INFO:Initializing create_model()
2024-04-06 10:32:43,454:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30d8bcf10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30e980ad0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:32:43,454:INFO:Checking exceptions
2024-04-06 10:32:43,454:INFO:Importing libraries
2024-04-06 10:32:43,454:INFO:Copying training dataset
2024-04-06 10:32:43,456:INFO:Defining folds
2024-04-06 10:32:43,456:INFO:Declaring metric variables
2024-04-06 10:32:43,457:INFO:Importing untrained model
2024-04-06 10:32:43,459:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:32:43,461:INFO:Starting cross validation
2024-04-06 10:32:43,462:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:32:43,540:INFO:Calculating mean and std
2024-04-06 10:32:43,540:INFO:Creating metrics dataframe
2024-04-06 10:32:43,541:INFO:Uploading results into container
2024-04-06 10:32:43,541:INFO:Uploading model into container now
2024-04-06 10:32:43,541:INFO:_master_model_container: 2
2024-04-06 10:32:43,541:INFO:_display_container: 2
2024-04-06 10:32:43,542:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6075, splitter='best')
2024-04-06 10:32:43,542:INFO:create_model() successfully completed......................................
2024-04-06 10:32:43,653:INFO:SubProcess create_model() end ==================================
2024-04-06 10:32:43,653:INFO:Creating metrics dataframe
2024-04-06 10:32:43,656:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 10:32:43,659:INFO:Initializing create_model()
2024-04-06 10:32:43,659:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30d8bcf10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6075, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:32:43,659:INFO:Checking exceptions
2024-04-06 10:32:43,660:INFO:Importing libraries
2024-04-06 10:32:43,660:INFO:Copying training dataset
2024-04-06 10:32:43,662:INFO:Defining folds
2024-04-06 10:32:43,662:INFO:Declaring metric variables
2024-04-06 10:32:43,662:INFO:Importing untrained model
2024-04-06 10:32:43,662:INFO:Declaring custom model
2024-04-06 10:32:43,662:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:32:43,662:INFO:Cross validation set to False
2024-04-06 10:32:43,662:INFO:Fitting Model
2024-04-06 10:32:43,676:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6075, splitter='best')
2024-04-06 10:32:43,676:INFO:create_model() successfully completed......................................
2024-04-06 10:32:43,791:INFO:Initializing create_model()
2024-04-06 10:32:43,791:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30d8bcf10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6075, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:32:43,791:INFO:Checking exceptions
2024-04-06 10:32:43,791:INFO:Importing libraries
2024-04-06 10:32:43,792:INFO:Copying training dataset
2024-04-06 10:32:43,793:INFO:Defining folds
2024-04-06 10:32:43,794:INFO:Declaring metric variables
2024-04-06 10:32:43,794:INFO:Importing untrained model
2024-04-06 10:32:43,794:INFO:Declaring custom model
2024-04-06 10:32:43,794:INFO:Logistic Regression Imported successfully
2024-04-06 10:32:43,794:INFO:Cross validation set to False
2024-04-06 10:32:43,794:INFO:Fitting Model
2024-04-06 10:32:43,800:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6075, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:32:43,800:INFO:create_model() successfully completed......................................
2024-04-06 10:32:44,019:INFO:_master_model_container: 2
2024-04-06 10:32:44,019:INFO:_display_container: 2
2024-04-06 10:32:44,022:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6075, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6075, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-06 10:32:44,022:INFO:compare_models() successfully completed......................................
2024-04-06 10:32:44,023:INFO:Initializing predict_model()
2024-04-06 10:32:44,023:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30d8bcf10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6075, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x175333380>)
2024-04-06 10:32:44,023:INFO:Checking exceptions
2024-04-06 10:32:44,023:INFO:Preloading libraries
2024-04-06 10:32:44,730:INFO:Initializing predict_model()
2024-04-06 10:32:44,730:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30d8bcf10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6075, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30fa3ae80>)
2024-04-06 10:32:44,730:INFO:Checking exceptions
2024-04-06 10:32:44,730:INFO:Preloading libraries
2024-04-06 10:32:45,281:INFO:Initializing tune_model()
2024-04-06 10:32:45,281:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30d8bcf10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6075, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-06 10:32:45,281:INFO:Checking exceptions
2024-04-06 10:32:45,334:INFO:Copying training dataset
2024-04-06 10:32:45,336:INFO:Checking base model
2024-04-06 10:32:45,336:INFO:Base model : Decision Tree Classifier
2024-04-06 10:32:45,343:INFO:Declaring metric variables
2024-04-06 10:32:45,345:INFO:Defining Hyperparameters
2024-04-06 10:32:45,489:INFO:Tuning with n_jobs=-1
2024-04-06 10:32:45,489:INFO:Initializing RandomizedSearchCV
2024-04-06 10:32:45,582:INFO:best_params: {'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0.0005, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 5, 'actual_estimator__criterion': 'gini'}
2024-04-06 10:32:45,582:INFO:Hyperparameter search completed
2024-04-06 10:32:45,582:INFO:SubProcess create_model() called ==================================
2024-04-06 10:32:45,582:INFO:Initializing create_model()
2024-04-06 10:32:45,582:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30d8bcf10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6075, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30fdc3810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 9, 'min_samples_leaf': 6, 'min_impurity_decrease': 0.0005, 'max_features': 'sqrt', 'max_depth': 5, 'criterion': 'gini'})
2024-04-06 10:32:45,582:INFO:Checking exceptions
2024-04-06 10:32:45,582:INFO:Importing libraries
2024-04-06 10:32:45,582:INFO:Copying training dataset
2024-04-06 10:32:45,584:INFO:Defining folds
2024-04-06 10:32:45,584:INFO:Declaring metric variables
2024-04-06 10:32:45,585:INFO:Importing untrained model
2024-04-06 10:32:45,585:INFO:Declaring custom model
2024-04-06 10:32:45,587:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:32:45,589:INFO:Starting cross validation
2024-04-06 10:32:45,590:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:32:45,609:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-06 10:32:45,612:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-06 10:32:45,613:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-06 10:32:45,614:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-06 10:32:45,617:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-06 10:32:45,623:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-06 10:32:45,624:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-06 10:32:45,643:INFO:Calculating mean and std
2024-04-06 10:32:45,643:INFO:Creating metrics dataframe
2024-04-06 10:32:45,645:INFO:Finalizing model
2024-04-06 10:32:45,650:INFO:Uploading results into container
2024-04-06 10:32:45,651:INFO:Uploading model into container now
2024-04-06 10:32:45,651:INFO:_master_model_container: 3
2024-04-06 10:32:45,651:INFO:_display_container: 5
2024-04-06 10:32:45,652:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=5, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.0005, min_samples_leaf=6,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6075, splitter='best')
2024-04-06 10:32:45,652:INFO:create_model() successfully completed......................................
2024-04-06 10:32:45,769:INFO:SubProcess create_model() end ==================================
2024-04-06 10:32:45,769:INFO:choose_better activated
2024-04-06 10:32:45,771:INFO:SubProcess create_model() called ==================================
2024-04-06 10:32:45,771:INFO:Initializing create_model()
2024-04-06 10:32:45,771:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30d8bcf10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6075, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:32:45,771:INFO:Checking exceptions
2024-04-06 10:32:45,771:INFO:Importing libraries
2024-04-06 10:32:45,771:INFO:Copying training dataset
2024-04-06 10:32:45,774:INFO:Defining folds
2024-04-06 10:32:45,774:INFO:Declaring metric variables
2024-04-06 10:32:45,774:INFO:Importing untrained model
2024-04-06 10:32:45,774:INFO:Declaring custom model
2024-04-06 10:32:45,774:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:32:45,774:INFO:Starting cross validation
2024-04-06 10:32:45,774:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:32:45,840:INFO:Calculating mean and std
2024-04-06 10:32:45,840:INFO:Creating metrics dataframe
2024-04-06 10:32:45,841:INFO:Finalizing model
2024-04-06 10:32:45,854:INFO:Uploading results into container
2024-04-06 10:32:45,855:INFO:Uploading model into container now
2024-04-06 10:32:45,855:INFO:_master_model_container: 4
2024-04-06 10:32:45,855:INFO:_display_container: 6
2024-04-06 10:32:45,855:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6075, splitter='best')
2024-04-06 10:32:45,855:INFO:create_model() successfully completed......................................
2024-04-06 10:32:45,965:INFO:SubProcess create_model() end ==================================
2024-04-06 10:32:45,966:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6075, splitter='best') result for F1 is 0.5431
2024-04-06 10:32:45,966:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=5, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.0005, min_samples_leaf=6,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6075, splitter='best') result for F1 is 0.1351
2024-04-06 10:32:45,966:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6075, splitter='best') is best model
2024-04-06 10:32:45,966:INFO:choose_better completed
2024-04-06 10:32:45,966:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-06 10:32:45,970:INFO:_master_model_container: 4
2024-04-06 10:32:45,970:INFO:_display_container: 5
2024-04-06 10:32:45,970:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6075, splitter='best')
2024-04-06 10:32:45,970:INFO:tune_model() successfully completed......................................
2024-04-06 10:32:46,082:INFO:Initializing predict_model()
2024-04-06 10:32:46,082:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30d8bcf10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6075, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30844b240>)
2024-04-06 10:32:46,082:INFO:Checking exceptions
2024-04-06 10:32:46,082:INFO:Preloading libraries
2024-04-06 10:32:46,257:INFO:Initializing finalize_model()
2024-04-06 10:32:46,257:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30d8bcf10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6075, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-06 10:32:46,257:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6075, splitter='best')
2024-04-06 10:32:46,258:INFO:Initializing create_model()
2024-04-06 10:32:46,259:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30d8bcf10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6075, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:32:46,259:INFO:Checking exceptions
2024-04-06 10:32:46,259:INFO:Importing libraries
2024-04-06 10:32:46,259:INFO:Copying training dataset
2024-04-06 10:32:46,259:INFO:Defining folds
2024-04-06 10:32:46,259:INFO:Declaring metric variables
2024-04-06 10:32:46,259:INFO:Importing untrained model
2024-04-06 10:32:46,259:INFO:Declaring custom model
2024-04-06 10:32:46,260:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:32:46,260:INFO:Cross validation set to False
2024-04-06 10:32:46,260:INFO:Fitting Model
2024-04-06 10:32:46,312:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6075,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:32:46,312:INFO:create_model() successfully completed......................................
2024-04-06 10:32:46,424:INFO:_master_model_container: 4
2024-04-06 10:32:46,424:INFO:_display_container: 6
2024-04-06 10:32:46,425:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6075,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:32:46,426:INFO:finalize_model() successfully completed......................................
2024-04-06 10:32:46,541:INFO:Initializing save_model()
2024-04-06 10:32:46,541:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6075,
                                        splitter='best'))],
         verbose=False), model_name=./kobe, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-06 10:32:46,541:INFO:Adding model into prep_pipe
2024-04-06 10:32:46,541:WARNING:Only Model saved as it was a pipeline.
2024-04-06 10:32:46,543:INFO:./kobe.pkl saved in current working directory
2024-04-06 10:32:46,545:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6075,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:32:46,545:INFO:save_model() successfully completed......................................
2024-04-06 10:32:46,663:INFO:Initializing load_model()
2024-04-06 10:32:46,663:INFO:load_model(model_name=./kobe, platform=None, authentication=None, verbose=True)
2024-04-06 10:32:46,673:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-06 10:32:48,327:WARNING:/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/ipykernel_3194/3146931149.py:109: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-06 10:34:26,199:INFO:PyCaret ClassificationExperiment
2024-04-06 10:34:26,199:INFO:Logging name: clf-default-name
2024-04-06 10:34:26,199:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 10:34:26,199:INFO:version 3.3.0
2024-04-06 10:34:26,199:INFO:Initializing setup()
2024-04-06 10:34:26,199:INFO:self.USI: 89f1
2024-04-06 10:34:26,199:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 10:34:26,199:INFO:Checking environment
2024-04-06 10:34:26,199:INFO:python_version: 3.11.3
2024-04-06 10:34:26,199:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 10:34:26,199:INFO:machine: arm64
2024-04-06 10:34:26,199:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:34:26,199:INFO:Memory: svmem(total=8589934592, available=1657110528, percent=80.7, used=2689449984, free=33996800, active=1637810176, inactive=1590247424, wired=1051639808)
2024-04-06 10:34:26,199:INFO:Physical Core: 8
2024-04-06 10:34:26,199:INFO:Logical Core: 8
2024-04-06 10:34:26,199:INFO:Checking libraries
2024-04-06 10:34:26,199:INFO:System:
2024-04-06 10:34:26,199:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 10:34:26,199:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 10:34:26,199:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:34:26,199:INFO:PyCaret required dependencies:
2024-04-06 10:34:26,199:INFO:                 pip: 24.0
2024-04-06 10:34:26,199:INFO:          setuptools: 65.5.0
2024-04-06 10:34:26,199:INFO:             pycaret: 3.3.0
2024-04-06 10:34:26,199:INFO:             IPython: 8.23.0
2024-04-06 10:34:26,200:INFO:          ipywidgets: 8.1.2
2024-04-06 10:34:26,200:INFO:                tqdm: 4.66.2
2024-04-06 10:34:26,200:INFO:               numpy: 1.26.4
2024-04-06 10:34:26,200:INFO:              pandas: 2.1.4
2024-04-06 10:34:26,200:INFO:              jinja2: 3.1.3
2024-04-06 10:34:26,200:INFO:               scipy: 1.11.4
2024-04-06 10:34:26,200:INFO:              joblib: 1.3.2
2024-04-06 10:34:26,200:INFO:             sklearn: 1.4.1.post1
2024-04-06 10:34:26,200:INFO:                pyod: 1.1.3
2024-04-06 10:34:26,200:INFO:            imblearn: 0.12.2
2024-04-06 10:34:26,200:INFO:   category_encoders: 2.6.3
2024-04-06 10:34:26,200:INFO:            lightgbm: 4.3.0
2024-04-06 10:34:26,200:INFO:               numba: 0.59.1
2024-04-06 10:34:26,200:INFO:            requests: 2.31.0
2024-04-06 10:34:26,200:INFO:          matplotlib: 3.7.5
2024-04-06 10:34:26,200:INFO:          scikitplot: 0.3.7
2024-04-06 10:34:26,200:INFO:         yellowbrick: 1.5
2024-04-06 10:34:26,200:INFO:              plotly: 5.20.0
2024-04-06 10:34:26,200:INFO:    plotly-resampler: Not installed
2024-04-06 10:34:26,200:INFO:             kaleido: 0.2.1
2024-04-06 10:34:26,200:INFO:           schemdraw: 0.15
2024-04-06 10:34:26,200:INFO:         statsmodels: 0.14.1
2024-04-06 10:34:26,200:INFO:              sktime: 0.28.0
2024-04-06 10:34:26,200:INFO:               tbats: 1.1.3
2024-04-06 10:34:26,200:INFO:            pmdarima: 2.0.4
2024-04-06 10:34:26,200:INFO:              psutil: 5.9.8
2024-04-06 10:34:26,200:INFO:          markupsafe: 2.1.5
2024-04-06 10:34:26,200:INFO:             pickle5: Not installed
2024-04-06 10:34:26,200:INFO:         cloudpickle: 3.0.0
2024-04-06 10:34:26,200:INFO:         deprecation: 2.1.0
2024-04-06 10:34:26,200:INFO:              xxhash: 3.4.1
2024-04-06 10:34:26,200:INFO:           wurlitzer: 3.0.3
2024-04-06 10:34:26,200:INFO:PyCaret optional dependencies:
2024-04-06 10:34:26,200:INFO:                shap: Not installed
2024-04-06 10:34:26,200:INFO:           interpret: Not installed
2024-04-06 10:34:26,200:INFO:                umap: Not installed
2024-04-06 10:34:26,200:INFO:     ydata_profiling: Not installed
2024-04-06 10:34:26,200:INFO:  explainerdashboard: Not installed
2024-04-06 10:34:26,200:INFO:             autoviz: Not installed
2024-04-06 10:34:26,200:INFO:           fairlearn: Not installed
2024-04-06 10:34:26,200:INFO:          deepchecks: Not installed
2024-04-06 10:34:26,200:INFO:             xgboost: Not installed
2024-04-06 10:34:26,200:INFO:            catboost: Not installed
2024-04-06 10:34:26,200:INFO:              kmodes: Not installed
2024-04-06 10:34:26,200:INFO:             mlxtend: Not installed
2024-04-06 10:34:26,200:INFO:       statsforecast: Not installed
2024-04-06 10:34:26,200:INFO:        tune_sklearn: Not installed
2024-04-06 10:34:26,200:INFO:                 ray: Not installed
2024-04-06 10:34:26,200:INFO:            hyperopt: Not installed
2024-04-06 10:34:26,200:INFO:              optuna: Not installed
2024-04-06 10:34:26,200:INFO:               skopt: Not installed
2024-04-06 10:34:26,200:INFO:              mlflow: 2.11.3
2024-04-06 10:34:26,200:INFO:              gradio: Not installed
2024-04-06 10:34:26,200:INFO:             fastapi: Not installed
2024-04-06 10:34:26,200:INFO:             uvicorn: Not installed
2024-04-06 10:34:26,200:INFO:              m2cgen: Not installed
2024-04-06 10:34:26,200:INFO:           evidently: Not installed
2024-04-06 10:34:26,200:INFO:               fugue: Not installed
2024-04-06 10:34:26,200:INFO:           streamlit: 1.33.0
2024-04-06 10:34:26,200:INFO:             prophet: 1.1.5
2024-04-06 10:34:26,200:INFO:None
2024-04-06 10:34:26,200:INFO:Set up data.
2024-04-06 10:34:26,204:INFO:Set up folding strategy.
2024-04-06 10:34:26,204:INFO:Set up train/test split.
2024-04-06 10:34:26,204:INFO:Set up data.
2024-04-06 10:34:26,206:INFO:Set up index.
2024-04-06 10:34:26,207:INFO:Assigning column types.
2024-04-06 10:34:26,210:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 10:34:26,230:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:34:26,231:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:34:26,243:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:26,243:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:26,262:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:34:26,262:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:34:26,273:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:26,273:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:26,273:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 10:34:26,292:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:34:26,304:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:26,304:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:26,322:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:34:26,333:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:26,334:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:26,334:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 10:34:26,363:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:26,363:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:26,392:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:26,393:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:26,393:INFO:Preparing preprocessing pipeline...
2024-04-06 10:34:26,394:INFO:Set up simple imputation.
2024-04-06 10:34:26,394:INFO:Set up feature normalization.
2024-04-06 10:34:26,406:INFO:Finished creating preprocessing pipeline.
2024-04-06 10:34:26,408:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 10:34:26,408:INFO:Creating final display dataframe.
2024-04-06 10:34:26,438:INFO:Setup _display_container:                     Description             Value
0                    Session id              8123
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              89f1
2024-04-06 10:34:26,471:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:26,472:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:26,504:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:26,504:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:26,504:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 10:34:26,505:INFO:setup() successfully completed in 0.31s...............
2024-04-06 10:34:26,506:INFO:Initializing compare_models()
2024-04-06 10:34:26,506:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fa342d0>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x30fa342d0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 10:34:26,506:INFO:Checking exceptions
2024-04-06 10:34:26,508:INFO:Preparing display monitor
2024-04-06 10:34:26,517:INFO:Initializing Logistic Regression
2024-04-06 10:34:26,517:INFO:Total runtime is 2.1139780680338543e-06 minutes
2024-04-06 10:34:26,519:INFO:SubProcess create_model() called ==================================
2024-04-06 10:34:26,519:INFO:Initializing create_model()
2024-04-06 10:34:26,519:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fa342d0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x173d5c050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:34:26,519:INFO:Checking exceptions
2024-04-06 10:34:26,519:INFO:Importing libraries
2024-04-06 10:34:26,519:INFO:Copying training dataset
2024-04-06 10:34:26,522:INFO:Defining folds
2024-04-06 10:34:26,523:INFO:Declaring metric variables
2024-04-06 10:34:26,543:INFO:Importing untrained model
2024-04-06 10:34:26,549:INFO:Logistic Regression Imported successfully
2024-04-06 10:34:26,567:INFO:Starting cross validation
2024-04-06 10:34:26,568:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:34:26,677:INFO:Calculating mean and std
2024-04-06 10:34:26,677:INFO:Creating metrics dataframe
2024-04-06 10:34:26,678:INFO:Uploading results into container
2024-04-06 10:34:26,678:INFO:Uploading model into container now
2024-04-06 10:34:26,679:INFO:_master_model_container: 1
2024-04-06 10:34:26,679:INFO:_display_container: 2
2024-04-06 10:34:26,679:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:34:26,679:INFO:create_model() successfully completed......................................
2024-04-06 10:34:26,912:INFO:SubProcess create_model() end ==================================
2024-04-06 10:34:26,912:INFO:Creating metrics dataframe
2024-04-06 10:34:26,916:INFO:Initializing Decision Tree Classifier
2024-04-06 10:34:26,916:INFO:Total runtime is 0.006646267573038736 minutes
2024-04-06 10:34:26,918:INFO:SubProcess create_model() called ==================================
2024-04-06 10:34:26,918:INFO:Initializing create_model()
2024-04-06 10:34:26,918:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fa342d0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x173d5c050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:34:26,918:INFO:Checking exceptions
2024-04-06 10:34:26,918:INFO:Importing libraries
2024-04-06 10:34:26,918:INFO:Copying training dataset
2024-04-06 10:34:26,921:INFO:Defining folds
2024-04-06 10:34:26,921:INFO:Declaring metric variables
2024-04-06 10:34:26,922:INFO:Importing untrained model
2024-04-06 10:34:26,923:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:34:26,926:INFO:Starting cross validation
2024-04-06 10:34:26,927:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:34:27,016:INFO:Calculating mean and std
2024-04-06 10:34:27,016:INFO:Creating metrics dataframe
2024-04-06 10:34:27,017:INFO:Uploading results into container
2024-04-06 10:34:27,017:INFO:Uploading model into container now
2024-04-06 10:34:27,017:INFO:_master_model_container: 2
2024-04-06 10:34:27,017:INFO:_display_container: 2
2024-04-06 10:34:27,017:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8123, splitter='best')
2024-04-06 10:34:27,017:INFO:create_model() successfully completed......................................
2024-04-06 10:34:27,133:INFO:SubProcess create_model() end ==================================
2024-04-06 10:34:27,133:INFO:Creating metrics dataframe
2024-04-06 10:34:27,135:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 10:34:27,138:INFO:Initializing create_model()
2024-04-06 10:34:27,138:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fa342d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:34:27,138:INFO:Checking exceptions
2024-04-06 10:34:27,139:INFO:Importing libraries
2024-04-06 10:34:27,139:INFO:Copying training dataset
2024-04-06 10:34:27,142:INFO:Defining folds
2024-04-06 10:34:27,142:INFO:Declaring metric variables
2024-04-06 10:34:27,142:INFO:Importing untrained model
2024-04-06 10:34:27,142:INFO:Declaring custom model
2024-04-06 10:34:27,142:INFO:Logistic Regression Imported successfully
2024-04-06 10:34:27,143:INFO:Cross validation set to False
2024-04-06 10:34:27,143:INFO:Fitting Model
2024-04-06 10:34:27,162:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:34:27,162:INFO:create_model() successfully completed......................................
2024-04-06 10:34:27,387:INFO:Initializing create_model()
2024-04-06 10:34:27,394:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fa342d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:34:27,394:INFO:Checking exceptions
2024-04-06 10:34:27,396:INFO:Importing libraries
2024-04-06 10:34:27,396:INFO:Copying training dataset
2024-04-06 10:34:27,402:INFO:Defining folds
2024-04-06 10:34:27,405:INFO:Declaring metric variables
2024-04-06 10:34:27,405:INFO:Importing untrained model
2024-04-06 10:34:27,405:INFO:Declaring custom model
2024-04-06 10:34:27,405:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:34:27,405:INFO:Cross validation set to False
2024-04-06 10:34:27,405:INFO:Fitting Model
2024-04-06 10:34:27,430:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8123, splitter='best')
2024-04-06 10:34:27,430:INFO:create_model() successfully completed......................................
2024-04-06 10:34:27,550:INFO:_master_model_container: 2
2024-04-06 10:34:27,550:INFO:_display_container: 2
2024-04-06 10:34:27,551:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8123, splitter='best')]
2024-04-06 10:34:27,551:INFO:compare_models() successfully completed......................................
2024-04-06 10:34:27,551:INFO:Initializing predict_model()
2024-04-06 10:34:27,551:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fa342d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1684e6b60>)
2024-04-06 10:34:27,551:INFO:Checking exceptions
2024-04-06 10:34:27,551:INFO:Preloading libraries
2024-04-06 10:34:28,356:INFO:Initializing predict_model()
2024-04-06 10:34:28,356:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fa342d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8123, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17791fce0>)
2024-04-06 10:34:28,357:INFO:Checking exceptions
2024-04-06 10:34:28,357:INFO:Preloading libraries
2024-04-06 10:34:28,913:INFO:Initializing tune_model()
2024-04-06 10:34:28,913:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fa342d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8123, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-06 10:34:28,913:INFO:Checking exceptions
2024-04-06 10:34:28,920:INFO:Copying training dataset
2024-04-06 10:34:28,930:INFO:Checking base model
2024-04-06 10:34:28,930:INFO:Base model : Decision Tree Classifier
2024-04-06 10:34:28,932:INFO:Declaring metric variables
2024-04-06 10:34:28,935:INFO:Defining Hyperparameters
2024-04-06 10:34:29,070:INFO:Tuning with n_jobs=-1
2024-04-06 10:34:29,070:INFO:Initializing RandomizedSearchCV
2024-04-06 10:34:29,191:INFO:best_params: {'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.001, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 12, 'actual_estimator__criterion': 'entropy'}
2024-04-06 10:34:29,192:INFO:Hyperparameter search completed
2024-04-06 10:34:29,192:INFO:SubProcess create_model() called ==================================
2024-04-06 10:34:29,193:INFO:Initializing create_model()
2024-04-06 10:34:29,193:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fa342d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30daeb750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 7, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.001, 'max_features': 1.0, 'max_depth': 12, 'criterion': 'entropy'})
2024-04-06 10:34:29,193:INFO:Checking exceptions
2024-04-06 10:34:29,193:INFO:Importing libraries
2024-04-06 10:34:29,193:INFO:Copying training dataset
2024-04-06 10:34:29,197:INFO:Defining folds
2024-04-06 10:34:29,197:INFO:Declaring metric variables
2024-04-06 10:34:29,200:INFO:Importing untrained model
2024-04-06 10:34:29,200:INFO:Declaring custom model
2024-04-06 10:34:29,203:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:34:29,209:INFO:Starting cross validation
2024-04-06 10:34:29,210:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:34:29,289:INFO:Calculating mean and std
2024-04-06 10:34:29,289:INFO:Creating metrics dataframe
2024-04-06 10:34:29,291:INFO:Finalizing model
2024-04-06 10:34:29,299:INFO:Uploading results into container
2024-04-06 10:34:29,300:INFO:Uploading model into container now
2024-04-06 10:34:29,300:INFO:_master_model_container: 3
2024-04-06 10:34:29,300:INFO:_display_container: 5
2024-04-06 10:34:29,300:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=12, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8123, splitter='best')
2024-04-06 10:34:29,301:INFO:create_model() successfully completed......................................
2024-04-06 10:34:29,416:INFO:SubProcess create_model() end ==================================
2024-04-06 10:34:29,417:INFO:choose_better activated
2024-04-06 10:34:29,418:INFO:SubProcess create_model() called ==================================
2024-04-06 10:34:29,418:INFO:Initializing create_model()
2024-04-06 10:34:29,418:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fa342d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:34:29,418:INFO:Checking exceptions
2024-04-06 10:34:29,419:INFO:Importing libraries
2024-04-06 10:34:29,419:INFO:Copying training dataset
2024-04-06 10:34:29,421:INFO:Defining folds
2024-04-06 10:34:29,422:INFO:Declaring metric variables
2024-04-06 10:34:29,422:INFO:Importing untrained model
2024-04-06 10:34:29,422:INFO:Declaring custom model
2024-04-06 10:34:29,422:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:34:29,422:INFO:Starting cross validation
2024-04-06 10:34:29,422:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:34:29,487:INFO:Calculating mean and std
2024-04-06 10:34:29,487:INFO:Creating metrics dataframe
2024-04-06 10:34:29,488:INFO:Finalizing model
2024-04-06 10:34:29,500:INFO:Uploading results into container
2024-04-06 10:34:29,501:INFO:Uploading model into container now
2024-04-06 10:34:29,501:INFO:_master_model_container: 4
2024-04-06 10:34:29,501:INFO:_display_container: 6
2024-04-06 10:34:29,501:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8123, splitter='best')
2024-04-06 10:34:29,501:INFO:create_model() successfully completed......................................
2024-04-06 10:34:29,612:INFO:SubProcess create_model() end ==================================
2024-04-06 10:34:29,612:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8123, splitter='best') result for F1 is 0.5316
2024-04-06 10:34:29,612:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=12, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8123, splitter='best') result for F1 is 0.4916
2024-04-06 10:34:29,612:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8123, splitter='best') is best model
2024-04-06 10:34:29,612:INFO:choose_better completed
2024-04-06 10:34:29,612:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-06 10:34:29,616:INFO:_master_model_container: 4
2024-04-06 10:34:29,616:INFO:_display_container: 5
2024-04-06 10:34:29,616:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8123, splitter='best')
2024-04-06 10:34:29,616:INFO:tune_model() successfully completed......................................
2024-04-06 10:34:29,737:INFO:Initializing predict_model()
2024-04-06 10:34:29,737:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fa342d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8123, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1778ed260>)
2024-04-06 10:34:29,737:INFO:Checking exceptions
2024-04-06 10:34:29,737:INFO:Preloading libraries
2024-04-06 10:34:29,922:INFO:Initializing finalize_model()
2024-04-06 10:34:29,922:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fa342d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8123, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-06 10:34:29,922:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8123, splitter='best')
2024-04-06 10:34:29,924:INFO:Initializing create_model()
2024-04-06 10:34:29,924:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fa342d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8123, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:34:29,924:INFO:Checking exceptions
2024-04-06 10:34:29,924:INFO:Importing libraries
2024-04-06 10:34:29,924:INFO:Copying training dataset
2024-04-06 10:34:29,924:INFO:Defining folds
2024-04-06 10:34:29,924:INFO:Declaring metric variables
2024-04-06 10:34:29,924:INFO:Importing untrained model
2024-04-06 10:34:29,924:INFO:Declaring custom model
2024-04-06 10:34:29,925:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:34:29,925:INFO:Cross validation set to False
2024-04-06 10:34:29,925:INFO:Fitting Model
2024-04-06 10:34:29,977:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8123,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:34:29,977:INFO:create_model() successfully completed......................................
2024-04-06 10:34:30,097:INFO:_master_model_container: 4
2024-04-06 10:34:30,097:INFO:_display_container: 6
2024-04-06 10:34:30,099:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8123,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:34:30,099:INFO:finalize_model() successfully completed......................................
2024-04-06 10:34:30,212:INFO:Initializing save_model()
2024-04-06 10:34:30,212:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8123,
                                        splitter='best'))],
         verbose=False), model_name=./kobe, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-06 10:34:30,213:INFO:Adding model into prep_pipe
2024-04-06 10:34:30,213:WARNING:Only Model saved as it was a pipeline.
2024-04-06 10:34:30,215:INFO:./kobe.pkl saved in current working directory
2024-04-06 10:34:30,217:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8123,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:34:30,217:INFO:save_model() successfully completed......................................
2024-04-06 10:34:30,349:INFO:Initializing load_model()
2024-04-06 10:34:30,349:INFO:load_model(model_name=./kobe, platform=None, authentication=None, verbose=True)
2024-04-06 10:34:30,359:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-06 10:34:32,080:WARNING:/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/ipykernel_3194/3146931149.py:109: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-06 10:34:44,455:INFO:PyCaret ClassificationExperiment
2024-04-06 10:34:44,456:INFO:Logging name: clf-default-name
2024-04-06 10:34:44,456:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 10:34:44,456:INFO:version 3.3.0
2024-04-06 10:34:44,456:INFO:Initializing setup()
2024-04-06 10:34:44,456:INFO:self.USI: 2281
2024-04-06 10:34:44,456:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 10:34:44,456:INFO:Checking environment
2024-04-06 10:34:44,456:INFO:python_version: 3.11.3
2024-04-06 10:34:44,456:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 10:34:44,456:INFO:machine: arm64
2024-04-06 10:34:44,456:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:34:44,456:INFO:Memory: svmem(total=8589934592, available=1723678720, percent=79.9, used=2710126592, free=63848448, active=1672396800, inactive=1658781696, wired=1037729792)
2024-04-06 10:34:44,456:INFO:Physical Core: 8
2024-04-06 10:34:44,456:INFO:Logical Core: 8
2024-04-06 10:34:44,456:INFO:Checking libraries
2024-04-06 10:34:44,456:INFO:System:
2024-04-06 10:34:44,456:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 10:34:44,456:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 10:34:44,456:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:34:44,456:INFO:PyCaret required dependencies:
2024-04-06 10:34:44,456:INFO:                 pip: 24.0
2024-04-06 10:34:44,456:INFO:          setuptools: 65.5.0
2024-04-06 10:34:44,456:INFO:             pycaret: 3.3.0
2024-04-06 10:34:44,456:INFO:             IPython: 8.23.0
2024-04-06 10:34:44,456:INFO:          ipywidgets: 8.1.2
2024-04-06 10:34:44,456:INFO:                tqdm: 4.66.2
2024-04-06 10:34:44,456:INFO:               numpy: 1.26.4
2024-04-06 10:34:44,456:INFO:              pandas: 2.1.4
2024-04-06 10:34:44,456:INFO:              jinja2: 3.1.3
2024-04-06 10:34:44,456:INFO:               scipy: 1.11.4
2024-04-06 10:34:44,456:INFO:              joblib: 1.3.2
2024-04-06 10:34:44,456:INFO:             sklearn: 1.4.1.post1
2024-04-06 10:34:44,456:INFO:                pyod: 1.1.3
2024-04-06 10:34:44,456:INFO:            imblearn: 0.12.2
2024-04-06 10:34:44,456:INFO:   category_encoders: 2.6.3
2024-04-06 10:34:44,456:INFO:            lightgbm: 4.3.0
2024-04-06 10:34:44,456:INFO:               numba: 0.59.1
2024-04-06 10:34:44,456:INFO:            requests: 2.31.0
2024-04-06 10:34:44,456:INFO:          matplotlib: 3.7.5
2024-04-06 10:34:44,456:INFO:          scikitplot: 0.3.7
2024-04-06 10:34:44,456:INFO:         yellowbrick: 1.5
2024-04-06 10:34:44,456:INFO:              plotly: 5.20.0
2024-04-06 10:34:44,456:INFO:    plotly-resampler: Not installed
2024-04-06 10:34:44,456:INFO:             kaleido: 0.2.1
2024-04-06 10:34:44,456:INFO:           schemdraw: 0.15
2024-04-06 10:34:44,456:INFO:         statsmodels: 0.14.1
2024-04-06 10:34:44,456:INFO:              sktime: 0.28.0
2024-04-06 10:34:44,456:INFO:               tbats: 1.1.3
2024-04-06 10:34:44,456:INFO:            pmdarima: 2.0.4
2024-04-06 10:34:44,456:INFO:              psutil: 5.9.8
2024-04-06 10:34:44,456:INFO:          markupsafe: 2.1.5
2024-04-06 10:34:44,456:INFO:             pickle5: Not installed
2024-04-06 10:34:44,456:INFO:         cloudpickle: 3.0.0
2024-04-06 10:34:44,456:INFO:         deprecation: 2.1.0
2024-04-06 10:34:44,456:INFO:              xxhash: 3.4.1
2024-04-06 10:34:44,456:INFO:           wurlitzer: 3.0.3
2024-04-06 10:34:44,456:INFO:PyCaret optional dependencies:
2024-04-06 10:34:44,456:INFO:                shap: Not installed
2024-04-06 10:34:44,456:INFO:           interpret: Not installed
2024-04-06 10:34:44,456:INFO:                umap: Not installed
2024-04-06 10:34:44,456:INFO:     ydata_profiling: Not installed
2024-04-06 10:34:44,456:INFO:  explainerdashboard: Not installed
2024-04-06 10:34:44,456:INFO:             autoviz: Not installed
2024-04-06 10:34:44,456:INFO:           fairlearn: Not installed
2024-04-06 10:34:44,456:INFO:          deepchecks: Not installed
2024-04-06 10:34:44,456:INFO:             xgboost: Not installed
2024-04-06 10:34:44,456:INFO:            catboost: Not installed
2024-04-06 10:34:44,456:INFO:              kmodes: Not installed
2024-04-06 10:34:44,457:INFO:             mlxtend: Not installed
2024-04-06 10:34:44,457:INFO:       statsforecast: Not installed
2024-04-06 10:34:44,457:INFO:        tune_sklearn: Not installed
2024-04-06 10:34:44,457:INFO:                 ray: Not installed
2024-04-06 10:34:44,457:INFO:            hyperopt: Not installed
2024-04-06 10:34:44,457:INFO:              optuna: Not installed
2024-04-06 10:34:44,457:INFO:               skopt: Not installed
2024-04-06 10:34:44,457:INFO:              mlflow: 2.11.3
2024-04-06 10:34:44,457:INFO:              gradio: Not installed
2024-04-06 10:34:44,457:INFO:             fastapi: Not installed
2024-04-06 10:34:44,457:INFO:             uvicorn: Not installed
2024-04-06 10:34:44,457:INFO:              m2cgen: Not installed
2024-04-06 10:34:44,457:INFO:           evidently: Not installed
2024-04-06 10:34:44,457:INFO:               fugue: Not installed
2024-04-06 10:34:44,457:INFO:           streamlit: 1.33.0
2024-04-06 10:34:44,457:INFO:             prophet: 1.1.5
2024-04-06 10:34:44,457:INFO:None
2024-04-06 10:34:44,457:INFO:Set up data.
2024-04-06 10:34:44,459:INFO:Set up folding strategy.
2024-04-06 10:34:44,459:INFO:Set up train/test split.
2024-04-06 10:34:44,459:INFO:Set up data.
2024-04-06 10:34:44,461:INFO:Set up index.
2024-04-06 10:34:44,461:INFO:Assigning column types.
2024-04-06 10:34:44,464:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 10:34:44,482:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:34:44,482:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:34:44,493:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:44,494:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:44,512:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:34:44,512:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:34:44,523:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:44,523:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:44,523:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 10:34:44,541:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:34:44,552:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:44,552:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:44,571:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:34:44,582:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:44,583:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:44,583:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 10:34:44,611:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:44,611:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:44,640:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:44,640:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:44,640:INFO:Preparing preprocessing pipeline...
2024-04-06 10:34:44,641:INFO:Set up simple imputation.
2024-04-06 10:34:44,641:INFO:Set up feature normalization.
2024-04-06 10:34:44,651:INFO:Finished creating preprocessing pipeline.
2024-04-06 10:34:44,653:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 10:34:44,653:INFO:Creating final display dataframe.
2024-04-06 10:34:44,682:INFO:Setup _display_container:                     Description             Value
0                    Session id              8042
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              2281
2024-04-06 10:34:44,715:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:44,715:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:44,745:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:44,745:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:34:44,745:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 10:34:44,746:INFO:setup() successfully completed in 0.29s...............
2024-04-06 10:34:44,746:INFO:Initializing compare_models()
2024-04-06 10:34:44,746:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 10:34:44,746:INFO:Checking exceptions
2024-04-06 10:34:44,748:INFO:Preparing display monitor
2024-04-06 10:34:44,756:INFO:Initializing Logistic Regression
2024-04-06 10:34:44,756:INFO:Total runtime is 2.0345052083333333e-06 minutes
2024-04-06 10:34:44,758:INFO:SubProcess create_model() called ==================================
2024-04-06 10:34:44,758:INFO:Initializing create_model()
2024-04-06 10:34:44,758:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1768dbf10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:34:44,758:INFO:Checking exceptions
2024-04-06 10:34:44,758:INFO:Importing libraries
2024-04-06 10:34:44,758:INFO:Copying training dataset
2024-04-06 10:34:44,761:INFO:Defining folds
2024-04-06 10:34:44,761:INFO:Declaring metric variables
2024-04-06 10:34:44,763:INFO:Importing untrained model
2024-04-06 10:34:44,764:INFO:Logistic Regression Imported successfully
2024-04-06 10:34:44,766:INFO:Starting cross validation
2024-04-06 10:34:44,767:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:34:44,867:INFO:Calculating mean and std
2024-04-06 10:34:44,867:INFO:Creating metrics dataframe
2024-04-06 10:34:44,868:INFO:Uploading results into container
2024-04-06 10:34:44,868:INFO:Uploading model into container now
2024-04-06 10:34:44,868:INFO:_master_model_container: 1
2024-04-06 10:34:44,868:INFO:_display_container: 2
2024-04-06 10:34:44,868:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8042, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:34:44,868:INFO:create_model() successfully completed......................................
2024-04-06 10:34:45,030:INFO:SubProcess create_model() end ==================================
2024-04-06 10:34:45,030:INFO:Creating metrics dataframe
2024-04-06 10:34:45,032:INFO:Initializing Decision Tree Classifier
2024-04-06 10:34:45,032:INFO:Total runtime is 0.00460051695505778 minutes
2024-04-06 10:34:45,034:INFO:SubProcess create_model() called ==================================
2024-04-06 10:34:45,034:INFO:Initializing create_model()
2024-04-06 10:34:45,034:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1768dbf10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:34:45,034:INFO:Checking exceptions
2024-04-06 10:34:45,034:INFO:Importing libraries
2024-04-06 10:34:45,034:INFO:Copying training dataset
2024-04-06 10:34:45,036:INFO:Defining folds
2024-04-06 10:34:45,036:INFO:Declaring metric variables
2024-04-06 10:34:45,037:INFO:Importing untrained model
2024-04-06 10:34:45,038:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:34:45,040:INFO:Starting cross validation
2024-04-06 10:34:45,041:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:34:45,122:INFO:Calculating mean and std
2024-04-06 10:34:45,122:INFO:Creating metrics dataframe
2024-04-06 10:34:45,123:INFO:Uploading results into container
2024-04-06 10:34:45,123:INFO:Uploading model into container now
2024-04-06 10:34:45,123:INFO:_master_model_container: 2
2024-04-06 10:34:45,123:INFO:_display_container: 2
2024-04-06 10:34:45,123:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8042, splitter='best')
2024-04-06 10:34:45,123:INFO:create_model() successfully completed......................................
2024-04-06 10:34:45,234:INFO:SubProcess create_model() end ==================================
2024-04-06 10:34:45,234:INFO:Creating metrics dataframe
2024-04-06 10:34:45,237:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 10:34:45,239:INFO:Initializing create_model()
2024-04-06 10:34:45,240:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8042, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:34:45,240:INFO:Checking exceptions
2024-04-06 10:34:45,240:INFO:Importing libraries
2024-04-06 10:34:45,240:INFO:Copying training dataset
2024-04-06 10:34:45,243:INFO:Defining folds
2024-04-06 10:34:45,243:INFO:Declaring metric variables
2024-04-06 10:34:45,243:INFO:Importing untrained model
2024-04-06 10:34:45,243:INFO:Declaring custom model
2024-04-06 10:34:45,243:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:34:45,243:INFO:Cross validation set to False
2024-04-06 10:34:45,243:INFO:Fitting Model
2024-04-06 10:34:45,256:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8042, splitter='best')
2024-04-06 10:34:45,256:INFO:create_model() successfully completed......................................
2024-04-06 10:34:45,369:INFO:Initializing create_model()
2024-04-06 10:34:45,369:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8042, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:34:45,369:INFO:Checking exceptions
2024-04-06 10:34:45,369:INFO:Importing libraries
2024-04-06 10:34:45,369:INFO:Copying training dataset
2024-04-06 10:34:45,371:INFO:Defining folds
2024-04-06 10:34:45,371:INFO:Declaring metric variables
2024-04-06 10:34:45,372:INFO:Importing untrained model
2024-04-06 10:34:45,372:INFO:Declaring custom model
2024-04-06 10:34:45,372:INFO:Logistic Regression Imported successfully
2024-04-06 10:34:45,372:INFO:Cross validation set to False
2024-04-06 10:34:45,372:INFO:Fitting Model
2024-04-06 10:34:45,382:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8042, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:34:45,383:INFO:create_model() successfully completed......................................
2024-04-06 10:34:45,627:INFO:_master_model_container: 2
2024-04-06 10:34:45,628:INFO:_display_container: 2
2024-04-06 10:34:45,628:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8042, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8042, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-06 10:34:45,628:INFO:compare_models() successfully completed......................................
2024-04-06 10:34:45,629:INFO:Initializing predict_model()
2024-04-06 10:34:45,629:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8042, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30fa39580>)
2024-04-06 10:34:45,629:INFO:Checking exceptions
2024-04-06 10:34:45,629:INFO:Preloading libraries
2024-04-06 10:34:46,371:INFO:Initializing predict_model()
2024-04-06 10:34:46,371:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8042, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30faff6a0>)
2024-04-06 10:34:46,371:INFO:Checking exceptions
2024-04-06 10:34:46,371:INFO:Preloading libraries
2024-04-06 10:34:46,877:INFO:Initializing tune_model()
2024-04-06 10:34:46,877:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8042, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-06 10:34:46,877:INFO:Checking exceptions
2024-04-06 10:34:46,900:INFO:Copying training dataset
2024-04-06 10:34:46,901:INFO:Checking base model
2024-04-06 10:34:46,901:INFO:Base model : Logistic Regression
2024-04-06 10:34:46,910:INFO:Declaring metric variables
2024-04-06 10:34:46,914:INFO:Defining Hyperparameters
2024-04-06 10:34:47,054:INFO:Tuning with n_jobs=-1
2024-04-06 10:34:47,055:INFO:Initializing RandomizedSearchCV
2024-04-06 10:34:47,152:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 9.617}
2024-04-06 10:34:47,152:INFO:Hyperparameter search completed
2024-04-06 10:34:47,152:INFO:SubProcess create_model() called ==================================
2024-04-06 10:34:47,153:INFO:Initializing create_model()
2024-04-06 10:34:47,153:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8042, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30faef490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'class_weight': 'balanced', 'C': 9.617})
2024-04-06 10:34:47,153:INFO:Checking exceptions
2024-04-06 10:34:47,153:INFO:Importing libraries
2024-04-06 10:34:47,153:INFO:Copying training dataset
2024-04-06 10:34:47,154:INFO:Defining folds
2024-04-06 10:34:47,154:INFO:Declaring metric variables
2024-04-06 10:34:47,156:INFO:Importing untrained model
2024-04-06 10:34:47,156:INFO:Declaring custom model
2024-04-06 10:34:47,157:INFO:Logistic Regression Imported successfully
2024-04-06 10:34:47,159:INFO:Starting cross validation
2024-04-06 10:34:47,160:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:34:47,211:INFO:Calculating mean and std
2024-04-06 10:34:47,211:INFO:Creating metrics dataframe
2024-04-06 10:34:47,213:INFO:Finalizing model
2024-04-06 10:34:47,252:INFO:Uploading results into container
2024-04-06 10:34:47,253:INFO:Uploading model into container now
2024-04-06 10:34:47,254:INFO:_master_model_container: 3
2024-04-06 10:34:47,254:INFO:_display_container: 5
2024-04-06 10:34:47,254:INFO:LogisticRegression(C=9.617, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8042, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:34:47,254:INFO:create_model() successfully completed......................................
2024-04-06 10:34:47,495:INFO:SubProcess create_model() end ==================================
2024-04-06 10:34:47,495:INFO:choose_better activated
2024-04-06 10:34:47,497:INFO:SubProcess create_model() called ==================================
2024-04-06 10:34:47,497:INFO:Initializing create_model()
2024-04-06 10:34:47,497:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8042, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:34:47,497:INFO:Checking exceptions
2024-04-06 10:34:47,498:INFO:Importing libraries
2024-04-06 10:34:47,498:INFO:Copying training dataset
2024-04-06 10:34:47,500:INFO:Defining folds
2024-04-06 10:34:47,500:INFO:Declaring metric variables
2024-04-06 10:34:47,500:INFO:Importing untrained model
2024-04-06 10:34:47,500:INFO:Declaring custom model
2024-04-06 10:34:47,500:INFO:Logistic Regression Imported successfully
2024-04-06 10:34:47,500:INFO:Starting cross validation
2024-04-06 10:34:47,501:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:34:47,565:INFO:Calculating mean and std
2024-04-06 10:34:47,565:INFO:Creating metrics dataframe
2024-04-06 10:34:47,566:INFO:Finalizing model
2024-04-06 10:34:47,571:INFO:Uploading results into container
2024-04-06 10:34:47,572:INFO:Uploading model into container now
2024-04-06 10:34:47,572:INFO:_master_model_container: 4
2024-04-06 10:34:47,572:INFO:_display_container: 6
2024-04-06 10:34:47,573:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8042, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:34:47,573:INFO:create_model() successfully completed......................................
2024-04-06 10:34:47,728:INFO:SubProcess create_model() end ==================================
2024-04-06 10:34:47,728:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8042, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 0.5189
2024-04-06 10:34:47,728:INFO:LogisticRegression(C=9.617, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8042, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 0.5464
2024-04-06 10:34:47,728:INFO:LogisticRegression(C=9.617, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8042, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2024-04-06 10:34:47,728:INFO:choose_better completed
2024-04-06 10:34:47,742:INFO:_master_model_container: 4
2024-04-06 10:34:47,742:INFO:_display_container: 5
2024-04-06 10:34:47,742:INFO:LogisticRegression(C=9.617, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8042, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:34:47,743:INFO:tune_model() successfully completed......................................
2024-04-06 10:34:47,915:INFO:Initializing predict_model()
2024-04-06 10:34:47,915:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=LogisticRegression(C=9.617, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8042, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1756bf420>)
2024-04-06 10:34:47,915:INFO:Checking exceptions
2024-04-06 10:34:47,915:INFO:Preloading libraries
2024-04-06 10:34:48,272:INFO:Initializing finalize_model()
2024-04-06 10:34:48,273:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=LogisticRegression(C=9.617, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8042, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-06 10:34:48,273:INFO:Finalizing LogisticRegression(C=9.617, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8042, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:34:48,274:INFO:Initializing create_model()
2024-04-06 10:34:48,274:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=LogisticRegression(C=9.617, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8042, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:34:48,274:INFO:Checking exceptions
2024-04-06 10:34:48,275:INFO:Importing libraries
2024-04-06 10:34:48,275:INFO:Copying training dataset
2024-04-06 10:34:48,275:INFO:Defining folds
2024-04-06 10:34:48,275:INFO:Declaring metric variables
2024-04-06 10:34:48,275:INFO:Importing untrained model
2024-04-06 10:34:48,275:INFO:Declaring custom model
2024-04-06 10:34:48,275:INFO:Logistic Regression Imported successfully
2024-04-06 10:34:48,276:INFO:Cross validation set to False
2024-04-06 10:34:48,276:INFO:Fitting Model
2024-04-06 10:34:48,304:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=9.617, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2',
                                    random_state=8042, solver='lbfgs',
                                    tol=0.0001, verbose=0, warm_start=False))],
         verbose=False)
2024-04-06 10:34:48,304:INFO:create_model() successfully completed......................................
2024-04-06 10:34:48,466:INFO:_master_model_container: 4
2024-04-06 10:34:48,466:INFO:_display_container: 6
2024-04-06 10:34:48,472:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=9.617, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2',
                                    random_state=8042, solver='lbfgs',
                                    tol=0.0001, verbose=0, warm_start=False))],
         verbose=False)
2024-04-06 10:34:48,472:INFO:finalize_model() successfully completed......................................
2024-04-06 10:34:48,632:INFO:Initializing save_model()
2024-04-06 10:34:48,632:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=9.617, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2',
                                    random_state=8042, solver='lbfgs',
                                    tol=0.0001, verbose=0, warm_start=False))],
         verbose=False), model_name=./kobe, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-06 10:34:48,632:INFO:Adding model into prep_pipe
2024-04-06 10:34:48,632:WARNING:Only Model saved as it was a pipeline.
2024-04-06 10:34:48,634:INFO:./kobe.pkl saved in current working directory
2024-04-06 10:34:48,636:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=9.617, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2',
                                    random_state=8042, solver='lbfgs',
                                    tol=0.0001, verbose=0, warm_start=False))],
         verbose=False)
2024-04-06 10:34:48,636:INFO:save_model() successfully completed......................................
2024-04-06 10:34:48,765:INFO:Initializing load_model()
2024-04-06 10:34:48,765:INFO:load_model(model_name=./kobe, platform=None, authentication=None, verbose=True)
2024-04-06 10:34:48,776:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-06 10:34:50,379:WARNING:/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/ipykernel_3194/3146931149.py:109: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-06 10:36:29,791:INFO:PyCaret ClassificationExperiment
2024-04-06 10:36:29,791:INFO:Logging name: clf-default-name
2024-04-06 10:36:29,791:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 10:36:29,791:INFO:version 3.3.0
2024-04-06 10:36:29,792:INFO:Initializing setup()
2024-04-06 10:36:29,792:INFO:self.USI: 0246
2024-04-06 10:36:29,792:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 10:36:29,792:INFO:Checking environment
2024-04-06 10:36:29,792:INFO:python_version: 3.11.3
2024-04-06 10:36:29,792:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 10:36:29,792:INFO:machine: arm64
2024-04-06 10:36:29,792:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:36:29,792:INFO:Memory: svmem(total=8589934592, available=1668333568, percent=80.6, used=2705719296, free=19234816, active=1663746048, inactive=1644511232, wired=1041973248)
2024-04-06 10:36:29,792:INFO:Physical Core: 8
2024-04-06 10:36:29,792:INFO:Logical Core: 8
2024-04-06 10:36:29,792:INFO:Checking libraries
2024-04-06 10:36:29,792:INFO:System:
2024-04-06 10:36:29,792:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 10:36:29,792:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 10:36:29,792:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:36:29,792:INFO:PyCaret required dependencies:
2024-04-06 10:36:29,792:INFO:                 pip: 24.0
2024-04-06 10:36:29,792:INFO:          setuptools: 65.5.0
2024-04-06 10:36:29,792:INFO:             pycaret: 3.3.0
2024-04-06 10:36:29,792:INFO:             IPython: 8.23.0
2024-04-06 10:36:29,792:INFO:          ipywidgets: 8.1.2
2024-04-06 10:36:29,792:INFO:                tqdm: 4.66.2
2024-04-06 10:36:29,792:INFO:               numpy: 1.26.4
2024-04-06 10:36:29,792:INFO:              pandas: 2.1.4
2024-04-06 10:36:29,792:INFO:              jinja2: 3.1.3
2024-04-06 10:36:29,792:INFO:               scipy: 1.11.4
2024-04-06 10:36:29,792:INFO:              joblib: 1.3.2
2024-04-06 10:36:29,792:INFO:             sklearn: 1.4.1.post1
2024-04-06 10:36:29,792:INFO:                pyod: 1.1.3
2024-04-06 10:36:29,792:INFO:            imblearn: 0.12.2
2024-04-06 10:36:29,792:INFO:   category_encoders: 2.6.3
2024-04-06 10:36:29,792:INFO:            lightgbm: 4.3.0
2024-04-06 10:36:29,792:INFO:               numba: 0.59.1
2024-04-06 10:36:29,792:INFO:            requests: 2.31.0
2024-04-06 10:36:29,792:INFO:          matplotlib: 3.7.5
2024-04-06 10:36:29,792:INFO:          scikitplot: 0.3.7
2024-04-06 10:36:29,792:INFO:         yellowbrick: 1.5
2024-04-06 10:36:29,792:INFO:              plotly: 5.20.0
2024-04-06 10:36:29,792:INFO:    plotly-resampler: Not installed
2024-04-06 10:36:29,792:INFO:             kaleido: 0.2.1
2024-04-06 10:36:29,792:INFO:           schemdraw: 0.15
2024-04-06 10:36:29,792:INFO:         statsmodels: 0.14.1
2024-04-06 10:36:29,792:INFO:              sktime: 0.28.0
2024-04-06 10:36:29,792:INFO:               tbats: 1.1.3
2024-04-06 10:36:29,792:INFO:            pmdarima: 2.0.4
2024-04-06 10:36:29,792:INFO:              psutil: 5.9.8
2024-04-06 10:36:29,792:INFO:          markupsafe: 2.1.5
2024-04-06 10:36:29,792:INFO:             pickle5: Not installed
2024-04-06 10:36:29,793:INFO:         cloudpickle: 3.0.0
2024-04-06 10:36:29,793:INFO:         deprecation: 2.1.0
2024-04-06 10:36:29,793:INFO:              xxhash: 3.4.1
2024-04-06 10:36:29,793:INFO:           wurlitzer: 3.0.3
2024-04-06 10:36:29,793:INFO:PyCaret optional dependencies:
2024-04-06 10:36:29,793:INFO:                shap: Not installed
2024-04-06 10:36:29,793:INFO:           interpret: Not installed
2024-04-06 10:36:29,793:INFO:                umap: Not installed
2024-04-06 10:36:29,793:INFO:     ydata_profiling: Not installed
2024-04-06 10:36:29,793:INFO:  explainerdashboard: Not installed
2024-04-06 10:36:29,793:INFO:             autoviz: Not installed
2024-04-06 10:36:29,793:INFO:           fairlearn: Not installed
2024-04-06 10:36:29,793:INFO:          deepchecks: Not installed
2024-04-06 10:36:29,793:INFO:             xgboost: Not installed
2024-04-06 10:36:29,793:INFO:            catboost: Not installed
2024-04-06 10:36:29,793:INFO:              kmodes: Not installed
2024-04-06 10:36:29,793:INFO:             mlxtend: Not installed
2024-04-06 10:36:29,793:INFO:       statsforecast: Not installed
2024-04-06 10:36:29,793:INFO:        tune_sklearn: Not installed
2024-04-06 10:36:29,793:INFO:                 ray: Not installed
2024-04-06 10:36:29,793:INFO:            hyperopt: Not installed
2024-04-06 10:36:29,793:INFO:              optuna: Not installed
2024-04-06 10:36:29,793:INFO:               skopt: Not installed
2024-04-06 10:36:29,793:INFO:              mlflow: 2.11.3
2024-04-06 10:36:29,793:INFO:              gradio: Not installed
2024-04-06 10:36:29,793:INFO:             fastapi: Not installed
2024-04-06 10:36:29,793:INFO:             uvicorn: Not installed
2024-04-06 10:36:29,793:INFO:              m2cgen: Not installed
2024-04-06 10:36:29,793:INFO:           evidently: Not installed
2024-04-06 10:36:29,793:INFO:               fugue: Not installed
2024-04-06 10:36:29,793:INFO:           streamlit: 1.33.0
2024-04-06 10:36:29,793:INFO:             prophet: 1.1.5
2024-04-06 10:36:29,793:INFO:None
2024-04-06 10:36:29,793:INFO:Set up data.
2024-04-06 10:36:29,801:INFO:Set up folding strategy.
2024-04-06 10:36:29,802:INFO:Set up train/test split.
2024-04-06 10:36:29,802:INFO:Set up data.
2024-04-06 10:36:29,812:INFO:Set up index.
2024-04-06 10:36:29,813:INFO:Assigning column types.
2024-04-06 10:36:29,817:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 10:36:29,836:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:36:29,837:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:36:29,849:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:29,849:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:29,869:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:36:29,869:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:36:29,881:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:29,881:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:29,881:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 10:36:29,899:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:36:29,910:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:29,910:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:29,929:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:36:29,940:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:29,940:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:29,940:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 10:36:29,969:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:29,969:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:29,999:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:29,999:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:30,000:INFO:Preparing preprocessing pipeline...
2024-04-06 10:36:30,000:INFO:Set up simple imputation.
2024-04-06 10:36:30,000:INFO:Set up feature normalization.
2024-04-06 10:36:30,011:INFO:Finished creating preprocessing pipeline.
2024-04-06 10:36:30,012:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 10:36:30,012:INFO:Creating final display dataframe.
2024-04-06 10:36:30,044:INFO:Setup _display_container:                     Description             Value
0                    Session id              4908
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              0246
2024-04-06 10:36:30,080:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:30,080:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:30,110:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:30,110:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:30,111:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 10:36:30,111:INFO:setup() successfully completed in 0.32s...............
2024-04-06 10:36:30,112:INFO:Initializing compare_models()
2024-04-06 10:36:30,112:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x173d67150>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x173d67150>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 10:36:30,112:INFO:Checking exceptions
2024-04-06 10:36:30,114:INFO:Preparing display monitor
2024-04-06 10:36:30,123:INFO:Initializing Logistic Regression
2024-04-06 10:36:30,123:INFO:Total runtime is 1.3152758280436198e-06 minutes
2024-04-06 10:36:30,124:INFO:SubProcess create_model() called ==================================
2024-04-06 10:36:30,125:INFO:Initializing create_model()
2024-04-06 10:36:30,125:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x173d67150>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1769f12d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:36:30,125:INFO:Checking exceptions
2024-04-06 10:36:30,125:INFO:Importing libraries
2024-04-06 10:36:30,125:INFO:Copying training dataset
2024-04-06 10:36:30,128:INFO:Defining folds
2024-04-06 10:36:30,129:INFO:Declaring metric variables
2024-04-06 10:36:30,130:INFO:Importing untrained model
2024-04-06 10:36:30,132:INFO:Logistic Regression Imported successfully
2024-04-06 10:36:30,135:INFO:Starting cross validation
2024-04-06 10:36:30,136:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:36:30,276:INFO:Calculating mean and std
2024-04-06 10:36:30,276:INFO:Creating metrics dataframe
2024-04-06 10:36:30,277:INFO:Uploading results into container
2024-04-06 10:36:30,277:INFO:Uploading model into container now
2024-04-06 10:36:30,277:INFO:_master_model_container: 1
2024-04-06 10:36:30,277:INFO:_display_container: 2
2024-04-06 10:36:30,277:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4908, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:36:30,277:INFO:create_model() successfully completed......................................
2024-04-06 10:36:30,459:INFO:SubProcess create_model() end ==================================
2024-04-06 10:36:30,459:INFO:Creating metrics dataframe
2024-04-06 10:36:30,462:INFO:Initializing Decision Tree Classifier
2024-04-06 10:36:30,462:INFO:Total runtime is 0.005642799536387125 minutes
2024-04-06 10:36:30,463:INFO:SubProcess create_model() called ==================================
2024-04-06 10:36:30,463:INFO:Initializing create_model()
2024-04-06 10:36:30,463:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x173d67150>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1769f12d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:36:30,464:INFO:Checking exceptions
2024-04-06 10:36:30,464:INFO:Importing libraries
2024-04-06 10:36:30,464:INFO:Copying training dataset
2024-04-06 10:36:30,466:INFO:Defining folds
2024-04-06 10:36:30,466:INFO:Declaring metric variables
2024-04-06 10:36:30,467:INFO:Importing untrained model
2024-04-06 10:36:30,469:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:36:30,471:INFO:Starting cross validation
2024-04-06 10:36:30,471:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:36:30,559:INFO:Calculating mean and std
2024-04-06 10:36:30,559:INFO:Creating metrics dataframe
2024-04-06 10:36:30,560:INFO:Uploading results into container
2024-04-06 10:36:30,560:INFO:Uploading model into container now
2024-04-06 10:36:30,560:INFO:_master_model_container: 2
2024-04-06 10:36:30,560:INFO:_display_container: 2
2024-04-06 10:36:30,560:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4908, splitter='best')
2024-04-06 10:36:30,560:INFO:create_model() successfully completed......................................
2024-04-06 10:36:30,753:INFO:SubProcess create_model() end ==================================
2024-04-06 10:36:30,753:INFO:Creating metrics dataframe
2024-04-06 10:36:30,755:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 10:36:30,758:INFO:Initializing create_model()
2024-04-06 10:36:30,758:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x173d67150>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4908, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:36:30,758:INFO:Checking exceptions
2024-04-06 10:36:30,759:INFO:Importing libraries
2024-04-06 10:36:30,759:INFO:Copying training dataset
2024-04-06 10:36:30,761:INFO:Defining folds
2024-04-06 10:36:30,761:INFO:Declaring metric variables
2024-04-06 10:36:30,761:INFO:Importing untrained model
2024-04-06 10:36:30,761:INFO:Declaring custom model
2024-04-06 10:36:30,762:INFO:Logistic Regression Imported successfully
2024-04-06 10:36:30,762:INFO:Cross validation set to False
2024-04-06 10:36:30,762:INFO:Fitting Model
2024-04-06 10:36:30,775:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4908, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:36:30,775:INFO:create_model() successfully completed......................................
2024-04-06 10:36:31,062:INFO:Initializing create_model()
2024-04-06 10:36:31,062:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x173d67150>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4908, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:36:31,062:INFO:Checking exceptions
2024-04-06 10:36:31,063:INFO:Importing libraries
2024-04-06 10:36:31,063:INFO:Copying training dataset
2024-04-06 10:36:31,066:INFO:Defining folds
2024-04-06 10:36:31,066:INFO:Declaring metric variables
2024-04-06 10:36:31,066:INFO:Importing untrained model
2024-04-06 10:36:31,066:INFO:Declaring custom model
2024-04-06 10:36:31,066:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:36:31,066:INFO:Cross validation set to False
2024-04-06 10:36:31,066:INFO:Fitting Model
2024-04-06 10:36:31,080:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4908, splitter='best')
2024-04-06 10:36:31,080:INFO:create_model() successfully completed......................................
2024-04-06 10:36:31,235:INFO:_master_model_container: 2
2024-04-06 10:36:31,236:INFO:_display_container: 2
2024-04-06 10:36:31,236:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4908, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4908, splitter='best')]
2024-04-06 10:36:31,236:INFO:compare_models() successfully completed......................................
2024-04-06 10:36:31,236:INFO:Initializing predict_model()
2024-04-06 10:36:31,236:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x173d67150>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4908, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1684e6b60>)
2024-04-06 10:36:31,236:INFO:Checking exceptions
2024-04-06 10:36:31,236:INFO:Preloading libraries
2024-04-06 10:36:31,883:INFO:Initializing predict_model()
2024-04-06 10:36:31,883:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x173d67150>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4908, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30fd1cb80>)
2024-04-06 10:36:31,883:INFO:Checking exceptions
2024-04-06 10:36:31,883:INFO:Preloading libraries
2024-04-06 10:36:32,243:INFO:Initializing tune_model()
2024-04-06 10:36:32,243:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x173d67150>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4908, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-06 10:36:32,243:INFO:Checking exceptions
2024-04-06 10:36:32,249:INFO:Copying training dataset
2024-04-06 10:36:32,252:INFO:Checking base model
2024-04-06 10:36:32,252:INFO:Base model : Decision Tree Classifier
2024-04-06 10:36:32,254:INFO:Declaring metric variables
2024-04-06 10:36:32,255:INFO:Defining Hyperparameters
2024-04-06 10:36:32,449:INFO:Tuning with n_jobs=-1
2024-04-06 10:36:32,449:INFO:Initializing RandomizedSearchCV
2024-04-06 10:36:32,551:INFO:best_params: {'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.1, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 12, 'actual_estimator__criterion': 'gini'}
2024-04-06 10:36:32,551:INFO:Hyperparameter search completed
2024-04-06 10:36:32,551:INFO:SubProcess create_model() called ==================================
2024-04-06 10:36:32,551:INFO:Initializing create_model()
2024-04-06 10:36:32,552:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x173d67150>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4908, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1768b99d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 10, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.1, 'max_features': 'sqrt', 'max_depth': 12, 'criterion': 'gini'})
2024-04-06 10:36:32,552:INFO:Checking exceptions
2024-04-06 10:36:32,552:INFO:Importing libraries
2024-04-06 10:36:32,552:INFO:Copying training dataset
2024-04-06 10:36:32,553:INFO:Defining folds
2024-04-06 10:36:32,553:INFO:Declaring metric variables
2024-04-06 10:36:32,555:INFO:Importing untrained model
2024-04-06 10:36:32,555:INFO:Declaring custom model
2024-04-06 10:36:32,556:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:36:32,559:INFO:Starting cross validation
2024-04-06 10:36:32,559:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:36:32,579:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-06 10:36:32,580:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-06 10:36:32,581:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-06 10:36:32,584:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-06 10:36:32,586:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-06 10:36:32,593:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-06 10:36:32,595:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-06 10:36:32,596:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-06 10:36:32,596:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-06 10:36:32,602:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-06 10:36:32,613:INFO:Calculating mean and std
2024-04-06 10:36:32,613:INFO:Creating metrics dataframe
2024-04-06 10:36:32,615:INFO:Finalizing model
2024-04-06 10:36:32,620:INFO:Uploading results into container
2024-04-06 10:36:32,621:INFO:Uploading model into container now
2024-04-06 10:36:32,621:INFO:_master_model_container: 3
2024-04-06 10:36:32,621:INFO:_display_container: 5
2024-04-06 10:36:32,622:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=12, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.1, min_samples_leaf=3,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4908, splitter='best')
2024-04-06 10:36:32,622:INFO:create_model() successfully completed......................................
2024-04-06 10:36:32,734:INFO:SubProcess create_model() end ==================================
2024-04-06 10:36:32,734:INFO:choose_better activated
2024-04-06 10:36:32,735:INFO:SubProcess create_model() called ==================================
2024-04-06 10:36:32,735:INFO:Initializing create_model()
2024-04-06 10:36:32,735:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x173d67150>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4908, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:36:32,735:INFO:Checking exceptions
2024-04-06 10:36:32,736:INFO:Importing libraries
2024-04-06 10:36:32,736:INFO:Copying training dataset
2024-04-06 10:36:32,738:INFO:Defining folds
2024-04-06 10:36:32,738:INFO:Declaring metric variables
2024-04-06 10:36:32,738:INFO:Importing untrained model
2024-04-06 10:36:32,738:INFO:Declaring custom model
2024-04-06 10:36:32,738:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:36:32,738:INFO:Starting cross validation
2024-04-06 10:36:32,738:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:36:32,800:INFO:Calculating mean and std
2024-04-06 10:36:32,800:INFO:Creating metrics dataframe
2024-04-06 10:36:32,801:INFO:Finalizing model
2024-04-06 10:36:32,814:INFO:Uploading results into container
2024-04-06 10:36:32,814:INFO:Uploading model into container now
2024-04-06 10:36:32,814:INFO:_master_model_container: 4
2024-04-06 10:36:32,814:INFO:_display_container: 6
2024-04-06 10:36:32,814:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4908, splitter='best')
2024-04-06 10:36:32,814:INFO:create_model() successfully completed......................................
2024-04-06 10:36:32,929:INFO:SubProcess create_model() end ==================================
2024-04-06 10:36:32,929:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4908, splitter='best') result for F1 is 0.524
2024-04-06 10:36:32,930:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=12, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.1, min_samples_leaf=3,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4908, splitter='best') result for F1 is 0.0
2024-04-06 10:36:32,930:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4908, splitter='best') is best model
2024-04-06 10:36:32,930:INFO:choose_better completed
2024-04-06 10:36:32,930:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-06 10:36:32,934:INFO:_master_model_container: 4
2024-04-06 10:36:32,934:INFO:_display_container: 5
2024-04-06 10:36:32,934:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4908, splitter='best')
2024-04-06 10:36:32,934:INFO:tune_model() successfully completed......................................
2024-04-06 10:36:33,046:INFO:Initializing predict_model()
2024-04-06 10:36:33,046:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x173d67150>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4908, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x177c66ca0>)
2024-04-06 10:36:33,046:INFO:Checking exceptions
2024-04-06 10:36:33,046:INFO:Preloading libraries
2024-04-06 10:36:33,220:INFO:Initializing finalize_model()
2024-04-06 10:36:33,220:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x173d67150>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4908, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-06 10:36:33,220:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4908, splitter='best')
2024-04-06 10:36:33,221:INFO:Initializing create_model()
2024-04-06 10:36:33,221:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x173d67150>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4908, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:36:33,221:INFO:Checking exceptions
2024-04-06 10:36:33,222:INFO:Importing libraries
2024-04-06 10:36:33,222:INFO:Copying training dataset
2024-04-06 10:36:33,222:INFO:Defining folds
2024-04-06 10:36:33,222:INFO:Declaring metric variables
2024-04-06 10:36:33,222:INFO:Importing untrained model
2024-04-06 10:36:33,222:INFO:Declaring custom model
2024-04-06 10:36:33,222:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:36:33,222:INFO:Cross validation set to False
2024-04-06 10:36:33,223:INFO:Fitting Model
2024-04-06 10:36:33,275:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4908,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:36:33,275:INFO:create_model() successfully completed......................................
2024-04-06 10:36:33,388:INFO:_master_model_container: 4
2024-04-06 10:36:33,388:INFO:_display_container: 6
2024-04-06 10:36:33,390:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4908,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:36:33,390:INFO:finalize_model() successfully completed......................................
2024-04-06 10:36:33,503:INFO:Initializing save_model()
2024-04-06 10:36:33,503:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4908,
                                        splitter='best'))],
         verbose=False), model_name=./kobe, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-06 10:36:33,503:INFO:Adding model into prep_pipe
2024-04-06 10:36:33,503:WARNING:Only Model saved as it was a pipeline.
2024-04-06 10:36:33,507:INFO:./kobe.pkl saved in current working directory
2024-04-06 10:36:33,509:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4908,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:36:33,509:INFO:save_model() successfully completed......................................
2024-04-06 10:36:33,618:INFO:Initializing load_model()
2024-04-06 10:36:33,619:INFO:load_model(model_name=./kobe, platform=None, authentication=None, verbose=True)
2024-04-06 10:36:33,627:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-06 10:36:35,356:WARNING:/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/ipykernel_3194/3146931149.py:109: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-06 10:36:51,293:INFO:PyCaret ClassificationExperiment
2024-04-06 10:36:51,293:INFO:Logging name: clf-default-name
2024-04-06 10:36:51,293:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 10:36:51,293:INFO:version 3.3.0
2024-04-06 10:36:51,293:INFO:Initializing setup()
2024-04-06 10:36:51,293:INFO:self.USI: d7fd
2024-04-06 10:36:51,293:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 10:36:51,293:INFO:Checking environment
2024-04-06 10:36:51,293:INFO:python_version: 3.11.3
2024-04-06 10:36:51,293:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 10:36:51,293:INFO:machine: arm64
2024-04-06 10:36:51,293:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:36:51,293:INFO:Memory: svmem(total=8589934592, available=1646837760, percent=80.8, used=2681552896, free=33701888, active=1626390528, inactive=1611317248, wired=1055162368)
2024-04-06 10:36:51,293:INFO:Physical Core: 8
2024-04-06 10:36:51,293:INFO:Logical Core: 8
2024-04-06 10:36:51,293:INFO:Checking libraries
2024-04-06 10:36:51,293:INFO:System:
2024-04-06 10:36:51,293:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 10:36:51,293:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 10:36:51,293:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:36:51,293:INFO:PyCaret required dependencies:
2024-04-06 10:36:51,294:INFO:                 pip: 24.0
2024-04-06 10:36:51,294:INFO:          setuptools: 65.5.0
2024-04-06 10:36:51,294:INFO:             pycaret: 3.3.0
2024-04-06 10:36:51,294:INFO:             IPython: 8.23.0
2024-04-06 10:36:51,294:INFO:          ipywidgets: 8.1.2
2024-04-06 10:36:51,294:INFO:                tqdm: 4.66.2
2024-04-06 10:36:51,294:INFO:               numpy: 1.26.4
2024-04-06 10:36:51,294:INFO:              pandas: 2.1.4
2024-04-06 10:36:51,294:INFO:              jinja2: 3.1.3
2024-04-06 10:36:51,294:INFO:               scipy: 1.11.4
2024-04-06 10:36:51,294:INFO:              joblib: 1.3.2
2024-04-06 10:36:51,294:INFO:             sklearn: 1.4.1.post1
2024-04-06 10:36:51,294:INFO:                pyod: 1.1.3
2024-04-06 10:36:51,294:INFO:            imblearn: 0.12.2
2024-04-06 10:36:51,294:INFO:   category_encoders: 2.6.3
2024-04-06 10:36:51,294:INFO:            lightgbm: 4.3.0
2024-04-06 10:36:51,294:INFO:               numba: 0.59.1
2024-04-06 10:36:51,294:INFO:            requests: 2.31.0
2024-04-06 10:36:51,294:INFO:          matplotlib: 3.7.5
2024-04-06 10:36:51,294:INFO:          scikitplot: 0.3.7
2024-04-06 10:36:51,294:INFO:         yellowbrick: 1.5
2024-04-06 10:36:51,294:INFO:              plotly: 5.20.0
2024-04-06 10:36:51,294:INFO:    plotly-resampler: Not installed
2024-04-06 10:36:51,294:INFO:             kaleido: 0.2.1
2024-04-06 10:36:51,294:INFO:           schemdraw: 0.15
2024-04-06 10:36:51,294:INFO:         statsmodels: 0.14.1
2024-04-06 10:36:51,294:INFO:              sktime: 0.28.0
2024-04-06 10:36:51,294:INFO:               tbats: 1.1.3
2024-04-06 10:36:51,294:INFO:            pmdarima: 2.0.4
2024-04-06 10:36:51,294:INFO:              psutil: 5.9.8
2024-04-06 10:36:51,294:INFO:          markupsafe: 2.1.5
2024-04-06 10:36:51,294:INFO:             pickle5: Not installed
2024-04-06 10:36:51,294:INFO:         cloudpickle: 3.0.0
2024-04-06 10:36:51,294:INFO:         deprecation: 2.1.0
2024-04-06 10:36:51,294:INFO:              xxhash: 3.4.1
2024-04-06 10:36:51,294:INFO:           wurlitzer: 3.0.3
2024-04-06 10:36:51,294:INFO:PyCaret optional dependencies:
2024-04-06 10:36:51,294:INFO:                shap: Not installed
2024-04-06 10:36:51,294:INFO:           interpret: Not installed
2024-04-06 10:36:51,294:INFO:                umap: Not installed
2024-04-06 10:36:51,294:INFO:     ydata_profiling: Not installed
2024-04-06 10:36:51,294:INFO:  explainerdashboard: Not installed
2024-04-06 10:36:51,294:INFO:             autoviz: Not installed
2024-04-06 10:36:51,294:INFO:           fairlearn: Not installed
2024-04-06 10:36:51,294:INFO:          deepchecks: Not installed
2024-04-06 10:36:51,294:INFO:             xgboost: Not installed
2024-04-06 10:36:51,294:INFO:            catboost: Not installed
2024-04-06 10:36:51,294:INFO:              kmodes: Not installed
2024-04-06 10:36:51,294:INFO:             mlxtend: Not installed
2024-04-06 10:36:51,294:INFO:       statsforecast: Not installed
2024-04-06 10:36:51,294:INFO:        tune_sklearn: Not installed
2024-04-06 10:36:51,294:INFO:                 ray: Not installed
2024-04-06 10:36:51,294:INFO:            hyperopt: Not installed
2024-04-06 10:36:51,294:INFO:              optuna: Not installed
2024-04-06 10:36:51,294:INFO:               skopt: Not installed
2024-04-06 10:36:51,294:INFO:              mlflow: 2.11.3
2024-04-06 10:36:51,294:INFO:              gradio: Not installed
2024-04-06 10:36:51,294:INFO:             fastapi: Not installed
2024-04-06 10:36:51,294:INFO:             uvicorn: Not installed
2024-04-06 10:36:51,294:INFO:              m2cgen: Not installed
2024-04-06 10:36:51,294:INFO:           evidently: Not installed
2024-04-06 10:36:51,294:INFO:               fugue: Not installed
2024-04-06 10:36:51,294:INFO:           streamlit: 1.33.0
2024-04-06 10:36:51,294:INFO:             prophet: 1.1.5
2024-04-06 10:36:51,294:INFO:None
2024-04-06 10:36:51,294:INFO:Set up data.
2024-04-06 10:36:51,297:INFO:Set up folding strategy.
2024-04-06 10:36:51,297:INFO:Set up train/test split.
2024-04-06 10:36:51,297:INFO:Set up data.
2024-04-06 10:36:51,299:INFO:Set up index.
2024-04-06 10:36:51,299:INFO:Assigning column types.
2024-04-06 10:36:51,301:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 10:36:51,319:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:36:51,320:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:36:51,332:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:51,332:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:51,350:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:36:51,350:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:36:51,361:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:51,361:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:51,361:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 10:36:51,379:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:36:51,390:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:51,390:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:51,408:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:36:51,420:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:51,420:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:51,420:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 10:36:51,448:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:51,449:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:51,482:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:51,482:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:51,483:INFO:Preparing preprocessing pipeline...
2024-04-06 10:36:51,484:INFO:Set up simple imputation.
2024-04-06 10:36:51,484:INFO:Set up feature normalization.
2024-04-06 10:36:51,494:INFO:Finished creating preprocessing pipeline.
2024-04-06 10:36:51,495:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 10:36:51,495:INFO:Creating final display dataframe.
2024-04-06 10:36:51,524:INFO:Setup _display_container:                     Description             Value
0                    Session id              7793
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              d7fd
2024-04-06 10:36:51,557:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:51,557:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:51,586:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:51,586:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:36:51,586:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 10:36:51,587:INFO:setup() successfully completed in 0.3s...............
2024-04-06 10:36:51,587:INFO:Initializing compare_models()
2024-04-06 10:36:51,587:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 10:36:51,587:INFO:Checking exceptions
2024-04-06 10:36:51,589:INFO:Preparing display monitor
2024-04-06 10:36:51,597:INFO:Initializing Logistic Regression
2024-04-06 10:36:51,598:INFO:Total runtime is 3.6676724751790363e-06 minutes
2024-04-06 10:36:51,599:INFO:SubProcess create_model() called ==================================
2024-04-06 10:36:51,599:INFO:Initializing create_model()
2024-04-06 10:36:51,600:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x176d9ce90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:36:51,600:INFO:Checking exceptions
2024-04-06 10:36:51,600:INFO:Importing libraries
2024-04-06 10:36:51,600:INFO:Copying training dataset
2024-04-06 10:36:51,604:INFO:Defining folds
2024-04-06 10:36:51,604:INFO:Declaring metric variables
2024-04-06 10:36:51,606:INFO:Importing untrained model
2024-04-06 10:36:51,607:INFO:Logistic Regression Imported successfully
2024-04-06 10:36:51,610:INFO:Starting cross validation
2024-04-06 10:36:51,611:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:36:51,751:INFO:Calculating mean and std
2024-04-06 10:36:51,752:INFO:Creating metrics dataframe
2024-04-06 10:36:51,753:INFO:Uploading results into container
2024-04-06 10:36:51,753:INFO:Uploading model into container now
2024-04-06 10:36:51,753:INFO:_master_model_container: 1
2024-04-06 10:36:51,753:INFO:_display_container: 2
2024-04-06 10:36:51,753:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7793, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:36:51,753:INFO:create_model() successfully completed......................................
2024-04-06 10:36:51,955:INFO:SubProcess create_model() end ==================================
2024-04-06 10:36:51,955:INFO:Creating metrics dataframe
2024-04-06 10:36:51,958:INFO:Initializing Decision Tree Classifier
2024-04-06 10:36:51,958:INFO:Total runtime is 0.00601266622543335 minutes
2024-04-06 10:36:51,959:INFO:SubProcess create_model() called ==================================
2024-04-06 10:36:51,960:INFO:Initializing create_model()
2024-04-06 10:36:51,960:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x176d9ce90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:36:51,960:INFO:Checking exceptions
2024-04-06 10:36:51,960:INFO:Importing libraries
2024-04-06 10:36:51,960:INFO:Copying training dataset
2024-04-06 10:36:51,962:INFO:Defining folds
2024-04-06 10:36:51,962:INFO:Declaring metric variables
2024-04-06 10:36:51,963:INFO:Importing untrained model
2024-04-06 10:36:51,965:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:36:51,967:INFO:Starting cross validation
2024-04-06 10:36:51,967:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:36:52,054:INFO:Calculating mean and std
2024-04-06 10:36:52,054:INFO:Creating metrics dataframe
2024-04-06 10:36:52,055:INFO:Uploading results into container
2024-04-06 10:36:52,055:INFO:Uploading model into container now
2024-04-06 10:36:52,055:INFO:_master_model_container: 2
2024-04-06 10:36:52,055:INFO:_display_container: 2
2024-04-06 10:36:52,056:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7793, splitter='best')
2024-04-06 10:36:52,056:INFO:create_model() successfully completed......................................
2024-04-06 10:36:52,171:INFO:SubProcess create_model() end ==================================
2024-04-06 10:36:52,171:INFO:Creating metrics dataframe
2024-04-06 10:36:52,174:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 10:36:52,177:INFO:Initializing create_model()
2024-04-06 10:36:52,177:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7793, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:36:52,177:INFO:Checking exceptions
2024-04-06 10:36:52,177:INFO:Importing libraries
2024-04-06 10:36:52,177:INFO:Copying training dataset
2024-04-06 10:36:52,180:INFO:Defining folds
2024-04-06 10:36:52,180:INFO:Declaring metric variables
2024-04-06 10:36:52,180:INFO:Importing untrained model
2024-04-06 10:36:52,180:INFO:Declaring custom model
2024-04-06 10:36:52,180:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:36:52,180:INFO:Cross validation set to False
2024-04-06 10:36:52,180:INFO:Fitting Model
2024-04-06 10:36:52,194:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7793, splitter='best')
2024-04-06 10:36:52,194:INFO:create_model() successfully completed......................................
2024-04-06 10:36:52,311:INFO:Initializing create_model()
2024-04-06 10:36:52,311:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7793, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:36:52,311:INFO:Checking exceptions
2024-04-06 10:36:52,312:INFO:Importing libraries
2024-04-06 10:36:52,312:INFO:Copying training dataset
2024-04-06 10:36:52,314:INFO:Defining folds
2024-04-06 10:36:52,314:INFO:Declaring metric variables
2024-04-06 10:36:52,314:INFO:Importing untrained model
2024-04-06 10:36:52,314:INFO:Declaring custom model
2024-04-06 10:36:52,314:INFO:Logistic Regression Imported successfully
2024-04-06 10:36:52,314:INFO:Cross validation set to False
2024-04-06 10:36:52,314:INFO:Fitting Model
2024-04-06 10:36:52,324:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7793, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:36:52,324:INFO:create_model() successfully completed......................................
2024-04-06 10:36:52,491:INFO:_master_model_container: 2
2024-04-06 10:36:52,492:INFO:_display_container: 2
2024-04-06 10:36:52,492:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7793, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7793, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-06 10:36:52,493:INFO:compare_models() successfully completed......................................
2024-04-06 10:36:52,494:INFO:Initializing predict_model()
2024-04-06 10:36:52,494:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7793, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x177c66ca0>)
2024-04-06 10:36:52,494:INFO:Checking exceptions
2024-04-06 10:36:52,494:INFO:Preloading libraries
2024-04-06 10:36:53,041:INFO:Initializing predict_model()
2024-04-06 10:36:53,041:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7793, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30fe0b380>)
2024-04-06 10:36:53,041:INFO:Checking exceptions
2024-04-06 10:36:53,041:INFO:Preloading libraries
2024-04-06 10:36:53,411:INFO:Initializing tune_model()
2024-04-06 10:36:53,411:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7793, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-06 10:36:53,411:INFO:Checking exceptions
2024-04-06 10:36:53,417:INFO:Copying training dataset
2024-04-06 10:36:53,420:INFO:Checking base model
2024-04-06 10:36:53,421:INFO:Base model : Decision Tree Classifier
2024-04-06 10:36:53,422:INFO:Declaring metric variables
2024-04-06 10:36:53,423:INFO:Defining Hyperparameters
2024-04-06 10:36:53,594:INFO:Tuning with n_jobs=-1
2024-04-06 10:36:53,594:INFO:Initializing RandomizedSearchCV
2024-04-06 10:36:53,693:INFO:best_params: {'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.0002, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 7, 'actual_estimator__criterion': 'entropy'}
2024-04-06 10:36:53,693:INFO:Hyperparameter search completed
2024-04-06 10:36:53,693:INFO:SubProcess create_model() called ==================================
2024-04-06 10:36:53,693:INFO:Initializing create_model()
2024-04-06 10:36:53,693:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7793, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30fafa310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 7, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.0002, 'max_features': 'sqrt', 'max_depth': 7, 'criterion': 'entropy'})
2024-04-06 10:36:53,693:INFO:Checking exceptions
2024-04-06 10:36:53,693:INFO:Importing libraries
2024-04-06 10:36:53,693:INFO:Copying training dataset
2024-04-06 10:36:53,695:INFO:Defining folds
2024-04-06 10:36:53,695:INFO:Declaring metric variables
2024-04-06 10:36:53,696:INFO:Importing untrained model
2024-04-06 10:36:53,696:INFO:Declaring custom model
2024-04-06 10:36:53,698:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:36:53,700:INFO:Starting cross validation
2024-04-06 10:36:53,700:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:36:53,751:INFO:Calculating mean and std
2024-04-06 10:36:53,751:INFO:Creating metrics dataframe
2024-04-06 10:36:53,753:INFO:Finalizing model
2024-04-06 10:36:53,760:INFO:Uploading results into container
2024-04-06 10:36:53,761:INFO:Uploading model into container now
2024-04-06 10:36:53,761:INFO:_master_model_container: 3
2024-04-06 10:36:53,761:INFO:_display_container: 5
2024-04-06 10:36:53,761:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=7, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.0002, min_samples_leaf=2,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7793, splitter='best')
2024-04-06 10:36:53,761:INFO:create_model() successfully completed......................................
2024-04-06 10:36:53,873:INFO:SubProcess create_model() end ==================================
2024-04-06 10:36:53,873:INFO:choose_better activated
2024-04-06 10:36:53,875:INFO:SubProcess create_model() called ==================================
2024-04-06 10:36:53,875:INFO:Initializing create_model()
2024-04-06 10:36:53,875:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7793, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:36:53,875:INFO:Checking exceptions
2024-04-06 10:36:53,875:INFO:Importing libraries
2024-04-06 10:36:53,875:INFO:Copying training dataset
2024-04-06 10:36:53,878:INFO:Defining folds
2024-04-06 10:36:53,878:INFO:Declaring metric variables
2024-04-06 10:36:53,878:INFO:Importing untrained model
2024-04-06 10:36:53,878:INFO:Declaring custom model
2024-04-06 10:36:53,878:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:36:53,878:INFO:Starting cross validation
2024-04-06 10:36:53,878:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:36:53,950:INFO:Calculating mean and std
2024-04-06 10:36:53,950:INFO:Creating metrics dataframe
2024-04-06 10:36:53,951:INFO:Finalizing model
2024-04-06 10:36:53,963:INFO:Uploading results into container
2024-04-06 10:36:53,964:INFO:Uploading model into container now
2024-04-06 10:36:53,964:INFO:_master_model_container: 4
2024-04-06 10:36:53,964:INFO:_display_container: 6
2024-04-06 10:36:53,964:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7793, splitter='best')
2024-04-06 10:36:53,964:INFO:create_model() successfully completed......................................
2024-04-06 10:36:54,077:INFO:SubProcess create_model() end ==================================
2024-04-06 10:36:54,077:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7793, splitter='best') result for F1 is 0.5385
2024-04-06 10:36:54,077:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=7, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.0002, min_samples_leaf=2,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7793, splitter='best') result for F1 is 0.4836
2024-04-06 10:36:54,077:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7793, splitter='best') is best model
2024-04-06 10:36:54,078:INFO:choose_better completed
2024-04-06 10:36:54,078:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-06 10:36:54,081:INFO:_master_model_container: 4
2024-04-06 10:36:54,081:INFO:_display_container: 5
2024-04-06 10:36:54,082:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7793, splitter='best')
2024-04-06 10:36:54,082:INFO:tune_model() successfully completed......................................
2024-04-06 10:36:54,200:INFO:Initializing predict_model()
2024-04-06 10:36:54,200:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7793, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30844b240>)
2024-04-06 10:36:54,200:INFO:Checking exceptions
2024-04-06 10:36:54,200:INFO:Preloading libraries
2024-04-06 10:36:54,375:INFO:Initializing finalize_model()
2024-04-06 10:36:54,375:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7793, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-06 10:36:54,375:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7793, splitter='best')
2024-04-06 10:36:54,377:INFO:Initializing create_model()
2024-04-06 10:36:54,377:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7793, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:36:54,377:INFO:Checking exceptions
2024-04-06 10:36:54,377:INFO:Importing libraries
2024-04-06 10:36:54,377:INFO:Copying training dataset
2024-04-06 10:36:54,377:INFO:Defining folds
2024-04-06 10:36:54,377:INFO:Declaring metric variables
2024-04-06 10:36:54,378:INFO:Importing untrained model
2024-04-06 10:36:54,378:INFO:Declaring custom model
2024-04-06 10:36:54,378:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:36:54,378:INFO:Cross validation set to False
2024-04-06 10:36:54,378:INFO:Fitting Model
2024-04-06 10:36:54,430:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=7793,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:36:54,430:INFO:create_model() successfully completed......................................
2024-04-06 10:36:54,542:INFO:_master_model_container: 4
2024-04-06 10:36:54,542:INFO:_display_container: 6
2024-04-06 10:36:54,543:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=7793,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:36:54,544:INFO:finalize_model() successfully completed......................................
2024-04-06 10:36:54,656:INFO:Initializing save_model()
2024-04-06 10:36:54,656:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=7793,
                                        splitter='best'))],
         verbose=False), model_name=./kobe, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-06 10:36:54,656:INFO:Adding model into prep_pipe
2024-04-06 10:36:54,657:WARNING:Only Model saved as it was a pipeline.
2024-04-06 10:36:54,660:INFO:./kobe.pkl saved in current working directory
2024-04-06 10:36:54,662:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=7793,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:36:54,662:INFO:save_model() successfully completed......................................
2024-04-06 10:36:54,772:INFO:Initializing load_model()
2024-04-06 10:36:54,772:INFO:load_model(model_name=./kobe, platform=None, authentication=None, verbose=True)
2024-04-06 10:36:54,781:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-06 10:36:56,347:WARNING:/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/ipykernel_3194/3146931149.py:109: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-06 10:37:29,813:INFO:PyCaret ClassificationExperiment
2024-04-06 10:37:29,814:INFO:Logging name: clf-default-name
2024-04-06 10:37:29,814:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 10:37:29,814:INFO:version 3.3.0
2024-04-06 10:37:29,814:INFO:Initializing setup()
2024-04-06 10:37:29,814:INFO:self.USI: d17d
2024-04-06 10:37:29,814:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 10:37:29,814:INFO:Checking environment
2024-04-06 10:37:29,814:INFO:python_version: 3.11.3
2024-04-06 10:37:29,814:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 10:37:29,814:INFO:machine: arm64
2024-04-06 10:37:29,814:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:37:29,814:INFO:Memory: svmem(total=8589934592, available=1684619264, percent=80.4, used=2679226368, free=63160320, active=1638727680, inactive=1620279296, wired=1040498688)
2024-04-06 10:37:29,814:INFO:Physical Core: 8
2024-04-06 10:37:29,814:INFO:Logical Core: 8
2024-04-06 10:37:29,814:INFO:Checking libraries
2024-04-06 10:37:29,814:INFO:System:
2024-04-06 10:37:29,814:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 10:37:29,814:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 10:37:29,814:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:37:29,814:INFO:PyCaret required dependencies:
2024-04-06 10:37:29,814:INFO:                 pip: 24.0
2024-04-06 10:37:29,814:INFO:          setuptools: 65.5.0
2024-04-06 10:37:29,814:INFO:             pycaret: 3.3.0
2024-04-06 10:37:29,814:INFO:             IPython: 8.23.0
2024-04-06 10:37:29,814:INFO:          ipywidgets: 8.1.2
2024-04-06 10:37:29,814:INFO:                tqdm: 4.66.2
2024-04-06 10:37:29,814:INFO:               numpy: 1.26.4
2024-04-06 10:37:29,814:INFO:              pandas: 2.1.4
2024-04-06 10:37:29,814:INFO:              jinja2: 3.1.3
2024-04-06 10:37:29,814:INFO:               scipy: 1.11.4
2024-04-06 10:37:29,814:INFO:              joblib: 1.3.2
2024-04-06 10:37:29,814:INFO:             sklearn: 1.4.1.post1
2024-04-06 10:37:29,814:INFO:                pyod: 1.1.3
2024-04-06 10:37:29,814:INFO:            imblearn: 0.12.2
2024-04-06 10:37:29,814:INFO:   category_encoders: 2.6.3
2024-04-06 10:37:29,814:INFO:            lightgbm: 4.3.0
2024-04-06 10:37:29,814:INFO:               numba: 0.59.1
2024-04-06 10:37:29,814:INFO:            requests: 2.31.0
2024-04-06 10:37:29,815:INFO:          matplotlib: 3.7.5
2024-04-06 10:37:29,815:INFO:          scikitplot: 0.3.7
2024-04-06 10:37:29,815:INFO:         yellowbrick: 1.5
2024-04-06 10:37:29,815:INFO:              plotly: 5.20.0
2024-04-06 10:37:29,815:INFO:    plotly-resampler: Not installed
2024-04-06 10:37:29,815:INFO:             kaleido: 0.2.1
2024-04-06 10:37:29,815:INFO:           schemdraw: 0.15
2024-04-06 10:37:29,815:INFO:         statsmodels: 0.14.1
2024-04-06 10:37:29,815:INFO:              sktime: 0.28.0
2024-04-06 10:37:29,815:INFO:               tbats: 1.1.3
2024-04-06 10:37:29,815:INFO:            pmdarima: 2.0.4
2024-04-06 10:37:29,815:INFO:              psutil: 5.9.8
2024-04-06 10:37:29,815:INFO:          markupsafe: 2.1.5
2024-04-06 10:37:29,815:INFO:             pickle5: Not installed
2024-04-06 10:37:29,815:INFO:         cloudpickle: 3.0.0
2024-04-06 10:37:29,815:INFO:         deprecation: 2.1.0
2024-04-06 10:37:29,815:INFO:              xxhash: 3.4.1
2024-04-06 10:37:29,815:INFO:           wurlitzer: 3.0.3
2024-04-06 10:37:29,815:INFO:PyCaret optional dependencies:
2024-04-06 10:37:29,815:INFO:                shap: Not installed
2024-04-06 10:37:29,815:INFO:           interpret: Not installed
2024-04-06 10:37:29,815:INFO:                umap: Not installed
2024-04-06 10:37:29,815:INFO:     ydata_profiling: Not installed
2024-04-06 10:37:29,815:INFO:  explainerdashboard: Not installed
2024-04-06 10:37:29,815:INFO:             autoviz: Not installed
2024-04-06 10:37:29,815:INFO:           fairlearn: Not installed
2024-04-06 10:37:29,815:INFO:          deepchecks: Not installed
2024-04-06 10:37:29,815:INFO:             xgboost: Not installed
2024-04-06 10:37:29,815:INFO:            catboost: Not installed
2024-04-06 10:37:29,815:INFO:              kmodes: Not installed
2024-04-06 10:37:29,815:INFO:             mlxtend: Not installed
2024-04-06 10:37:29,815:INFO:       statsforecast: Not installed
2024-04-06 10:37:29,815:INFO:        tune_sklearn: Not installed
2024-04-06 10:37:29,815:INFO:                 ray: Not installed
2024-04-06 10:37:29,815:INFO:            hyperopt: Not installed
2024-04-06 10:37:29,815:INFO:              optuna: Not installed
2024-04-06 10:37:29,815:INFO:               skopt: Not installed
2024-04-06 10:37:29,815:INFO:              mlflow: 2.11.3
2024-04-06 10:37:29,815:INFO:              gradio: Not installed
2024-04-06 10:37:29,815:INFO:             fastapi: Not installed
2024-04-06 10:37:29,815:INFO:             uvicorn: Not installed
2024-04-06 10:37:29,815:INFO:              m2cgen: Not installed
2024-04-06 10:37:29,815:INFO:           evidently: Not installed
2024-04-06 10:37:29,815:INFO:               fugue: Not installed
2024-04-06 10:37:29,815:INFO:           streamlit: 1.33.0
2024-04-06 10:37:29,815:INFO:             prophet: 1.1.5
2024-04-06 10:37:29,815:INFO:None
2024-04-06 10:37:29,815:INFO:Set up data.
2024-04-06 10:37:29,818:INFO:Set up folding strategy.
2024-04-06 10:37:29,818:INFO:Set up train/test split.
2024-04-06 10:37:29,818:INFO:Set up data.
2024-04-06 10:37:29,820:INFO:Set up index.
2024-04-06 10:37:29,821:INFO:Assigning column types.
2024-04-06 10:37:29,823:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 10:37:29,845:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:37:29,845:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:37:29,857:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:37:29,858:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:37:29,877:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:37:29,877:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:37:29,889:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:37:29,889:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:37:29,889:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 10:37:29,909:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:37:29,920:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:37:29,920:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:37:29,938:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:37:29,949:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:37:29,949:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:37:29,949:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 10:37:29,978:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:37:29,978:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:37:30,008:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:37:30,008:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:37:30,009:INFO:Preparing preprocessing pipeline...
2024-04-06 10:37:30,009:INFO:Set up simple imputation.
2024-04-06 10:37:30,009:INFO:Set up feature normalization.
2024-04-06 10:37:30,021:INFO:Finished creating preprocessing pipeline.
2024-04-06 10:37:30,023:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 10:37:30,023:INFO:Creating final display dataframe.
2024-04-06 10:37:30,052:INFO:Setup _display_container:                     Description             Value
0                    Session id               470
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              d17d
2024-04-06 10:37:30,084:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:37:30,084:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:37:30,115:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:37:30,115:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:37:30,115:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 10:37:30,116:INFO:setup() successfully completed in 0.3s...............
2024-04-06 10:37:30,116:INFO:Initializing compare_models()
2024-04-06 10:37:30,116:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cd5dd10>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x30cd5dd10>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 10:37:30,116:INFO:Checking exceptions
2024-04-06 10:37:30,118:INFO:Preparing display monitor
2024-04-06 10:37:30,126:INFO:Initializing Logistic Regression
2024-04-06 10:37:30,126:INFO:Total runtime is 1.815954844156901e-06 minutes
2024-04-06 10:37:30,127:INFO:SubProcess create_model() called ==================================
2024-04-06 10:37:30,128:INFO:Initializing create_model()
2024-04-06 10:37:30,128:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cd5dd10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30fd30b10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:37:30,128:INFO:Checking exceptions
2024-04-06 10:37:30,128:INFO:Importing libraries
2024-04-06 10:37:30,128:INFO:Copying training dataset
2024-04-06 10:37:30,131:INFO:Defining folds
2024-04-06 10:37:30,131:INFO:Declaring metric variables
2024-04-06 10:37:30,132:INFO:Importing untrained model
2024-04-06 10:37:30,133:INFO:Logistic Regression Imported successfully
2024-04-06 10:37:30,136:INFO:Starting cross validation
2024-04-06 10:37:30,137:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:37:30,257:INFO:Calculating mean and std
2024-04-06 10:37:30,258:INFO:Creating metrics dataframe
2024-04-06 10:37:30,258:INFO:Uploading results into container
2024-04-06 10:37:30,259:INFO:Uploading model into container now
2024-04-06 10:37:30,259:INFO:_master_model_container: 1
2024-04-06 10:37:30,259:INFO:_display_container: 2
2024-04-06 10:37:30,259:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=470, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:37:30,259:INFO:create_model() successfully completed......................................
2024-04-06 10:37:30,437:INFO:SubProcess create_model() end ==================================
2024-04-06 10:37:30,437:INFO:Creating metrics dataframe
2024-04-06 10:37:30,439:INFO:Initializing Decision Tree Classifier
2024-04-06 10:37:30,439:INFO:Total runtime is 0.0052221814791361485 minutes
2024-04-06 10:37:30,441:INFO:SubProcess create_model() called ==================================
2024-04-06 10:37:30,441:INFO:Initializing create_model()
2024-04-06 10:37:30,441:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cd5dd10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30fd30b10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:37:30,441:INFO:Checking exceptions
2024-04-06 10:37:30,441:INFO:Importing libraries
2024-04-06 10:37:30,441:INFO:Copying training dataset
2024-04-06 10:37:30,443:INFO:Defining folds
2024-04-06 10:37:30,443:INFO:Declaring metric variables
2024-04-06 10:37:30,444:INFO:Importing untrained model
2024-04-06 10:37:30,445:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:37:30,448:INFO:Starting cross validation
2024-04-06 10:37:30,448:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:37:30,524:INFO:Calculating mean and std
2024-04-06 10:37:30,524:INFO:Creating metrics dataframe
2024-04-06 10:37:30,525:INFO:Uploading results into container
2024-04-06 10:37:30,525:INFO:Uploading model into container now
2024-04-06 10:37:30,525:INFO:_master_model_container: 2
2024-04-06 10:37:30,525:INFO:_display_container: 2
2024-04-06 10:37:30,525:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=470, splitter='best')
2024-04-06 10:37:30,525:INFO:create_model() successfully completed......................................
2024-04-06 10:37:30,648:INFO:SubProcess create_model() end ==================================
2024-04-06 10:37:30,648:INFO:Creating metrics dataframe
2024-04-06 10:37:30,651:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 10:37:30,653:INFO:Initializing create_model()
2024-04-06 10:37:30,653:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cd5dd10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=470, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:37:30,653:INFO:Checking exceptions
2024-04-06 10:37:30,654:INFO:Importing libraries
2024-04-06 10:37:30,654:INFO:Copying training dataset
2024-04-06 10:37:30,657:INFO:Defining folds
2024-04-06 10:37:30,657:INFO:Declaring metric variables
2024-04-06 10:37:30,657:INFO:Importing untrained model
2024-04-06 10:37:30,657:INFO:Declaring custom model
2024-04-06 10:37:30,658:INFO:Logistic Regression Imported successfully
2024-04-06 10:37:30,658:INFO:Cross validation set to False
2024-04-06 10:37:30,658:INFO:Fitting Model
2024-04-06 10:37:30,671:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=470, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:37:30,671:INFO:create_model() successfully completed......................................
2024-04-06 10:37:30,954:INFO:Initializing create_model()
2024-04-06 10:37:30,954:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cd5dd10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=470, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:37:30,954:INFO:Checking exceptions
2024-04-06 10:37:30,955:INFO:Importing libraries
2024-04-06 10:37:30,955:INFO:Copying training dataset
2024-04-06 10:37:30,957:INFO:Defining folds
2024-04-06 10:37:30,957:INFO:Declaring metric variables
2024-04-06 10:37:30,957:INFO:Importing untrained model
2024-04-06 10:37:30,957:INFO:Declaring custom model
2024-04-06 10:37:30,957:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:37:30,957:INFO:Cross validation set to False
2024-04-06 10:37:30,957:INFO:Fitting Model
2024-04-06 10:37:30,969:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=470, splitter='best')
2024-04-06 10:37:30,970:INFO:create_model() successfully completed......................................
2024-04-06 10:37:31,088:INFO:_master_model_container: 2
2024-04-06 10:37:31,088:INFO:_display_container: 2
2024-04-06 10:37:31,089:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=470, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=470, splitter='best')]
2024-04-06 10:37:31,089:INFO:compare_models() successfully completed......................................
2024-04-06 10:37:31,089:INFO:Initializing predict_model()
2024-04-06 10:37:31,089:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cd5dd10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=470, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1684e6d40>)
2024-04-06 10:37:31,089:INFO:Checking exceptions
2024-04-06 10:37:31,089:INFO:Preloading libraries
2024-04-06 10:37:31,776:INFO:Initializing predict_model()
2024-04-06 10:37:31,776:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cd5dd10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=470, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30aa10e00>)
2024-04-06 10:37:31,776:INFO:Checking exceptions
2024-04-06 10:37:31,776:INFO:Preloading libraries
2024-04-06 10:37:32,108:INFO:Initializing tune_model()
2024-04-06 10:37:32,108:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cd5dd10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=470, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-06 10:37:32,108:INFO:Checking exceptions
2024-04-06 10:37:32,115:INFO:Copying training dataset
2024-04-06 10:37:32,118:INFO:Checking base model
2024-04-06 10:37:32,119:INFO:Base model : Logistic Regression
2024-04-06 10:37:32,121:INFO:Declaring metric variables
2024-04-06 10:37:32,126:INFO:Defining Hyperparameters
2024-04-06 10:37:32,262:INFO:Tuning with n_jobs=-1
2024-04-06 10:37:32,262:INFO:Initializing RandomizedSearchCV
2024-04-06 10:37:32,393:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 4.525}
2024-04-06 10:37:32,393:INFO:Hyperparameter search completed
2024-04-06 10:37:32,393:INFO:SubProcess create_model() called ==================================
2024-04-06 10:37:32,393:INFO:Initializing create_model()
2024-04-06 10:37:32,393:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cd5dd10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=470, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30a6e2450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'class_weight': 'balanced', 'C': 4.525})
2024-04-06 10:37:32,393:INFO:Checking exceptions
2024-04-06 10:37:32,393:INFO:Importing libraries
2024-04-06 10:37:32,393:INFO:Copying training dataset
2024-04-06 10:37:32,395:INFO:Defining folds
2024-04-06 10:37:32,395:INFO:Declaring metric variables
2024-04-06 10:37:32,396:INFO:Importing untrained model
2024-04-06 10:37:32,397:INFO:Declaring custom model
2024-04-06 10:37:32,398:INFO:Logistic Regression Imported successfully
2024-04-06 10:37:32,400:INFO:Starting cross validation
2024-04-06 10:37:32,400:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:37:32,452:INFO:Calculating mean and std
2024-04-06 10:37:32,452:INFO:Creating metrics dataframe
2024-04-06 10:37:32,454:INFO:Finalizing model
2024-04-06 10:37:32,466:INFO:Uploading results into container
2024-04-06 10:37:32,468:INFO:Uploading model into container now
2024-04-06 10:37:32,470:INFO:_master_model_container: 3
2024-04-06 10:37:32,470:INFO:_display_container: 5
2024-04-06 10:37:32,471:INFO:LogisticRegression(C=4.525, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=470, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:37:32,471:INFO:create_model() successfully completed......................................
2024-04-06 10:37:32,651:INFO:SubProcess create_model() end ==================================
2024-04-06 10:37:32,652:INFO:choose_better activated
2024-04-06 10:37:32,655:INFO:SubProcess create_model() called ==================================
2024-04-06 10:37:32,656:INFO:Initializing create_model()
2024-04-06 10:37:32,656:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cd5dd10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=470, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:37:32,657:INFO:Checking exceptions
2024-04-06 10:37:32,660:INFO:Importing libraries
2024-04-06 10:37:32,667:INFO:Copying training dataset
2024-04-06 10:37:32,669:INFO:Defining folds
2024-04-06 10:37:32,669:INFO:Declaring metric variables
2024-04-06 10:37:32,669:INFO:Importing untrained model
2024-04-06 10:37:32,669:INFO:Declaring custom model
2024-04-06 10:37:32,669:INFO:Logistic Regression Imported successfully
2024-04-06 10:37:32,669:INFO:Starting cross validation
2024-04-06 10:37:32,670:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:37:32,752:INFO:Calculating mean and std
2024-04-06 10:37:32,752:INFO:Creating metrics dataframe
2024-04-06 10:37:32,753:INFO:Finalizing model
2024-04-06 10:37:32,779:INFO:Uploading results into container
2024-04-06 10:37:32,780:INFO:Uploading model into container now
2024-04-06 10:37:32,782:INFO:_master_model_container: 4
2024-04-06 10:37:32,782:INFO:_display_container: 6
2024-04-06 10:37:32,782:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=470, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:37:32,782:INFO:create_model() successfully completed......................................
2024-04-06 10:37:32,968:INFO:SubProcess create_model() end ==================================
2024-04-06 10:37:32,969:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=470, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 0.5243
2024-04-06 10:37:32,969:INFO:LogisticRegression(C=4.525, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=470, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 0.5418
2024-04-06 10:37:32,969:INFO:LogisticRegression(C=4.525, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=470, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2024-04-06 10:37:32,969:INFO:choose_better completed
2024-04-06 10:37:32,982:INFO:_master_model_container: 4
2024-04-06 10:37:32,983:INFO:_display_container: 5
2024-04-06 10:37:32,984:INFO:LogisticRegression(C=4.525, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=470, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:37:32,984:INFO:tune_model() successfully completed......................................
2024-04-06 10:37:33,130:INFO:Initializing predict_model()
2024-04-06 10:37:33,130:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cd5dd10>, estimator=LogisticRegression(C=4.525, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=470, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1684e6b60>)
2024-04-06 10:37:33,130:INFO:Checking exceptions
2024-04-06 10:37:33,130:INFO:Preloading libraries
2024-04-06 10:37:33,404:INFO:Initializing finalize_model()
2024-04-06 10:37:33,404:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cd5dd10>, estimator=LogisticRegression(C=4.525, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=470, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-06 10:37:33,404:INFO:Finalizing LogisticRegression(C=4.525, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=470, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:37:33,406:INFO:Initializing create_model()
2024-04-06 10:37:33,406:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30cd5dd10>, estimator=LogisticRegression(C=4.525, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=470, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:37:33,406:INFO:Checking exceptions
2024-04-06 10:37:33,406:INFO:Importing libraries
2024-04-06 10:37:33,406:INFO:Copying training dataset
2024-04-06 10:37:33,406:INFO:Defining folds
2024-04-06 10:37:33,406:INFO:Declaring metric variables
2024-04-06 10:37:33,406:INFO:Importing untrained model
2024-04-06 10:37:33,407:INFO:Declaring custom model
2024-04-06 10:37:33,407:INFO:Logistic Regression Imported successfully
2024-04-06 10:37:33,407:INFO:Cross validation set to False
2024-04-06 10:37:33,407:INFO:Fitting Model
2024-04-06 10:37:33,457:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=4.525, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2', random_state=470,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-04-06 10:37:33,457:INFO:create_model() successfully completed......................................
2024-04-06 10:37:33,637:INFO:_master_model_container: 4
2024-04-06 10:37:33,637:INFO:_display_container: 6
2024-04-06 10:37:33,639:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=4.525, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2', random_state=470,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-04-06 10:37:33,639:INFO:finalize_model() successfully completed......................................
2024-04-06 10:37:33,786:INFO:Initializing save_model()
2024-04-06 10:37:33,786:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=4.525, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2', random_state=470,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), model_name=./kobe, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-06 10:37:33,786:INFO:Adding model into prep_pipe
2024-04-06 10:37:33,786:WARNING:Only Model saved as it was a pipeline.
2024-04-06 10:37:33,789:INFO:./kobe.pkl saved in current working directory
2024-04-06 10:37:33,791:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=4.525, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2', random_state=470,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-04-06 10:37:33,791:INFO:save_model() successfully completed......................................
2024-04-06 10:37:33,924:INFO:Initializing load_model()
2024-04-06 10:37:33,925:INFO:load_model(model_name=./kobe, platform=None, authentication=None, verbose=True)
2024-04-06 10:37:33,941:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-06 10:37:35,654:WARNING:/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/ipykernel_3194/3036111117.py:109: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-06 10:39:10,498:INFO:PyCaret ClassificationExperiment
2024-04-06 10:39:10,498:INFO:Logging name: clf-default-name
2024-04-06 10:39:10,498:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 10:39:10,498:INFO:version 3.3.0
2024-04-06 10:39:10,498:INFO:Initializing setup()
2024-04-06 10:39:10,498:INFO:self.USI: a9e5
2024-04-06 10:39:10,498:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 10:39:10,498:INFO:Checking environment
2024-04-06 10:39:10,498:INFO:python_version: 3.11.3
2024-04-06 10:39:10,498:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 10:39:10,498:INFO:machine: arm64
2024-04-06 10:39:10,498:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:39:10,499:INFO:Memory: svmem(total=8589934592, available=1580908544, percent=81.6, used=2600632320, free=63488000, active=1531674624, inactive=1516699648, wired=1068957696)
2024-04-06 10:39:10,499:INFO:Physical Core: 8
2024-04-06 10:39:10,499:INFO:Logical Core: 8
2024-04-06 10:39:10,499:INFO:Checking libraries
2024-04-06 10:39:10,499:INFO:System:
2024-04-06 10:39:10,499:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 10:39:10,499:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 10:39:10,499:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:39:10,499:INFO:PyCaret required dependencies:
2024-04-06 10:39:10,499:INFO:                 pip: 24.0
2024-04-06 10:39:10,499:INFO:          setuptools: 65.5.0
2024-04-06 10:39:10,499:INFO:             pycaret: 3.3.0
2024-04-06 10:39:10,499:INFO:             IPython: 8.23.0
2024-04-06 10:39:10,499:INFO:          ipywidgets: 8.1.2
2024-04-06 10:39:10,499:INFO:                tqdm: 4.66.2
2024-04-06 10:39:10,499:INFO:               numpy: 1.26.4
2024-04-06 10:39:10,499:INFO:              pandas: 2.1.4
2024-04-06 10:39:10,499:INFO:              jinja2: 3.1.3
2024-04-06 10:39:10,499:INFO:               scipy: 1.11.4
2024-04-06 10:39:10,499:INFO:              joblib: 1.3.2
2024-04-06 10:39:10,499:INFO:             sklearn: 1.4.1.post1
2024-04-06 10:39:10,499:INFO:                pyod: 1.1.3
2024-04-06 10:39:10,499:INFO:            imblearn: 0.12.2
2024-04-06 10:39:10,499:INFO:   category_encoders: 2.6.3
2024-04-06 10:39:10,499:INFO:            lightgbm: 4.3.0
2024-04-06 10:39:10,499:INFO:               numba: 0.59.1
2024-04-06 10:39:10,499:INFO:            requests: 2.31.0
2024-04-06 10:39:10,499:INFO:          matplotlib: 3.7.5
2024-04-06 10:39:10,499:INFO:          scikitplot: 0.3.7
2024-04-06 10:39:10,499:INFO:         yellowbrick: 1.5
2024-04-06 10:39:10,499:INFO:              plotly: 5.20.0
2024-04-06 10:39:10,499:INFO:    plotly-resampler: Not installed
2024-04-06 10:39:10,499:INFO:             kaleido: 0.2.1
2024-04-06 10:39:10,499:INFO:           schemdraw: 0.15
2024-04-06 10:39:10,499:INFO:         statsmodels: 0.14.1
2024-04-06 10:39:10,499:INFO:              sktime: 0.28.0
2024-04-06 10:39:10,499:INFO:               tbats: 1.1.3
2024-04-06 10:39:10,499:INFO:            pmdarima: 2.0.4
2024-04-06 10:39:10,499:INFO:              psutil: 5.9.8
2024-04-06 10:39:10,499:INFO:          markupsafe: 2.1.5
2024-04-06 10:39:10,499:INFO:             pickle5: Not installed
2024-04-06 10:39:10,499:INFO:         cloudpickle: 3.0.0
2024-04-06 10:39:10,499:INFO:         deprecation: 2.1.0
2024-04-06 10:39:10,499:INFO:              xxhash: 3.4.1
2024-04-06 10:39:10,499:INFO:           wurlitzer: 3.0.3
2024-04-06 10:39:10,499:INFO:PyCaret optional dependencies:
2024-04-06 10:39:10,499:INFO:                shap: Not installed
2024-04-06 10:39:10,499:INFO:           interpret: Not installed
2024-04-06 10:39:10,499:INFO:                umap: Not installed
2024-04-06 10:39:10,499:INFO:     ydata_profiling: Not installed
2024-04-06 10:39:10,499:INFO:  explainerdashboard: Not installed
2024-04-06 10:39:10,499:INFO:             autoviz: Not installed
2024-04-06 10:39:10,499:INFO:           fairlearn: Not installed
2024-04-06 10:39:10,499:INFO:          deepchecks: Not installed
2024-04-06 10:39:10,499:INFO:             xgboost: Not installed
2024-04-06 10:39:10,500:INFO:            catboost: Not installed
2024-04-06 10:39:10,500:INFO:              kmodes: Not installed
2024-04-06 10:39:10,500:INFO:             mlxtend: Not installed
2024-04-06 10:39:10,500:INFO:       statsforecast: Not installed
2024-04-06 10:39:10,500:INFO:        tune_sklearn: Not installed
2024-04-06 10:39:10,500:INFO:                 ray: Not installed
2024-04-06 10:39:10,500:INFO:            hyperopt: Not installed
2024-04-06 10:39:10,500:INFO:              optuna: Not installed
2024-04-06 10:39:10,500:INFO:               skopt: Not installed
2024-04-06 10:39:10,500:INFO:              mlflow: 2.11.3
2024-04-06 10:39:10,500:INFO:              gradio: Not installed
2024-04-06 10:39:10,500:INFO:             fastapi: Not installed
2024-04-06 10:39:10,500:INFO:             uvicorn: Not installed
2024-04-06 10:39:10,500:INFO:              m2cgen: Not installed
2024-04-06 10:39:10,500:INFO:           evidently: Not installed
2024-04-06 10:39:10,500:INFO:               fugue: Not installed
2024-04-06 10:39:10,500:INFO:           streamlit: 1.33.0
2024-04-06 10:39:10,500:INFO:             prophet: 1.1.5
2024-04-06 10:39:10,500:INFO:None
2024-04-06 10:39:10,500:INFO:Set up data.
2024-04-06 10:39:10,503:INFO:Set up folding strategy.
2024-04-06 10:39:10,503:INFO:Set up train/test split.
2024-04-06 10:39:10,503:INFO:Set up data.
2024-04-06 10:39:10,505:INFO:Set up index.
2024-04-06 10:39:10,505:INFO:Assigning column types.
2024-04-06 10:39:10,507:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 10:39:10,525:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:39:10,526:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:39:10,537:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:39:10,538:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:39:10,555:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:39:10,556:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:39:10,568:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:39:10,568:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:39:10,568:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 10:39:10,587:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:39:10,599:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:39:10,599:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:39:10,623:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:39:10,634:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:39:10,634:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:39:10,634:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 10:39:10,663:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:39:10,663:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:39:10,694:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:39:10,694:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:39:10,694:INFO:Preparing preprocessing pipeline...
2024-04-06 10:39:10,695:INFO:Set up simple imputation.
2024-04-06 10:39:10,695:INFO:Set up feature normalization.
2024-04-06 10:39:10,705:INFO:Finished creating preprocessing pipeline.
2024-04-06 10:39:10,706:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 10:39:10,706:INFO:Creating final display dataframe.
2024-04-06 10:39:10,736:INFO:Setup _display_container:                     Description             Value
0                    Session id              3484
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              a9e5
2024-04-06 10:39:10,769:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:39:10,769:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:39:10,798:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:39:10,798:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:39:10,799:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 10:39:10,799:INFO:setup() successfully completed in 0.31s...............
2024-04-06 10:39:10,800:INFO:Initializing compare_models()
2024-04-06 10:39:10,800:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30faa51d0>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x30faa51d0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 10:39:10,800:INFO:Checking exceptions
2024-04-06 10:39:10,802:INFO:Preparing display monitor
2024-04-06 10:39:10,810:INFO:Initializing Logistic Regression
2024-04-06 10:39:10,810:INFO:Total runtime is 2.7020772298177085e-06 minutes
2024-04-06 10:39:10,812:INFO:SubProcess create_model() called ==================================
2024-04-06 10:39:10,812:INFO:Initializing create_model()
2024-04-06 10:39:10,812:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30faa51d0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30a9bb090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:39:10,812:INFO:Checking exceptions
2024-04-06 10:39:10,812:INFO:Importing libraries
2024-04-06 10:39:10,812:INFO:Copying training dataset
2024-04-06 10:39:10,815:INFO:Defining folds
2024-04-06 10:39:10,816:INFO:Declaring metric variables
2024-04-06 10:39:10,818:INFO:Importing untrained model
2024-04-06 10:39:10,819:INFO:Logistic Regression Imported successfully
2024-04-06 10:39:10,822:INFO:Starting cross validation
2024-04-06 10:39:10,823:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:39:10,944:INFO:Calculating mean and std
2024-04-06 10:39:10,944:INFO:Creating metrics dataframe
2024-04-06 10:39:10,945:INFO:Uploading results into container
2024-04-06 10:39:10,945:INFO:Uploading model into container now
2024-04-06 10:39:10,945:INFO:_master_model_container: 1
2024-04-06 10:39:10,945:INFO:_display_container: 2
2024-04-06 10:39:10,945:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3484, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:39:10,945:INFO:create_model() successfully completed......................................
2024-04-06 10:39:11,128:INFO:SubProcess create_model() end ==================================
2024-04-06 10:39:11,128:INFO:Creating metrics dataframe
2024-04-06 10:39:11,130:INFO:Initializing Decision Tree Classifier
2024-04-06 10:39:11,130:INFO:Total runtime is 0.005335100491841634 minutes
2024-04-06 10:39:11,131:INFO:SubProcess create_model() called ==================================
2024-04-06 10:39:11,131:INFO:Initializing create_model()
2024-04-06 10:39:11,131:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30faa51d0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30a9bb090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:39:11,132:INFO:Checking exceptions
2024-04-06 10:39:11,132:INFO:Importing libraries
2024-04-06 10:39:11,132:INFO:Copying training dataset
2024-04-06 10:39:11,134:INFO:Defining folds
2024-04-06 10:39:11,134:INFO:Declaring metric variables
2024-04-06 10:39:11,135:INFO:Importing untrained model
2024-04-06 10:39:11,136:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:39:11,138:INFO:Starting cross validation
2024-04-06 10:39:11,139:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:39:11,254:INFO:Calculating mean and std
2024-04-06 10:39:11,254:INFO:Creating metrics dataframe
2024-04-06 10:39:11,255:INFO:Uploading results into container
2024-04-06 10:39:11,255:INFO:Uploading model into container now
2024-04-06 10:39:11,255:INFO:_master_model_container: 2
2024-04-06 10:39:11,255:INFO:_display_container: 2
2024-04-06 10:39:11,255:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3484, splitter='best')
2024-04-06 10:39:11,255:INFO:create_model() successfully completed......................................
2024-04-06 10:39:11,378:INFO:SubProcess create_model() end ==================================
2024-04-06 10:39:11,378:INFO:Creating metrics dataframe
2024-04-06 10:39:11,381:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 10:39:11,384:INFO:Initializing create_model()
2024-04-06 10:39:11,384:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30faa51d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3484, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:39:11,384:INFO:Checking exceptions
2024-04-06 10:39:11,384:INFO:Importing libraries
2024-04-06 10:39:11,385:INFO:Copying training dataset
2024-04-06 10:39:11,387:INFO:Defining folds
2024-04-06 10:39:11,387:INFO:Declaring metric variables
2024-04-06 10:39:11,387:INFO:Importing untrained model
2024-04-06 10:39:11,387:INFO:Declaring custom model
2024-04-06 10:39:11,387:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:39:11,387:INFO:Cross validation set to False
2024-04-06 10:39:11,387:INFO:Fitting Model
2024-04-06 10:39:11,401:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3484, splitter='best')
2024-04-06 10:39:11,401:INFO:create_model() successfully completed......................................
2024-04-06 10:39:11,515:INFO:Initializing create_model()
2024-04-06 10:39:11,515:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30faa51d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3484, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:39:11,515:INFO:Checking exceptions
2024-04-06 10:39:11,515:INFO:Importing libraries
2024-04-06 10:39:11,515:INFO:Copying training dataset
2024-04-06 10:39:11,517:INFO:Defining folds
2024-04-06 10:39:11,517:INFO:Declaring metric variables
2024-04-06 10:39:11,517:INFO:Importing untrained model
2024-04-06 10:39:11,517:INFO:Declaring custom model
2024-04-06 10:39:11,517:INFO:Logistic Regression Imported successfully
2024-04-06 10:39:11,518:INFO:Cross validation set to False
2024-04-06 10:39:11,518:INFO:Fitting Model
2024-04-06 10:39:11,525:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3484, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:39:11,525:INFO:create_model() successfully completed......................................
2024-04-06 10:39:11,756:INFO:_master_model_container: 2
2024-04-06 10:39:11,756:INFO:_display_container: 2
2024-04-06 10:39:11,756:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3484, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3484, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-06 10:39:11,757:INFO:compare_models() successfully completed......................................
2024-04-06 10:39:11,758:INFO:Initializing predict_model()
2024-04-06 10:39:11,758:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30faa51d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3484, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x175247c40>)
2024-04-06 10:39:11,758:INFO:Checking exceptions
2024-04-06 10:39:11,758:INFO:Preloading libraries
2024-04-06 10:39:12,437:INFO:Initializing predict_model()
2024-04-06 10:39:12,437:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30faa51d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3484, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30fa3ad40>)
2024-04-06 10:39:12,437:INFO:Checking exceptions
2024-04-06 10:39:12,437:INFO:Preloading libraries
2024-04-06 10:39:12,793:INFO:Initializing tune_model()
2024-04-06 10:39:12,793:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30faa51d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3484, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-06 10:39:12,793:INFO:Checking exceptions
2024-04-06 10:39:12,800:INFO:Copying training dataset
2024-04-06 10:39:12,803:INFO:Checking base model
2024-04-06 10:39:12,804:INFO:Base model : Decision Tree Classifier
2024-04-06 10:39:12,806:INFO:Declaring metric variables
2024-04-06 10:39:12,808:INFO:Defining Hyperparameters
2024-04-06 10:39:13,001:INFO:Tuning with n_jobs=-1
2024-04-06 10:39:13,001:INFO:Initializing RandomizedSearchCV
2024-04-06 10:39:13,118:INFO:best_params: {'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.0001, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 12, 'actual_estimator__criterion': 'entropy'}
2024-04-06 10:39:13,118:INFO:Hyperparameter search completed
2024-04-06 10:39:13,118:INFO:SubProcess create_model() called ==================================
2024-04-06 10:39:13,119:INFO:Initializing create_model()
2024-04-06 10:39:13,119:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30faa51d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3484, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30fa72910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 9, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.0001, 'max_features': 'log2', 'max_depth': 12, 'criterion': 'entropy'})
2024-04-06 10:39:13,119:INFO:Checking exceptions
2024-04-06 10:39:13,119:INFO:Importing libraries
2024-04-06 10:39:13,119:INFO:Copying training dataset
2024-04-06 10:39:13,120:INFO:Defining folds
2024-04-06 10:39:13,120:INFO:Declaring metric variables
2024-04-06 10:39:13,122:INFO:Importing untrained model
2024-04-06 10:39:13,122:INFO:Declaring custom model
2024-04-06 10:39:13,123:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:39:13,126:INFO:Starting cross validation
2024-04-06 10:39:13,126:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:39:13,180:INFO:Calculating mean and std
2024-04-06 10:39:13,180:INFO:Creating metrics dataframe
2024-04-06 10:39:13,182:INFO:Finalizing model
2024-04-06 10:39:13,190:INFO:Uploading results into container
2024-04-06 10:39:13,191:INFO:Uploading model into container now
2024-04-06 10:39:13,191:INFO:_master_model_container: 3
2024-04-06 10:39:13,191:INFO:_display_container: 5
2024-04-06 10:39:13,191:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=12, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0.0001, min_samples_leaf=3,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3484, splitter='best')
2024-04-06 10:39:13,191:INFO:create_model() successfully completed......................................
2024-04-06 10:39:13,307:INFO:SubProcess create_model() end ==================================
2024-04-06 10:39:13,307:INFO:choose_better activated
2024-04-06 10:39:13,308:INFO:SubProcess create_model() called ==================================
2024-04-06 10:39:13,309:INFO:Initializing create_model()
2024-04-06 10:39:13,309:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30faa51d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3484, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:39:13,309:INFO:Checking exceptions
2024-04-06 10:39:13,309:INFO:Importing libraries
2024-04-06 10:39:13,309:INFO:Copying training dataset
2024-04-06 10:39:13,312:INFO:Defining folds
2024-04-06 10:39:13,312:INFO:Declaring metric variables
2024-04-06 10:39:13,312:INFO:Importing untrained model
2024-04-06 10:39:13,312:INFO:Declaring custom model
2024-04-06 10:39:13,312:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:39:13,312:INFO:Starting cross validation
2024-04-06 10:39:13,312:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:39:13,388:INFO:Calculating mean and std
2024-04-06 10:39:13,389:INFO:Creating metrics dataframe
2024-04-06 10:39:13,389:INFO:Finalizing model
2024-04-06 10:39:13,403:INFO:Uploading results into container
2024-04-06 10:39:13,403:INFO:Uploading model into container now
2024-04-06 10:39:13,404:INFO:_master_model_container: 4
2024-04-06 10:39:13,404:INFO:_display_container: 6
2024-04-06 10:39:13,404:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3484, splitter='best')
2024-04-06 10:39:13,404:INFO:create_model() successfully completed......................................
2024-04-06 10:39:13,540:INFO:SubProcess create_model() end ==================================
2024-04-06 10:39:13,540:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3484, splitter='best') result for F1 is 0.5256
2024-04-06 10:39:13,540:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=12, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0.0001, min_samples_leaf=3,
                       min_samples_split=9, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3484, splitter='best') result for F1 is 0.4949
2024-04-06 10:39:13,540:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3484, splitter='best') is best model
2024-04-06 10:39:13,540:INFO:choose_better completed
2024-04-06 10:39:13,540:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-06 10:39:13,544:INFO:_master_model_container: 4
2024-04-06 10:39:13,544:INFO:_display_container: 5
2024-04-06 10:39:13,545:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3484, splitter='best')
2024-04-06 10:39:13,545:INFO:tune_model() successfully completed......................................
2024-04-06 10:39:13,662:INFO:Initializing predict_model()
2024-04-06 10:39:13,662:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30faa51d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3484, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x177e64b80>)
2024-04-06 10:39:13,662:INFO:Checking exceptions
2024-04-06 10:39:13,662:INFO:Preloading libraries
2024-04-06 10:39:13,844:INFO:Initializing finalize_model()
2024-04-06 10:39:13,844:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30faa51d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3484, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-06 10:39:13,845:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3484, splitter='best')
2024-04-06 10:39:13,846:INFO:Initializing create_model()
2024-04-06 10:39:13,846:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30faa51d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3484, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:39:13,846:INFO:Checking exceptions
2024-04-06 10:39:13,847:INFO:Importing libraries
2024-04-06 10:39:13,847:INFO:Copying training dataset
2024-04-06 10:39:13,847:INFO:Defining folds
2024-04-06 10:39:13,847:INFO:Declaring metric variables
2024-04-06 10:39:13,847:INFO:Importing untrained model
2024-04-06 10:39:13,847:INFO:Declaring custom model
2024-04-06 10:39:13,847:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:39:13,847:INFO:Cross validation set to False
2024-04-06 10:39:13,847:INFO:Fitting Model
2024-04-06 10:39:13,899:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=3484,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:39:13,899:INFO:create_model() successfully completed......................................
2024-04-06 10:39:14,014:INFO:_master_model_container: 4
2024-04-06 10:39:14,014:INFO:_display_container: 6
2024-04-06 10:39:14,016:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=3484,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:39:14,016:INFO:finalize_model() successfully completed......................................
2024-04-06 10:39:14,133:INFO:Initializing save_model()
2024-04-06 10:39:14,133:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=3484,
                                        splitter='best'))],
         verbose=False), model_name=./kobe, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-06 10:39:14,133:INFO:Adding model into prep_pipe
2024-04-06 10:39:14,133:WARNING:Only Model saved as it was a pipeline.
2024-04-06 10:39:14,136:INFO:./kobe.pkl saved in current working directory
2024-04-06 10:39:14,138:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=3484,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:39:14,138:INFO:save_model() successfully completed......................................
2024-04-06 10:39:14,249:INFO:Initializing load_model()
2024-04-06 10:39:14,249:INFO:load_model(model_name=./kobe, platform=None, authentication=None, verbose=True)
2024-04-06 10:39:14,258:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-06 10:39:16,121:WARNING:/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/ipykernel_3194/1937607199.py:143: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-06 10:40:04,294:INFO:PyCaret ClassificationExperiment
2024-04-06 10:40:04,294:INFO:Logging name: clf-default-name
2024-04-06 10:40:04,294:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 10:40:04,294:INFO:version 3.3.0
2024-04-06 10:40:04,294:INFO:Initializing setup()
2024-04-06 10:40:04,294:INFO:self.USI: da7b
2024-04-06 10:40:04,294:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 10:40:04,294:INFO:Checking environment
2024-04-06 10:40:04,294:INFO:python_version: 3.11.3
2024-04-06 10:40:04,294:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 10:40:04,294:INFO:machine: arm64
2024-04-06 10:40:04,294:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:40:04,294:INFO:Memory: svmem(total=8589934592, available=1694793728, percent=80.3, used=2734751744, free=50233344, active=1663401984, inactive=1640382464, wired=1071349760)
2024-04-06 10:40:04,295:INFO:Physical Core: 8
2024-04-06 10:40:04,295:INFO:Logical Core: 8
2024-04-06 10:40:04,295:INFO:Checking libraries
2024-04-06 10:40:04,295:INFO:System:
2024-04-06 10:40:04,295:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 10:40:04,295:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 10:40:04,295:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:40:04,295:INFO:PyCaret required dependencies:
2024-04-06 10:40:04,295:INFO:                 pip: 24.0
2024-04-06 10:40:04,295:INFO:          setuptools: 65.5.0
2024-04-06 10:40:04,295:INFO:             pycaret: 3.3.0
2024-04-06 10:40:04,295:INFO:             IPython: 8.23.0
2024-04-06 10:40:04,295:INFO:          ipywidgets: 8.1.2
2024-04-06 10:40:04,295:INFO:                tqdm: 4.66.2
2024-04-06 10:40:04,295:INFO:               numpy: 1.26.4
2024-04-06 10:40:04,295:INFO:              pandas: 2.1.4
2024-04-06 10:40:04,295:INFO:              jinja2: 3.1.3
2024-04-06 10:40:04,295:INFO:               scipy: 1.11.4
2024-04-06 10:40:04,295:INFO:              joblib: 1.3.2
2024-04-06 10:40:04,295:INFO:             sklearn: 1.4.1.post1
2024-04-06 10:40:04,295:INFO:                pyod: 1.1.3
2024-04-06 10:40:04,295:INFO:            imblearn: 0.12.2
2024-04-06 10:40:04,295:INFO:   category_encoders: 2.6.3
2024-04-06 10:40:04,295:INFO:            lightgbm: 4.3.0
2024-04-06 10:40:04,295:INFO:               numba: 0.59.1
2024-04-06 10:40:04,295:INFO:            requests: 2.31.0
2024-04-06 10:40:04,295:INFO:          matplotlib: 3.7.5
2024-04-06 10:40:04,295:INFO:          scikitplot: 0.3.7
2024-04-06 10:40:04,295:INFO:         yellowbrick: 1.5
2024-04-06 10:40:04,295:INFO:              plotly: 5.20.0
2024-04-06 10:40:04,295:INFO:    plotly-resampler: Not installed
2024-04-06 10:40:04,295:INFO:             kaleido: 0.2.1
2024-04-06 10:40:04,295:INFO:           schemdraw: 0.15
2024-04-06 10:40:04,295:INFO:         statsmodels: 0.14.1
2024-04-06 10:40:04,295:INFO:              sktime: 0.28.0
2024-04-06 10:40:04,295:INFO:               tbats: 1.1.3
2024-04-06 10:40:04,295:INFO:            pmdarima: 2.0.4
2024-04-06 10:40:04,295:INFO:              psutil: 5.9.8
2024-04-06 10:40:04,295:INFO:          markupsafe: 2.1.5
2024-04-06 10:40:04,295:INFO:             pickle5: Not installed
2024-04-06 10:40:04,295:INFO:         cloudpickle: 3.0.0
2024-04-06 10:40:04,295:INFO:         deprecation: 2.1.0
2024-04-06 10:40:04,295:INFO:              xxhash: 3.4.1
2024-04-06 10:40:04,295:INFO:           wurlitzer: 3.0.3
2024-04-06 10:40:04,295:INFO:PyCaret optional dependencies:
2024-04-06 10:40:04,295:INFO:                shap: Not installed
2024-04-06 10:40:04,295:INFO:           interpret: Not installed
2024-04-06 10:40:04,295:INFO:                umap: Not installed
2024-04-06 10:40:04,295:INFO:     ydata_profiling: Not installed
2024-04-06 10:40:04,295:INFO:  explainerdashboard: Not installed
2024-04-06 10:40:04,295:INFO:             autoviz: Not installed
2024-04-06 10:40:04,295:INFO:           fairlearn: Not installed
2024-04-06 10:40:04,295:INFO:          deepchecks: Not installed
2024-04-06 10:40:04,295:INFO:             xgboost: Not installed
2024-04-06 10:40:04,295:INFO:            catboost: Not installed
2024-04-06 10:40:04,295:INFO:              kmodes: Not installed
2024-04-06 10:40:04,295:INFO:             mlxtend: Not installed
2024-04-06 10:40:04,295:INFO:       statsforecast: Not installed
2024-04-06 10:40:04,295:INFO:        tune_sklearn: Not installed
2024-04-06 10:40:04,295:INFO:                 ray: Not installed
2024-04-06 10:40:04,295:INFO:            hyperopt: Not installed
2024-04-06 10:40:04,295:INFO:              optuna: Not installed
2024-04-06 10:40:04,296:INFO:               skopt: Not installed
2024-04-06 10:40:04,296:INFO:              mlflow: 2.11.3
2024-04-06 10:40:04,296:INFO:              gradio: Not installed
2024-04-06 10:40:04,296:INFO:             fastapi: Not installed
2024-04-06 10:40:04,296:INFO:             uvicorn: Not installed
2024-04-06 10:40:04,296:INFO:              m2cgen: Not installed
2024-04-06 10:40:04,296:INFO:           evidently: Not installed
2024-04-06 10:40:04,296:INFO:               fugue: Not installed
2024-04-06 10:40:04,296:INFO:           streamlit: 1.33.0
2024-04-06 10:40:04,296:INFO:             prophet: 1.1.5
2024-04-06 10:40:04,296:INFO:None
2024-04-06 10:40:04,296:INFO:Set up data.
2024-04-06 10:40:04,299:INFO:Set up folding strategy.
2024-04-06 10:40:04,299:INFO:Set up train/test split.
2024-04-06 10:40:04,299:INFO:Set up data.
2024-04-06 10:40:04,301:INFO:Set up index.
2024-04-06 10:40:04,301:INFO:Assigning column types.
2024-04-06 10:40:04,304:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 10:40:04,323:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:40:04,324:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:40:04,336:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:40:04,336:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:40:04,354:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:40:04,354:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:40:04,365:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:40:04,365:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:40:04,366:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 10:40:04,384:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:40:04,395:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:40:04,395:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:40:04,414:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:40:04,425:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:40:04,425:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:40:04,425:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 10:40:04,454:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:40:04,454:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:40:04,483:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:40:04,483:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:40:04,484:INFO:Preparing preprocessing pipeline...
2024-04-06 10:40:04,484:INFO:Set up simple imputation.
2024-04-06 10:40:04,484:INFO:Set up feature normalization.
2024-04-06 10:40:04,496:INFO:Finished creating preprocessing pipeline.
2024-04-06 10:40:04,497:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 10:40:04,497:INFO:Creating final display dataframe.
2024-04-06 10:40:04,527:INFO:Setup _display_container:                     Description             Value
0                    Session id              4947
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              da7b
2024-04-06 10:40:04,560:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:40:04,560:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:40:04,589:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:40:04,589:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:40:04,589:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 10:40:04,590:INFO:setup() successfully completed in 0.3s...............
2024-04-06 10:40:04,591:INFO:Initializing compare_models()
2024-04-06 10:40:04,591:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e983050>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x30e983050>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 10:40:04,591:INFO:Checking exceptions
2024-04-06 10:40:04,593:INFO:Preparing display monitor
2024-04-06 10:40:04,601:INFO:Initializing Logistic Regression
2024-04-06 10:40:04,601:INFO:Total runtime is 1.6967455546061197e-06 minutes
2024-04-06 10:40:04,602:INFO:SubProcess create_model() called ==================================
2024-04-06 10:40:04,602:INFO:Initializing create_model()
2024-04-06 10:40:04,602:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e983050>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30a232610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:40:04,602:INFO:Checking exceptions
2024-04-06 10:40:04,602:INFO:Importing libraries
2024-04-06 10:40:04,602:INFO:Copying training dataset
2024-04-06 10:40:04,605:INFO:Defining folds
2024-04-06 10:40:04,605:INFO:Declaring metric variables
2024-04-06 10:40:04,606:INFO:Importing untrained model
2024-04-06 10:40:04,607:INFO:Logistic Regression Imported successfully
2024-04-06 10:40:04,610:INFO:Starting cross validation
2024-04-06 10:40:04,610:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:40:04,808:INFO:Calculating mean and std
2024-04-06 10:40:04,808:INFO:Creating metrics dataframe
2024-04-06 10:40:04,809:INFO:Uploading results into container
2024-04-06 10:40:04,809:INFO:Uploading model into container now
2024-04-06 10:40:04,809:INFO:_master_model_container: 1
2024-04-06 10:40:04,809:INFO:_display_container: 2
2024-04-06 10:40:04,809:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4947, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:40:04,810:INFO:create_model() successfully completed......................................
2024-04-06 10:40:04,989:INFO:SubProcess create_model() end ==================================
2024-04-06 10:40:04,990:INFO:Creating metrics dataframe
2024-04-06 10:40:04,992:INFO:Initializing Decision Tree Classifier
2024-04-06 10:40:04,992:INFO:Total runtime is 0.00652322769165039 minutes
2024-04-06 10:40:04,993:INFO:SubProcess create_model() called ==================================
2024-04-06 10:40:04,993:INFO:Initializing create_model()
2024-04-06 10:40:04,993:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e983050>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30a232610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:40:04,993:INFO:Checking exceptions
2024-04-06 10:40:04,993:INFO:Importing libraries
2024-04-06 10:40:04,994:INFO:Copying training dataset
2024-04-06 10:40:04,996:INFO:Defining folds
2024-04-06 10:40:04,996:INFO:Declaring metric variables
2024-04-06 10:40:04,998:INFO:Importing untrained model
2024-04-06 10:40:04,999:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:40:05,001:INFO:Starting cross validation
2024-04-06 10:40:05,002:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:40:05,077:INFO:Calculating mean and std
2024-04-06 10:40:05,077:INFO:Creating metrics dataframe
2024-04-06 10:40:05,078:INFO:Uploading results into container
2024-04-06 10:40:05,078:INFO:Uploading model into container now
2024-04-06 10:40:05,078:INFO:_master_model_container: 2
2024-04-06 10:40:05,078:INFO:_display_container: 2
2024-04-06 10:40:05,078:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4947, splitter='best')
2024-04-06 10:40:05,078:INFO:create_model() successfully completed......................................
2024-04-06 10:40:05,195:INFO:SubProcess create_model() end ==================================
2024-04-06 10:40:05,195:INFO:Creating metrics dataframe
2024-04-06 10:40:05,198:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 10:40:05,201:INFO:Initializing create_model()
2024-04-06 10:40:05,201:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e983050>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4947, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:40:05,201:INFO:Checking exceptions
2024-04-06 10:40:05,202:INFO:Importing libraries
2024-04-06 10:40:05,202:INFO:Copying training dataset
2024-04-06 10:40:05,204:INFO:Defining folds
2024-04-06 10:40:05,204:INFO:Declaring metric variables
2024-04-06 10:40:05,204:INFO:Importing untrained model
2024-04-06 10:40:05,205:INFO:Declaring custom model
2024-04-06 10:40:05,205:INFO:Logistic Regression Imported successfully
2024-04-06 10:40:05,205:INFO:Cross validation set to False
2024-04-06 10:40:05,205:INFO:Fitting Model
2024-04-06 10:40:05,214:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4947, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:40:05,214:INFO:create_model() successfully completed......................................
2024-04-06 10:40:05,515:INFO:Initializing create_model()
2024-04-06 10:40:05,515:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e983050>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4947, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:40:05,515:INFO:Checking exceptions
2024-04-06 10:40:05,516:INFO:Importing libraries
2024-04-06 10:40:05,516:INFO:Copying training dataset
2024-04-06 10:40:05,518:INFO:Defining folds
2024-04-06 10:40:05,518:INFO:Declaring metric variables
2024-04-06 10:40:05,518:INFO:Importing untrained model
2024-04-06 10:40:05,518:INFO:Declaring custom model
2024-04-06 10:40:05,518:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:40:05,519:INFO:Cross validation set to False
2024-04-06 10:40:05,519:INFO:Fitting Model
2024-04-06 10:40:05,532:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4947, splitter='best')
2024-04-06 10:40:05,532:INFO:create_model() successfully completed......................................
2024-04-06 10:40:05,653:INFO:_master_model_container: 2
2024-04-06 10:40:05,653:INFO:_display_container: 2
2024-04-06 10:40:05,654:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4947, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4947, splitter='best')]
2024-04-06 10:40:05,654:INFO:compare_models() successfully completed......................................
2024-04-06 10:40:05,654:INFO:Initializing predict_model()
2024-04-06 10:40:05,655:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e983050>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4947, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x177c66ca0>)
2024-04-06 10:40:05,655:INFO:Checking exceptions
2024-04-06 10:40:05,655:INFO:Preloading libraries
2024-04-06 10:40:06,328:INFO:Initializing predict_model()
2024-04-06 10:40:06,328:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e983050>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4947, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30fe0b1a0>)
2024-04-06 10:40:06,328:INFO:Checking exceptions
2024-04-06 10:40:06,328:INFO:Preloading libraries
2024-04-06 10:40:06,705:INFO:Initializing tune_model()
2024-04-06 10:40:06,705:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e983050>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4947, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-06 10:40:06,705:INFO:Checking exceptions
2024-04-06 10:40:06,729:INFO:Copying training dataset
2024-04-06 10:40:06,732:INFO:Checking base model
2024-04-06 10:40:06,732:INFO:Base model : Decision Tree Classifier
2024-04-06 10:40:06,747:INFO:Declaring metric variables
2024-04-06 10:40:06,753:INFO:Defining Hyperparameters
2024-04-06 10:40:06,941:INFO:Tuning with n_jobs=-1
2024-04-06 10:40:06,941:INFO:Initializing RandomizedSearchCV
2024-04-06 10:40:07,049:INFO:best_params: {'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0.005, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 11, 'actual_estimator__criterion': 'gini'}
2024-04-06 10:40:07,050:INFO:Hyperparameter search completed
2024-04-06 10:40:07,050:INFO:SubProcess create_model() called ==================================
2024-04-06 10:40:07,050:INFO:Initializing create_model()
2024-04-06 10:40:07,050:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e983050>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4947, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x176902f90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 10, 'min_samples_leaf': 6, 'min_impurity_decrease': 0.005, 'max_features': 'log2', 'max_depth': 11, 'criterion': 'gini'})
2024-04-06 10:40:07,050:INFO:Checking exceptions
2024-04-06 10:40:07,050:INFO:Importing libraries
2024-04-06 10:40:07,050:INFO:Copying training dataset
2024-04-06 10:40:07,052:INFO:Defining folds
2024-04-06 10:40:07,052:INFO:Declaring metric variables
2024-04-06 10:40:07,054:INFO:Importing untrained model
2024-04-06 10:40:07,054:INFO:Declaring custom model
2024-04-06 10:40:07,055:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:40:07,057:INFO:Starting cross validation
2024-04-06 10:40:07,058:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:40:07,102:INFO:Calculating mean and std
2024-04-06 10:40:07,102:INFO:Creating metrics dataframe
2024-04-06 10:40:07,104:INFO:Finalizing model
2024-04-06 10:40:07,110:INFO:Uploading results into container
2024-04-06 10:40:07,110:INFO:Uploading model into container now
2024-04-06 10:40:07,110:INFO:_master_model_container: 3
2024-04-06 10:40:07,110:INFO:_display_container: 5
2024-04-06 10:40:07,111:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=11, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0.005, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4947, splitter='best')
2024-04-06 10:40:07,111:INFO:create_model() successfully completed......................................
2024-04-06 10:40:07,220:INFO:SubProcess create_model() end ==================================
2024-04-06 10:40:07,220:INFO:choose_better activated
2024-04-06 10:40:07,221:INFO:SubProcess create_model() called ==================================
2024-04-06 10:40:07,221:INFO:Initializing create_model()
2024-04-06 10:40:07,221:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e983050>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4947, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:40:07,221:INFO:Checking exceptions
2024-04-06 10:40:07,222:INFO:Importing libraries
2024-04-06 10:40:07,222:INFO:Copying training dataset
2024-04-06 10:40:07,225:INFO:Defining folds
2024-04-06 10:40:07,225:INFO:Declaring metric variables
2024-04-06 10:40:07,225:INFO:Importing untrained model
2024-04-06 10:40:07,225:INFO:Declaring custom model
2024-04-06 10:40:07,225:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:40:07,225:INFO:Starting cross validation
2024-04-06 10:40:07,225:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:40:07,290:INFO:Calculating mean and std
2024-04-06 10:40:07,290:INFO:Creating metrics dataframe
2024-04-06 10:40:07,291:INFO:Finalizing model
2024-04-06 10:40:07,304:INFO:Uploading results into container
2024-04-06 10:40:07,304:INFO:Uploading model into container now
2024-04-06 10:40:07,304:INFO:_master_model_container: 4
2024-04-06 10:40:07,304:INFO:_display_container: 6
2024-04-06 10:40:07,304:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4947, splitter='best')
2024-04-06 10:40:07,304:INFO:create_model() successfully completed......................................
2024-04-06 10:40:07,414:INFO:SubProcess create_model() end ==================================
2024-04-06 10:40:07,414:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4947, splitter='best') result for F1 is 0.5274
2024-04-06 10:40:07,414:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=11, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0.005, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4947, splitter='best') result for F1 is 0.444
2024-04-06 10:40:07,414:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4947, splitter='best') is best model
2024-04-06 10:40:07,414:INFO:choose_better completed
2024-04-06 10:40:07,414:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-06 10:40:07,418:INFO:_master_model_container: 4
2024-04-06 10:40:07,418:INFO:_display_container: 5
2024-04-06 10:40:07,419:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4947, splitter='best')
2024-04-06 10:40:07,419:INFO:tune_model() successfully completed......................................
2024-04-06 10:40:07,528:INFO:Initializing predict_model()
2024-04-06 10:40:07,528:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e983050>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4947, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30844b240>)
2024-04-06 10:40:07,528:INFO:Checking exceptions
2024-04-06 10:40:07,528:INFO:Preloading libraries
2024-04-06 10:40:07,709:INFO:Initializing finalize_model()
2024-04-06 10:40:07,709:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e983050>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4947, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-06 10:40:07,709:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4947, splitter='best')
2024-04-06 10:40:07,711:INFO:Initializing create_model()
2024-04-06 10:40:07,711:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e983050>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4947, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:40:07,711:INFO:Checking exceptions
2024-04-06 10:40:07,711:INFO:Importing libraries
2024-04-06 10:40:07,711:INFO:Copying training dataset
2024-04-06 10:40:07,711:INFO:Defining folds
2024-04-06 10:40:07,711:INFO:Declaring metric variables
2024-04-06 10:40:07,712:INFO:Importing untrained model
2024-04-06 10:40:07,712:INFO:Declaring custom model
2024-04-06 10:40:07,712:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:40:07,712:INFO:Cross validation set to False
2024-04-06 10:40:07,712:INFO:Fitting Model
2024-04-06 10:40:07,764:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4947,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:40:07,764:INFO:create_model() successfully completed......................................
2024-04-06 10:40:07,878:INFO:_master_model_container: 4
2024-04-06 10:40:07,878:INFO:_display_container: 6
2024-04-06 10:40:07,880:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4947,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:40:07,880:INFO:finalize_model() successfully completed......................................
2024-04-06 10:40:07,999:INFO:Initializing save_model()
2024-04-06 10:40:08,000:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4947,
                                        splitter='best'))],
         verbose=False), model_name=./kobe, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-06 10:40:08,000:INFO:Adding model into prep_pipe
2024-04-06 10:40:08,000:WARNING:Only Model saved as it was a pipeline.
2024-04-06 10:40:08,001:INFO:./kobe.pkl saved in current working directory
2024-04-06 10:40:08,003:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4947,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:40:08,003:INFO:save_model() successfully completed......................................
2024-04-06 10:40:08,112:INFO:Initializing load_model()
2024-04-06 10:40:08,113:INFO:load_model(model_name=./kobe, platform=None, authentication=None, verbose=True)
2024-04-06 10:40:08,121:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-06 10:40:09,965:WARNING:/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/ipykernel_3194/1409359632.py:141: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-06 10:46:19,627:INFO:PyCaret ClassificationExperiment
2024-04-06 10:46:19,627:INFO:Logging name: clf-default-name
2024-04-06 10:46:19,627:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 10:46:19,627:INFO:version 3.3.0
2024-04-06 10:46:19,627:INFO:Initializing setup()
2024-04-06 10:46:19,627:INFO:self.USI: 15d5
2024-04-06 10:46:19,628:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 10:46:19,628:INFO:Checking environment
2024-04-06 10:46:19,628:INFO:python_version: 3.11.3
2024-04-06 10:46:19,628:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 10:46:19,628:INFO:machine: arm64
2024-04-06 10:46:19,628:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:46:19,628:INFO:Memory: svmem(total=8589934592, available=2269691904, percent=73.6, used=3267018752, free=74121216, active=2215346176, inactive=2192785408, wired=1051672576)
2024-04-06 10:46:19,628:INFO:Physical Core: 8
2024-04-06 10:46:19,628:INFO:Logical Core: 8
2024-04-06 10:46:19,628:INFO:Checking libraries
2024-04-06 10:46:19,628:INFO:System:
2024-04-06 10:46:19,628:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 10:46:19,628:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 10:46:19,628:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:46:19,628:INFO:PyCaret required dependencies:
2024-04-06 10:46:19,628:INFO:                 pip: 24.0
2024-04-06 10:46:19,628:INFO:          setuptools: 65.5.0
2024-04-06 10:46:19,628:INFO:             pycaret: 3.3.0
2024-04-06 10:46:19,628:INFO:             IPython: 8.23.0
2024-04-06 10:46:19,628:INFO:          ipywidgets: 8.1.2
2024-04-06 10:46:19,628:INFO:                tqdm: 4.66.2
2024-04-06 10:46:19,628:INFO:               numpy: 1.26.4
2024-04-06 10:46:19,628:INFO:              pandas: 2.1.4
2024-04-06 10:46:19,628:INFO:              jinja2: 3.1.3
2024-04-06 10:46:19,628:INFO:               scipy: 1.11.4
2024-04-06 10:46:19,628:INFO:              joblib: 1.3.2
2024-04-06 10:46:19,628:INFO:             sklearn: 1.4.1.post1
2024-04-06 10:46:19,628:INFO:                pyod: 1.1.3
2024-04-06 10:46:19,628:INFO:            imblearn: 0.12.2
2024-04-06 10:46:19,628:INFO:   category_encoders: 2.6.3
2024-04-06 10:46:19,628:INFO:            lightgbm: 4.3.0
2024-04-06 10:46:19,628:INFO:               numba: 0.59.1
2024-04-06 10:46:19,628:INFO:            requests: 2.31.0
2024-04-06 10:46:19,628:INFO:          matplotlib: 3.7.5
2024-04-06 10:46:19,628:INFO:          scikitplot: 0.3.7
2024-04-06 10:46:19,628:INFO:         yellowbrick: 1.5
2024-04-06 10:46:19,628:INFO:              plotly: 5.20.0
2024-04-06 10:46:19,628:INFO:    plotly-resampler: Not installed
2024-04-06 10:46:19,628:INFO:             kaleido: 0.2.1
2024-04-06 10:46:19,628:INFO:           schemdraw: 0.15
2024-04-06 10:46:19,628:INFO:         statsmodels: 0.14.1
2024-04-06 10:46:19,628:INFO:              sktime: 0.28.0
2024-04-06 10:46:19,628:INFO:               tbats: 1.1.3
2024-04-06 10:46:19,628:INFO:            pmdarima: 2.0.4
2024-04-06 10:46:19,628:INFO:              psutil: 5.9.8
2024-04-06 10:46:19,628:INFO:          markupsafe: 2.1.5
2024-04-06 10:46:19,628:INFO:             pickle5: Not installed
2024-04-06 10:46:19,628:INFO:         cloudpickle: 3.0.0
2024-04-06 10:46:19,628:INFO:         deprecation: 2.1.0
2024-04-06 10:46:19,628:INFO:              xxhash: 3.4.1
2024-04-06 10:46:19,628:INFO:           wurlitzer: 3.0.3
2024-04-06 10:46:19,628:INFO:PyCaret optional dependencies:
2024-04-06 10:46:19,628:INFO:                shap: Not installed
2024-04-06 10:46:19,628:INFO:           interpret: Not installed
2024-04-06 10:46:19,628:INFO:                umap: Not installed
2024-04-06 10:46:19,628:INFO:     ydata_profiling: Not installed
2024-04-06 10:46:19,628:INFO:  explainerdashboard: Not installed
2024-04-06 10:46:19,628:INFO:             autoviz: Not installed
2024-04-06 10:46:19,628:INFO:           fairlearn: Not installed
2024-04-06 10:46:19,628:INFO:          deepchecks: Not installed
2024-04-06 10:46:19,628:INFO:             xgboost: Not installed
2024-04-06 10:46:19,628:INFO:            catboost: Not installed
2024-04-06 10:46:19,628:INFO:              kmodes: Not installed
2024-04-06 10:46:19,628:INFO:             mlxtend: Not installed
2024-04-06 10:46:19,629:INFO:       statsforecast: Not installed
2024-04-06 10:46:19,629:INFO:        tune_sklearn: Not installed
2024-04-06 10:46:19,629:INFO:                 ray: Not installed
2024-04-06 10:46:19,629:INFO:            hyperopt: Not installed
2024-04-06 10:46:19,629:INFO:              optuna: Not installed
2024-04-06 10:46:19,629:INFO:               skopt: Not installed
2024-04-06 10:46:19,629:INFO:              mlflow: 2.11.3
2024-04-06 10:46:19,629:INFO:              gradio: Not installed
2024-04-06 10:46:19,629:INFO:             fastapi: Not installed
2024-04-06 10:46:19,629:INFO:             uvicorn: Not installed
2024-04-06 10:46:19,629:INFO:              m2cgen: Not installed
2024-04-06 10:46:19,629:INFO:           evidently: Not installed
2024-04-06 10:46:19,629:INFO:               fugue: Not installed
2024-04-06 10:46:19,629:INFO:           streamlit: 1.33.0
2024-04-06 10:46:19,629:INFO:             prophet: 1.1.5
2024-04-06 10:46:19,629:INFO:None
2024-04-06 10:46:19,629:INFO:Set up data.
2024-04-06 10:46:19,632:INFO:Set up folding strategy.
2024-04-06 10:46:19,632:INFO:Set up train/test split.
2024-04-06 10:46:19,632:INFO:Set up data.
2024-04-06 10:46:19,635:INFO:Set up index.
2024-04-06 10:46:19,635:INFO:Assigning column types.
2024-04-06 10:46:19,638:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 10:46:19,658:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:46:19,659:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:46:19,671:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:19,671:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:19,690:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:46:19,690:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:46:19,701:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:19,701:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:19,701:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 10:46:19,719:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:46:19,730:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:19,730:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:19,748:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:46:19,760:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:19,760:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:19,760:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 10:46:19,789:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:19,789:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:19,818:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:19,819:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:19,819:INFO:Preparing preprocessing pipeline...
2024-04-06 10:46:19,820:INFO:Set up simple imputation.
2024-04-06 10:46:19,820:INFO:Set up feature normalization.
2024-04-06 10:46:19,832:INFO:Finished creating preprocessing pipeline.
2024-04-06 10:46:19,834:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 10:46:19,834:INFO:Creating final display dataframe.
2024-04-06 10:46:19,872:INFO:Setup _display_container:                     Description             Value
0                    Session id              4630
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              15d5
2024-04-06 10:46:19,910:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:19,910:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:19,940:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:19,940:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:19,940:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 10:46:19,941:INFO:setup() successfully completed in 0.32s...............
2024-04-06 10:46:19,941:INFO:Initializing compare_models()
2024-04-06 10:46:19,941:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fed8c10>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x30fed8c10>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 10:46:19,942:INFO:Checking exceptions
2024-04-06 10:46:19,943:INFO:Preparing display monitor
2024-04-06 10:46:19,953:INFO:Initializing Logistic Regression
2024-04-06 10:46:19,953:INFO:Total runtime is 2.7338663736979167e-06 minutes
2024-04-06 10:46:19,955:INFO:SubProcess create_model() called ==================================
2024-04-06 10:46:19,955:INFO:Initializing create_model()
2024-04-06 10:46:19,955:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fed8c10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30fa00950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:46:19,955:INFO:Checking exceptions
2024-04-06 10:46:19,955:INFO:Importing libraries
2024-04-06 10:46:19,956:INFO:Copying training dataset
2024-04-06 10:46:19,959:INFO:Defining folds
2024-04-06 10:46:19,959:INFO:Declaring metric variables
2024-04-06 10:46:19,960:INFO:Importing untrained model
2024-04-06 10:46:19,962:INFO:Logistic Regression Imported successfully
2024-04-06 10:46:19,966:INFO:Starting cross validation
2024-04-06 10:46:19,966:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:46:22,036:INFO:Calculating mean and std
2024-04-06 10:46:22,043:INFO:Creating metrics dataframe
2024-04-06 10:46:22,052:INFO:Uploading results into container
2024-04-06 10:46:22,053:INFO:Uploading model into container now
2024-04-06 10:46:22,055:INFO:_master_model_container: 1
2024-04-06 10:46:22,055:INFO:_display_container: 2
2024-04-06 10:46:22,056:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4630, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:46:22,056:INFO:create_model() successfully completed......................................
2024-04-06 10:46:22,286:INFO:SubProcess create_model() end ==================================
2024-04-06 10:46:22,286:INFO:Creating metrics dataframe
2024-04-06 10:46:22,289:INFO:Initializing Decision Tree Classifier
2024-04-06 10:46:22,289:INFO:Total runtime is 0.03894171714782715 minutes
2024-04-06 10:46:22,290:INFO:SubProcess create_model() called ==================================
2024-04-06 10:46:22,290:INFO:Initializing create_model()
2024-04-06 10:46:22,290:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fed8c10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30fa00950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:46:22,291:INFO:Checking exceptions
2024-04-06 10:46:22,291:INFO:Importing libraries
2024-04-06 10:46:22,291:INFO:Copying training dataset
2024-04-06 10:46:22,293:INFO:Defining folds
2024-04-06 10:46:22,293:INFO:Declaring metric variables
2024-04-06 10:46:22,294:INFO:Importing untrained model
2024-04-06 10:46:22,296:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:46:22,298:INFO:Starting cross validation
2024-04-06 10:46:22,298:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:46:22,389:INFO:Calculating mean and std
2024-04-06 10:46:22,389:INFO:Creating metrics dataframe
2024-04-06 10:46:22,390:INFO:Uploading results into container
2024-04-06 10:46:22,390:INFO:Uploading model into container now
2024-04-06 10:46:22,391:INFO:_master_model_container: 2
2024-04-06 10:46:22,391:INFO:_display_container: 2
2024-04-06 10:46:22,391:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4630, splitter='best')
2024-04-06 10:46:22,391:INFO:create_model() successfully completed......................................
2024-04-06 10:46:22,506:INFO:SubProcess create_model() end ==================================
2024-04-06 10:46:22,506:INFO:Creating metrics dataframe
2024-04-06 10:46:22,509:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 10:46:22,512:INFO:Initializing create_model()
2024-04-06 10:46:22,513:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fed8c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4630, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:46:22,513:INFO:Checking exceptions
2024-04-06 10:46:22,514:INFO:Importing libraries
2024-04-06 10:46:22,514:INFO:Copying training dataset
2024-04-06 10:46:22,516:INFO:Defining folds
2024-04-06 10:46:22,516:INFO:Declaring metric variables
2024-04-06 10:46:22,516:INFO:Importing untrained model
2024-04-06 10:46:22,516:INFO:Declaring custom model
2024-04-06 10:46:22,516:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:46:22,517:INFO:Cross validation set to False
2024-04-06 10:46:22,517:INFO:Fitting Model
2024-04-06 10:46:22,530:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4630, splitter='best')
2024-04-06 10:46:22,530:INFO:create_model() successfully completed......................................
2024-04-06 10:46:22,644:INFO:Initializing create_model()
2024-04-06 10:46:22,645:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fed8c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4630, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:46:22,645:INFO:Checking exceptions
2024-04-06 10:46:22,645:INFO:Importing libraries
2024-04-06 10:46:22,646:INFO:Copying training dataset
2024-04-06 10:46:22,648:INFO:Defining folds
2024-04-06 10:46:22,648:INFO:Declaring metric variables
2024-04-06 10:46:22,648:INFO:Importing untrained model
2024-04-06 10:46:22,648:INFO:Declaring custom model
2024-04-06 10:46:22,648:INFO:Logistic Regression Imported successfully
2024-04-06 10:46:22,648:INFO:Cross validation set to False
2024-04-06 10:46:22,648:INFO:Fitting Model
2024-04-06 10:46:22,654:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4630, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:46:22,654:INFO:create_model() successfully completed......................................
2024-04-06 10:46:22,852:INFO:_master_model_container: 2
2024-04-06 10:46:22,852:INFO:_display_container: 2
2024-04-06 10:46:22,853:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4630, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4630, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-06 10:46:22,853:INFO:compare_models() successfully completed......................................
2024-04-06 10:46:22,854:INFO:Initializing predict_model()
2024-04-06 10:46:22,854:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fed8c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4630, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x175247c40>)
2024-04-06 10:46:22,854:INFO:Checking exceptions
2024-04-06 10:46:22,854:INFO:Preloading libraries
2024-04-06 10:46:23,558:INFO:Initializing predict_model()
2024-04-06 10:46:23,558:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fed8c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4630, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30fd1f920>)
2024-04-06 10:46:23,558:INFO:Checking exceptions
2024-04-06 10:46:23,558:INFO:Preloading libraries
2024-04-06 10:46:54,851:INFO:PyCaret ClassificationExperiment
2024-04-06 10:46:54,851:INFO:Logging name: clf-default-name
2024-04-06 10:46:54,851:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 10:46:54,851:INFO:version 3.3.0
2024-04-06 10:46:54,851:INFO:Initializing setup()
2024-04-06 10:46:54,851:INFO:self.USI: b47a
2024-04-06 10:46:54,851:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 10:46:54,851:INFO:Checking environment
2024-04-06 10:46:54,851:INFO:python_version: 3.11.3
2024-04-06 10:46:54,851:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 10:46:54,851:INFO:machine: arm64
2024-04-06 10:46:54,852:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:46:54,852:INFO:Memory: svmem(total=8589934592, available=1513521152, percent=82.4, used=2607611904, free=49086464, active=1481031680, inactive=1426145280, wired=1126580224)
2024-04-06 10:46:54,852:INFO:Physical Core: 8
2024-04-06 10:46:54,852:INFO:Logical Core: 8
2024-04-06 10:46:54,852:INFO:Checking libraries
2024-04-06 10:46:54,852:INFO:System:
2024-04-06 10:46:54,852:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 10:46:54,852:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 10:46:54,852:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:46:54,852:INFO:PyCaret required dependencies:
2024-04-06 10:46:54,852:INFO:                 pip: 24.0
2024-04-06 10:46:54,852:INFO:          setuptools: 65.5.0
2024-04-06 10:46:54,852:INFO:             pycaret: 3.3.0
2024-04-06 10:46:54,852:INFO:             IPython: 8.23.0
2024-04-06 10:46:54,852:INFO:          ipywidgets: 8.1.2
2024-04-06 10:46:54,852:INFO:                tqdm: 4.66.2
2024-04-06 10:46:54,852:INFO:               numpy: 1.26.4
2024-04-06 10:46:54,852:INFO:              pandas: 2.1.4
2024-04-06 10:46:54,852:INFO:              jinja2: 3.1.3
2024-04-06 10:46:54,852:INFO:               scipy: 1.11.4
2024-04-06 10:46:54,852:INFO:              joblib: 1.3.2
2024-04-06 10:46:54,852:INFO:             sklearn: 1.4.1.post1
2024-04-06 10:46:54,852:INFO:                pyod: 1.1.3
2024-04-06 10:46:54,852:INFO:            imblearn: 0.12.2
2024-04-06 10:46:54,852:INFO:   category_encoders: 2.6.3
2024-04-06 10:46:54,852:INFO:            lightgbm: 4.3.0
2024-04-06 10:46:54,852:INFO:               numba: 0.59.1
2024-04-06 10:46:54,852:INFO:            requests: 2.31.0
2024-04-06 10:46:54,852:INFO:          matplotlib: 3.7.5
2024-04-06 10:46:54,852:INFO:          scikitplot: 0.3.7
2024-04-06 10:46:54,852:INFO:         yellowbrick: 1.5
2024-04-06 10:46:54,852:INFO:              plotly: 5.20.0
2024-04-06 10:46:54,852:INFO:    plotly-resampler: Not installed
2024-04-06 10:46:54,852:INFO:             kaleido: 0.2.1
2024-04-06 10:46:54,852:INFO:           schemdraw: 0.15
2024-04-06 10:46:54,852:INFO:         statsmodels: 0.14.1
2024-04-06 10:46:54,852:INFO:              sktime: 0.28.0
2024-04-06 10:46:54,852:INFO:               tbats: 1.1.3
2024-04-06 10:46:54,852:INFO:            pmdarima: 2.0.4
2024-04-06 10:46:54,852:INFO:              psutil: 5.9.8
2024-04-06 10:46:54,852:INFO:          markupsafe: 2.1.5
2024-04-06 10:46:54,852:INFO:             pickle5: Not installed
2024-04-06 10:46:54,852:INFO:         cloudpickle: 3.0.0
2024-04-06 10:46:54,852:INFO:         deprecation: 2.1.0
2024-04-06 10:46:54,852:INFO:              xxhash: 3.4.1
2024-04-06 10:46:54,852:INFO:           wurlitzer: 3.0.3
2024-04-06 10:46:54,852:INFO:PyCaret optional dependencies:
2024-04-06 10:46:54,852:INFO:                shap: Not installed
2024-04-06 10:46:54,852:INFO:           interpret: Not installed
2024-04-06 10:46:54,852:INFO:                umap: Not installed
2024-04-06 10:46:54,852:INFO:     ydata_profiling: Not installed
2024-04-06 10:46:54,852:INFO:  explainerdashboard: Not installed
2024-04-06 10:46:54,852:INFO:             autoviz: Not installed
2024-04-06 10:46:54,852:INFO:           fairlearn: Not installed
2024-04-06 10:46:54,852:INFO:          deepchecks: Not installed
2024-04-06 10:46:54,852:INFO:             xgboost: Not installed
2024-04-06 10:46:54,852:INFO:            catboost: Not installed
2024-04-06 10:46:54,852:INFO:              kmodes: Not installed
2024-04-06 10:46:54,852:INFO:             mlxtend: Not installed
2024-04-06 10:46:54,852:INFO:       statsforecast: Not installed
2024-04-06 10:46:54,852:INFO:        tune_sklearn: Not installed
2024-04-06 10:46:54,852:INFO:                 ray: Not installed
2024-04-06 10:46:54,852:INFO:            hyperopt: Not installed
2024-04-06 10:46:54,852:INFO:              optuna: Not installed
2024-04-06 10:46:54,852:INFO:               skopt: Not installed
2024-04-06 10:46:54,852:INFO:              mlflow: 2.11.3
2024-04-06 10:46:54,852:INFO:              gradio: Not installed
2024-04-06 10:46:54,852:INFO:             fastapi: Not installed
2024-04-06 10:46:54,852:INFO:             uvicorn: Not installed
2024-04-06 10:46:54,853:INFO:              m2cgen: Not installed
2024-04-06 10:46:54,853:INFO:           evidently: Not installed
2024-04-06 10:46:54,853:INFO:               fugue: Not installed
2024-04-06 10:46:54,853:INFO:           streamlit: 1.33.0
2024-04-06 10:46:54,853:INFO:             prophet: 1.1.5
2024-04-06 10:46:54,853:INFO:None
2024-04-06 10:46:54,853:INFO:Set up data.
2024-04-06 10:46:54,856:INFO:Set up folding strategy.
2024-04-06 10:46:54,856:INFO:Set up train/test split.
2024-04-06 10:46:54,856:INFO:Set up data.
2024-04-06 10:46:54,859:INFO:Set up index.
2024-04-06 10:46:54,860:INFO:Assigning column types.
2024-04-06 10:46:54,864:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 10:46:54,885:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:46:54,886:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:46:54,899:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:54,900:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:54,919:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:46:54,919:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:46:54,930:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:54,931:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:54,931:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 10:46:54,949:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:46:54,960:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:54,960:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:54,978:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:46:54,990:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:54,990:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:54,990:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 10:46:55,019:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:55,020:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:55,049:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:55,049:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:55,049:INFO:Preparing preprocessing pipeline...
2024-04-06 10:46:55,050:INFO:Set up simple imputation.
2024-04-06 10:46:55,050:INFO:Set up feature normalization.
2024-04-06 10:46:55,061:INFO:Finished creating preprocessing pipeline.
2024-04-06 10:46:55,063:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 10:46:55,063:INFO:Creating final display dataframe.
2024-04-06 10:46:55,097:INFO:Setup _display_container:                     Description             Value
0                    Session id              2310
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              b47a
2024-04-06 10:46:55,132:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:55,132:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:55,162:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:55,164:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:46:55,165:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 10:46:55,165:INFO:setup() successfully completed in 0.32s...............
2024-04-06 10:46:55,166:INFO:Initializing compare_models()
2024-04-06 10:46:55,166:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 10:46:55,166:INFO:Checking exceptions
2024-04-06 10:46:55,168:INFO:Preparing display monitor
2024-04-06 10:46:55,182:INFO:Initializing Logistic Regression
2024-04-06 10:46:55,183:INFO:Total runtime is 2.3523966471354168e-06 minutes
2024-04-06 10:46:55,184:INFO:SubProcess create_model() called ==================================
2024-04-06 10:46:55,185:INFO:Initializing create_model()
2024-04-06 10:46:55,185:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30fdc1550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:46:55,185:INFO:Checking exceptions
2024-04-06 10:46:55,186:INFO:Importing libraries
2024-04-06 10:46:55,186:INFO:Copying training dataset
2024-04-06 10:46:55,191:INFO:Defining folds
2024-04-06 10:46:55,191:INFO:Declaring metric variables
2024-04-06 10:46:55,193:INFO:Importing untrained model
2024-04-06 10:46:55,196:INFO:Logistic Regression Imported successfully
2024-04-06 10:46:55,204:INFO:Starting cross validation
2024-04-06 10:46:55,205:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:46:55,333:INFO:Calculating mean and std
2024-04-06 10:46:55,334:INFO:Creating metrics dataframe
2024-04-06 10:46:55,334:INFO:Uploading results into container
2024-04-06 10:46:55,334:INFO:Uploading model into container now
2024-04-06 10:46:55,335:INFO:_master_model_container: 1
2024-04-06 10:46:55,335:INFO:_display_container: 2
2024-04-06 10:46:55,335:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2310, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:46:55,335:INFO:create_model() successfully completed......................................
2024-04-06 10:46:55,573:INFO:SubProcess create_model() end ==================================
2024-04-06 10:46:55,573:INFO:Creating metrics dataframe
2024-04-06 10:46:55,576:INFO:Initializing Decision Tree Classifier
2024-04-06 10:46:55,576:INFO:Total runtime is 0.00655972957611084 minutes
2024-04-06 10:46:55,577:INFO:SubProcess create_model() called ==================================
2024-04-06 10:46:55,577:INFO:Initializing create_model()
2024-04-06 10:46:55,577:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30fdc1550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:46:55,577:INFO:Checking exceptions
2024-04-06 10:46:55,577:INFO:Importing libraries
2024-04-06 10:46:55,578:INFO:Copying training dataset
2024-04-06 10:46:55,580:INFO:Defining folds
2024-04-06 10:46:55,580:INFO:Declaring metric variables
2024-04-06 10:46:55,581:INFO:Importing untrained model
2024-04-06 10:46:55,583:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:46:55,585:INFO:Starting cross validation
2024-04-06 10:46:55,585:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:46:55,660:INFO:Calculating mean and std
2024-04-06 10:46:55,661:INFO:Creating metrics dataframe
2024-04-06 10:46:55,661:INFO:Uploading results into container
2024-04-06 10:46:55,662:INFO:Uploading model into container now
2024-04-06 10:46:55,662:INFO:_master_model_container: 2
2024-04-06 10:46:55,662:INFO:_display_container: 2
2024-04-06 10:46:55,662:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2310, splitter='best')
2024-04-06 10:46:55,662:INFO:create_model() successfully completed......................................
2024-04-06 10:46:55,779:INFO:SubProcess create_model() end ==================================
2024-04-06 10:46:55,779:INFO:Creating metrics dataframe
2024-04-06 10:46:55,782:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 10:46:55,785:INFO:Initializing create_model()
2024-04-06 10:46:55,785:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2310, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:46:55,785:INFO:Checking exceptions
2024-04-06 10:46:55,786:INFO:Importing libraries
2024-04-06 10:46:55,786:INFO:Copying training dataset
2024-04-06 10:46:55,788:INFO:Defining folds
2024-04-06 10:46:55,789:INFO:Declaring metric variables
2024-04-06 10:46:55,789:INFO:Importing untrained model
2024-04-06 10:46:55,789:INFO:Declaring custom model
2024-04-06 10:46:55,789:INFO:Logistic Regression Imported successfully
2024-04-06 10:46:55,789:INFO:Cross validation set to False
2024-04-06 10:46:55,789:INFO:Fitting Model
2024-04-06 10:46:55,800:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2310, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:46:55,803:INFO:create_model() successfully completed......................................
2024-04-06 10:46:56,034:INFO:Initializing create_model()
2024-04-06 10:46:56,034:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2310, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:46:56,034:INFO:Checking exceptions
2024-04-06 10:46:56,034:INFO:Importing libraries
2024-04-06 10:46:56,034:INFO:Copying training dataset
2024-04-06 10:46:56,036:INFO:Defining folds
2024-04-06 10:46:56,036:INFO:Declaring metric variables
2024-04-06 10:46:56,036:INFO:Importing untrained model
2024-04-06 10:46:56,036:INFO:Declaring custom model
2024-04-06 10:46:56,037:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:46:56,037:INFO:Cross validation set to False
2024-04-06 10:46:56,037:INFO:Fitting Model
2024-04-06 10:46:56,065:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2310, splitter='best')
2024-04-06 10:46:56,065:INFO:create_model() successfully completed......................................
2024-04-06 10:46:56,192:INFO:_master_model_container: 2
2024-04-06 10:46:56,192:INFO:_display_container: 2
2024-04-06 10:46:56,193:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2310, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2310, splitter='best')]
2024-04-06 10:46:56,193:INFO:compare_models() successfully completed......................................
2024-04-06 10:46:56,193:INFO:Initializing predict_model()
2024-04-06 10:46:56,193:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2310, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30844b240>)
2024-04-06 10:46:56,193:INFO:Checking exceptions
2024-04-06 10:46:56,193:INFO:Preloading libraries
2024-04-06 10:46:56,981:INFO:Initializing predict_model()
2024-04-06 10:46:56,981:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1768a8c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2310, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17791db20>)
2024-04-06 10:46:56,981:INFO:Checking exceptions
2024-04-06 10:46:56,981:INFO:Preloading libraries
2024-04-06 10:48:23,634:INFO:PyCaret ClassificationExperiment
2024-04-06 10:48:23,635:INFO:Logging name: clf-default-name
2024-04-06 10:48:23,635:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 10:48:23,635:INFO:version 3.3.0
2024-04-06 10:48:23,635:INFO:Initializing setup()
2024-04-06 10:48:23,635:INFO:self.USI: d8ac
2024-04-06 10:48:23,635:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 10:48:23,635:INFO:Checking environment
2024-04-06 10:48:23,635:INFO:python_version: 3.11.3
2024-04-06 10:48:23,635:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 10:48:23,635:INFO:machine: arm64
2024-04-06 10:48:23,635:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:48:23,635:INFO:Memory: svmem(total=8589934592, available=1640775680, percent=80.9, used=2720743424, free=46694400, active=1611333632, inactive=1590886400, wired=1109409792)
2024-04-06 10:48:23,635:INFO:Physical Core: 8
2024-04-06 10:48:23,635:INFO:Logical Core: 8
2024-04-06 10:48:23,635:INFO:Checking libraries
2024-04-06 10:48:23,635:INFO:System:
2024-04-06 10:48:23,635:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 10:48:23,635:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 10:48:23,635:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:48:23,635:INFO:PyCaret required dependencies:
2024-04-06 10:48:23,635:INFO:                 pip: 24.0
2024-04-06 10:48:23,635:INFO:          setuptools: 65.5.0
2024-04-06 10:48:23,635:INFO:             pycaret: 3.3.0
2024-04-06 10:48:23,635:INFO:             IPython: 8.23.0
2024-04-06 10:48:23,635:INFO:          ipywidgets: 8.1.2
2024-04-06 10:48:23,635:INFO:                tqdm: 4.66.2
2024-04-06 10:48:23,635:INFO:               numpy: 1.26.4
2024-04-06 10:48:23,635:INFO:              pandas: 2.1.4
2024-04-06 10:48:23,635:INFO:              jinja2: 3.1.3
2024-04-06 10:48:23,635:INFO:               scipy: 1.11.4
2024-04-06 10:48:23,635:INFO:              joblib: 1.3.2
2024-04-06 10:48:23,635:INFO:             sklearn: 1.4.1.post1
2024-04-06 10:48:23,635:INFO:                pyod: 1.1.3
2024-04-06 10:48:23,635:INFO:            imblearn: 0.12.2
2024-04-06 10:48:23,635:INFO:   category_encoders: 2.6.3
2024-04-06 10:48:23,635:INFO:            lightgbm: 4.3.0
2024-04-06 10:48:23,635:INFO:               numba: 0.59.1
2024-04-06 10:48:23,635:INFO:            requests: 2.31.0
2024-04-06 10:48:23,635:INFO:          matplotlib: 3.7.5
2024-04-06 10:48:23,635:INFO:          scikitplot: 0.3.7
2024-04-06 10:48:23,635:INFO:         yellowbrick: 1.5
2024-04-06 10:48:23,635:INFO:              plotly: 5.20.0
2024-04-06 10:48:23,635:INFO:    plotly-resampler: Not installed
2024-04-06 10:48:23,635:INFO:             kaleido: 0.2.1
2024-04-06 10:48:23,635:INFO:           schemdraw: 0.15
2024-04-06 10:48:23,635:INFO:         statsmodels: 0.14.1
2024-04-06 10:48:23,635:INFO:              sktime: 0.28.0
2024-04-06 10:48:23,636:INFO:               tbats: 1.1.3
2024-04-06 10:48:23,636:INFO:            pmdarima: 2.0.4
2024-04-06 10:48:23,636:INFO:              psutil: 5.9.8
2024-04-06 10:48:23,636:INFO:          markupsafe: 2.1.5
2024-04-06 10:48:23,636:INFO:             pickle5: Not installed
2024-04-06 10:48:23,636:INFO:         cloudpickle: 3.0.0
2024-04-06 10:48:23,636:INFO:         deprecation: 2.1.0
2024-04-06 10:48:23,636:INFO:              xxhash: 3.4.1
2024-04-06 10:48:23,636:INFO:           wurlitzer: 3.0.3
2024-04-06 10:48:23,636:INFO:PyCaret optional dependencies:
2024-04-06 10:48:23,636:INFO:                shap: Not installed
2024-04-06 10:48:23,636:INFO:           interpret: Not installed
2024-04-06 10:48:23,636:INFO:                umap: Not installed
2024-04-06 10:48:23,636:INFO:     ydata_profiling: Not installed
2024-04-06 10:48:23,636:INFO:  explainerdashboard: Not installed
2024-04-06 10:48:23,636:INFO:             autoviz: Not installed
2024-04-06 10:48:23,636:INFO:           fairlearn: Not installed
2024-04-06 10:48:23,636:INFO:          deepchecks: Not installed
2024-04-06 10:48:23,636:INFO:             xgboost: Not installed
2024-04-06 10:48:23,636:INFO:            catboost: Not installed
2024-04-06 10:48:23,636:INFO:              kmodes: Not installed
2024-04-06 10:48:23,636:INFO:             mlxtend: Not installed
2024-04-06 10:48:23,636:INFO:       statsforecast: Not installed
2024-04-06 10:48:23,636:INFO:        tune_sklearn: Not installed
2024-04-06 10:48:23,636:INFO:                 ray: Not installed
2024-04-06 10:48:23,636:INFO:            hyperopt: Not installed
2024-04-06 10:48:23,636:INFO:              optuna: Not installed
2024-04-06 10:48:23,636:INFO:               skopt: Not installed
2024-04-06 10:48:23,636:INFO:              mlflow: 2.11.3
2024-04-06 10:48:23,636:INFO:              gradio: Not installed
2024-04-06 10:48:23,636:INFO:             fastapi: Not installed
2024-04-06 10:48:23,636:INFO:             uvicorn: Not installed
2024-04-06 10:48:23,636:INFO:              m2cgen: Not installed
2024-04-06 10:48:23,636:INFO:           evidently: Not installed
2024-04-06 10:48:23,636:INFO:               fugue: Not installed
2024-04-06 10:48:23,636:INFO:           streamlit: 1.33.0
2024-04-06 10:48:23,636:INFO:             prophet: 1.1.5
2024-04-06 10:48:23,636:INFO:None
2024-04-06 10:48:23,636:INFO:Set up data.
2024-04-06 10:48:23,639:INFO:Set up folding strategy.
2024-04-06 10:48:23,640:INFO:Set up train/test split.
2024-04-06 10:48:23,640:INFO:Set up data.
2024-04-06 10:48:23,642:INFO:Set up index.
2024-04-06 10:48:23,642:INFO:Assigning column types.
2024-04-06 10:48:23,644:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 10:48:23,663:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:48:23,664:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:48:23,676:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:48:23,676:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:48:23,695:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:48:23,695:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:48:23,706:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:48:23,707:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:48:23,707:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 10:48:23,725:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:48:23,736:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:48:23,737:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:48:23,754:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:48:23,765:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:48:23,765:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:48:23,766:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 10:48:23,794:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:48:23,794:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:48:23,823:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:48:23,824:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:48:23,824:INFO:Preparing preprocessing pipeline...
2024-04-06 10:48:23,826:INFO:Set up simple imputation.
2024-04-06 10:48:23,826:INFO:Set up feature normalization.
2024-04-06 10:48:23,843:INFO:Finished creating preprocessing pipeline.
2024-04-06 10:48:23,845:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 10:48:23,845:INFO:Creating final display dataframe.
2024-04-06 10:48:23,881:INFO:Setup _display_container:                     Description             Value
0                    Session id              2468
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              d8ac
2024-04-06 10:48:23,915:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:48:23,915:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:48:23,945:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:48:23,946:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:48:23,946:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 10:48:23,947:INFO:setup() successfully completed in 0.31s...............
2024-04-06 10:48:23,948:INFO:Initializing compare_models()
2024-04-06 10:48:23,948:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fe70c10>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x30fe70c10>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 10:48:23,948:INFO:Checking exceptions
2024-04-06 10:48:23,950:INFO:Preparing display monitor
2024-04-06 10:48:23,960:INFO:Initializing Logistic Regression
2024-04-06 10:48:23,960:INFO:Total runtime is 1.9669532775878906e-06 minutes
2024-04-06 10:48:23,961:INFO:SubProcess create_model() called ==================================
2024-04-06 10:48:23,961:INFO:Initializing create_model()
2024-04-06 10:48:23,961:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fe70c10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x175197550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:48:23,961:INFO:Checking exceptions
2024-04-06 10:48:23,962:INFO:Importing libraries
2024-04-06 10:48:23,962:INFO:Copying training dataset
2024-04-06 10:48:23,966:INFO:Defining folds
2024-04-06 10:48:23,966:INFO:Declaring metric variables
2024-04-06 10:48:23,967:INFO:Importing untrained model
2024-04-06 10:48:23,969:INFO:Logistic Regression Imported successfully
2024-04-06 10:48:23,972:INFO:Starting cross validation
2024-04-06 10:48:23,973:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:48:24,112:INFO:Calculating mean and std
2024-04-06 10:48:24,112:INFO:Creating metrics dataframe
2024-04-06 10:48:24,113:INFO:Uploading results into container
2024-04-06 10:48:24,113:INFO:Uploading model into container now
2024-04-06 10:48:24,113:INFO:_master_model_container: 1
2024-04-06 10:48:24,113:INFO:_display_container: 2
2024-04-06 10:48:24,113:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2468, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:48:24,113:INFO:create_model() successfully completed......................................
2024-04-06 10:48:24,338:INFO:SubProcess create_model() end ==================================
2024-04-06 10:48:24,338:INFO:Creating metrics dataframe
2024-04-06 10:48:24,341:INFO:Initializing Decision Tree Classifier
2024-04-06 10:48:24,341:INFO:Total runtime is 0.006345717112223307 minutes
2024-04-06 10:48:24,342:INFO:SubProcess create_model() called ==================================
2024-04-06 10:48:24,342:INFO:Initializing create_model()
2024-04-06 10:48:24,342:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fe70c10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x175197550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:48:24,342:INFO:Checking exceptions
2024-04-06 10:48:24,342:INFO:Importing libraries
2024-04-06 10:48:24,342:INFO:Copying training dataset
2024-04-06 10:48:24,345:INFO:Defining folds
2024-04-06 10:48:24,345:INFO:Declaring metric variables
2024-04-06 10:48:24,346:INFO:Importing untrained model
2024-04-06 10:48:24,347:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:48:24,349:INFO:Starting cross validation
2024-04-06 10:48:24,350:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:48:24,429:INFO:Calculating mean and std
2024-04-06 10:48:24,430:INFO:Creating metrics dataframe
2024-04-06 10:48:24,430:INFO:Uploading results into container
2024-04-06 10:48:24,431:INFO:Uploading model into container now
2024-04-06 10:48:24,431:INFO:_master_model_container: 2
2024-04-06 10:48:24,431:INFO:_display_container: 2
2024-04-06 10:48:24,431:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2468, splitter='best')
2024-04-06 10:48:24,431:INFO:create_model() successfully completed......................................
2024-04-06 10:48:24,546:INFO:SubProcess create_model() end ==================================
2024-04-06 10:48:24,546:INFO:Creating metrics dataframe
2024-04-06 10:48:24,549:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 10:48:24,554:INFO:Initializing create_model()
2024-04-06 10:48:24,555:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fe70c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2468, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:48:24,555:INFO:Checking exceptions
2024-04-06 10:48:24,556:INFO:Importing libraries
2024-04-06 10:48:24,556:INFO:Copying training dataset
2024-04-06 10:48:24,560:INFO:Defining folds
2024-04-06 10:48:24,560:INFO:Declaring metric variables
2024-04-06 10:48:24,560:INFO:Importing untrained model
2024-04-06 10:48:24,560:INFO:Declaring custom model
2024-04-06 10:48:24,560:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:48:24,561:INFO:Cross validation set to False
2024-04-06 10:48:24,561:INFO:Fitting Model
2024-04-06 10:48:24,574:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2468, splitter='best')
2024-04-06 10:48:24,574:INFO:create_model() successfully completed......................................
2024-04-06 10:48:24,695:INFO:Initializing create_model()
2024-04-06 10:48:24,695:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fe70c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2468, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:48:24,695:INFO:Checking exceptions
2024-04-06 10:48:24,696:INFO:Importing libraries
2024-04-06 10:48:24,696:INFO:Copying training dataset
2024-04-06 10:48:24,698:INFO:Defining folds
2024-04-06 10:48:24,698:INFO:Declaring metric variables
2024-04-06 10:48:24,698:INFO:Importing untrained model
2024-04-06 10:48:24,698:INFO:Declaring custom model
2024-04-06 10:48:24,698:INFO:Logistic Regression Imported successfully
2024-04-06 10:48:24,698:INFO:Cross validation set to False
2024-04-06 10:48:24,698:INFO:Fitting Model
2024-04-06 10:48:24,711:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2468, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:48:24,712:INFO:create_model() successfully completed......................................
2024-04-06 10:48:24,959:INFO:_master_model_container: 2
2024-04-06 10:48:24,960:INFO:_display_container: 2
2024-04-06 10:48:24,960:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2468, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2468, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-06 10:48:24,961:INFO:compare_models() successfully completed......................................
2024-04-06 10:48:24,962:INFO:Initializing predict_model()
2024-04-06 10:48:24,962:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fe70c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2468, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x176946340>)
2024-04-06 10:48:24,962:INFO:Checking exceptions
2024-04-06 10:48:24,962:INFO:Preloading libraries
2024-04-06 10:48:25,650:INFO:Initializing predict_model()
2024-04-06 10:48:25,650:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fe70c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2468, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1769460c0>)
2024-04-06 10:48:25,650:INFO:Checking exceptions
2024-04-06 10:48:25,650:INFO:Preloading libraries
2024-04-06 10:48:26,128:INFO:Initializing tune_model()
2024-04-06 10:48:26,128:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fe70c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2468, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-06 10:48:26,128:INFO:Checking exceptions
2024-04-06 10:48:26,135:INFO:Copying training dataset
2024-04-06 10:48:26,141:INFO:Checking base model
2024-04-06 10:48:26,142:INFO:Base model : Logistic Regression
2024-04-06 10:48:26,145:INFO:Declaring metric variables
2024-04-06 10:48:26,148:INFO:Defining Hyperparameters
2024-04-06 10:48:26,323:INFO:Tuning with n_jobs=-1
2024-04-06 10:48:26,323:INFO:Initializing RandomizedSearchCV
2024-04-06 10:48:26,431:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 7.259}
2024-04-06 10:48:26,431:INFO:Hyperparameter search completed
2024-04-06 10:48:26,431:INFO:SubProcess create_model() called ==================================
2024-04-06 10:48:26,431:INFO:Initializing create_model()
2024-04-06 10:48:26,431:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fe70c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2468, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30db458d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'class_weight': 'balanced', 'C': 7.259})
2024-04-06 10:48:26,431:INFO:Checking exceptions
2024-04-06 10:48:26,431:INFO:Importing libraries
2024-04-06 10:48:26,431:INFO:Copying training dataset
2024-04-06 10:48:26,433:INFO:Defining folds
2024-04-06 10:48:26,433:INFO:Declaring metric variables
2024-04-06 10:48:26,434:INFO:Importing untrained model
2024-04-06 10:48:26,434:INFO:Declaring custom model
2024-04-06 10:48:26,436:INFO:Logistic Regression Imported successfully
2024-04-06 10:48:26,438:INFO:Starting cross validation
2024-04-06 10:48:26,438:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:48:26,492:INFO:Calculating mean and std
2024-04-06 10:48:26,492:INFO:Creating metrics dataframe
2024-04-06 10:48:26,494:INFO:Finalizing model
2024-04-06 10:48:26,560:INFO:Uploading results into container
2024-04-06 10:48:26,560:INFO:Uploading model into container now
2024-04-06 10:48:26,561:INFO:_master_model_container: 3
2024-04-06 10:48:26,561:INFO:_display_container: 5
2024-04-06 10:48:26,562:INFO:LogisticRegression(C=7.259, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2468, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:48:26,562:INFO:create_model() successfully completed......................................
2024-04-06 10:48:26,765:INFO:SubProcess create_model() end ==================================
2024-04-06 10:48:26,765:INFO:choose_better activated
2024-04-06 10:48:26,769:INFO:SubProcess create_model() called ==================================
2024-04-06 10:48:26,769:INFO:Initializing create_model()
2024-04-06 10:48:26,769:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fe70c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2468, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:48:26,769:INFO:Checking exceptions
2024-04-06 10:48:26,769:INFO:Importing libraries
2024-04-06 10:48:26,769:INFO:Copying training dataset
2024-04-06 10:48:26,772:INFO:Defining folds
2024-04-06 10:48:26,772:INFO:Declaring metric variables
2024-04-06 10:48:26,772:INFO:Importing untrained model
2024-04-06 10:48:26,772:INFO:Declaring custom model
2024-04-06 10:48:26,772:INFO:Logistic Regression Imported successfully
2024-04-06 10:48:26,772:INFO:Starting cross validation
2024-04-06 10:48:26,773:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:48:26,829:INFO:Calculating mean and std
2024-04-06 10:48:26,829:INFO:Creating metrics dataframe
2024-04-06 10:48:26,830:INFO:Finalizing model
2024-04-06 10:48:26,838:INFO:Uploading results into container
2024-04-06 10:48:26,839:INFO:Uploading model into container now
2024-04-06 10:48:26,839:INFO:_master_model_container: 4
2024-04-06 10:48:26,840:INFO:_display_container: 6
2024-04-06 10:48:26,841:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2468, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:48:26,841:INFO:create_model() successfully completed......................................
2024-04-06 10:48:27,038:INFO:SubProcess create_model() end ==================================
2024-04-06 10:48:27,038:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2468, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 0.5214
2024-04-06 10:48:27,038:INFO:LogisticRegression(C=7.259, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2468, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 0.5438
2024-04-06 10:48:27,039:INFO:LogisticRegression(C=7.259, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2468, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2024-04-06 10:48:27,039:INFO:choose_better completed
2024-04-06 10:48:27,049:INFO:_master_model_container: 4
2024-04-06 10:48:27,049:INFO:_display_container: 5
2024-04-06 10:48:27,050:INFO:LogisticRegression(C=7.259, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2468, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:48:27,050:INFO:tune_model() successfully completed......................................
2024-04-06 10:48:27,207:INFO:Initializing predict_model()
2024-04-06 10:48:27,207:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fe70c10>, estimator=LogisticRegression(C=7.259, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2468, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x177878ae0>)
2024-04-06 10:48:27,207:INFO:Checking exceptions
2024-04-06 10:48:27,207:INFO:Preloading libraries
2024-04-06 10:48:27,520:INFO:Initializing finalize_model()
2024-04-06 10:48:27,520:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fe70c10>, estimator=LogisticRegression(C=7.259, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2468, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-06 10:48:27,520:INFO:Finalizing LogisticRegression(C=7.259, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2468, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:48:27,521:INFO:Initializing create_model()
2024-04-06 10:48:27,522:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fe70c10>, estimator=LogisticRegression(C=7.259, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2468, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:48:27,522:INFO:Checking exceptions
2024-04-06 10:48:27,522:INFO:Importing libraries
2024-04-06 10:48:27,522:INFO:Copying training dataset
2024-04-06 10:48:27,522:INFO:Defining folds
2024-04-06 10:48:27,522:INFO:Declaring metric variables
2024-04-06 10:48:27,522:INFO:Importing untrained model
2024-04-06 10:48:27,522:INFO:Declaring custom model
2024-04-06 10:48:27,523:INFO:Logistic Regression Imported successfully
2024-04-06 10:48:27,523:INFO:Cross validation set to False
2024-04-06 10:48:27,523:INFO:Fitting Model
2024-04-06 10:48:27,555:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=7.259, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2',
                                    random_state=2468, solver='lbfgs',
                                    tol=0.0001, verbose=0, warm_start=False))],
         verbose=False)
2024-04-06 10:48:27,555:INFO:create_model() successfully completed......................................
2024-04-06 10:48:27,844:INFO:_master_model_container: 4
2024-04-06 10:48:27,844:INFO:_display_container: 6
2024-04-06 10:48:27,846:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=7.259, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2',
                                    random_state=2468, solver='lbfgs',
                                    tol=0.0001, verbose=0, warm_start=False))],
         verbose=False)
2024-04-06 10:48:27,846:INFO:finalize_model() successfully completed......................................
2024-04-06 10:48:27,973:INFO:Initializing save_model()
2024-04-06 10:48:27,973:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=7.259, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2',
                                    random_state=2468, solver='lbfgs',
                                    tol=0.0001, verbose=0, warm_start=False))],
         verbose=False), model_name=./kobe, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-06 10:48:27,973:INFO:Adding model into prep_pipe
2024-04-06 10:48:27,973:WARNING:Only Model saved as it was a pipeline.
2024-04-06 10:48:27,976:INFO:./kobe.pkl saved in current working directory
2024-04-06 10:48:27,977:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=7.259, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2',
                                    random_state=2468, solver='lbfgs',
                                    tol=0.0001, verbose=0, warm_start=False))],
         verbose=False)
2024-04-06 10:48:27,977:INFO:save_model() successfully completed......................................
2024-04-06 10:48:28,101:INFO:Initializing load_model()
2024-04-06 10:48:28,101:INFO:load_model(model_name=./kobe, platform=None, authentication=None, verbose=True)
2024-04-06 10:48:28,123:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-06 10:48:30,094:WARNING:/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/ipykernel_3194/3897082861.py:180: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-06 10:49:38,855:INFO:PyCaret ClassificationExperiment
2024-04-06 10:49:38,856:INFO:Logging name: clf-default-name
2024-04-06 10:49:38,856:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 10:49:38,856:INFO:version 3.3.0
2024-04-06 10:49:38,856:INFO:Initializing setup()
2024-04-06 10:49:38,856:INFO:self.USI: 6220
2024-04-06 10:49:38,856:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 10:49:38,856:INFO:Checking environment
2024-04-06 10:49:38,856:INFO:python_version: 3.11.3
2024-04-06 10:49:38,856:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 10:49:38,856:INFO:machine: arm64
2024-04-06 10:49:38,856:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:49:38,856:INFO:Memory: svmem(total=8589934592, available=1638907904, percent=80.9, used=2669805568, free=55410688, active=1598504960, inactive=1582235648, wired=1071300608)
2024-04-06 10:49:38,856:INFO:Physical Core: 8
2024-04-06 10:49:38,856:INFO:Logical Core: 8
2024-04-06 10:49:38,856:INFO:Checking libraries
2024-04-06 10:49:38,856:INFO:System:
2024-04-06 10:49:38,856:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 10:49:38,856:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 10:49:38,856:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:49:38,856:INFO:PyCaret required dependencies:
2024-04-06 10:49:38,856:INFO:                 pip: 24.0
2024-04-06 10:49:38,856:INFO:          setuptools: 65.5.0
2024-04-06 10:49:38,856:INFO:             pycaret: 3.3.0
2024-04-06 10:49:38,856:INFO:             IPython: 8.23.0
2024-04-06 10:49:38,856:INFO:          ipywidgets: 8.1.2
2024-04-06 10:49:38,856:INFO:                tqdm: 4.66.2
2024-04-06 10:49:38,856:INFO:               numpy: 1.26.4
2024-04-06 10:49:38,856:INFO:              pandas: 2.1.4
2024-04-06 10:49:38,856:INFO:              jinja2: 3.1.3
2024-04-06 10:49:38,856:INFO:               scipy: 1.11.4
2024-04-06 10:49:38,856:INFO:              joblib: 1.3.2
2024-04-06 10:49:38,857:INFO:             sklearn: 1.4.1.post1
2024-04-06 10:49:38,857:INFO:                pyod: 1.1.3
2024-04-06 10:49:38,857:INFO:            imblearn: 0.12.2
2024-04-06 10:49:38,857:INFO:   category_encoders: 2.6.3
2024-04-06 10:49:38,857:INFO:            lightgbm: 4.3.0
2024-04-06 10:49:38,857:INFO:               numba: 0.59.1
2024-04-06 10:49:38,857:INFO:            requests: 2.31.0
2024-04-06 10:49:38,857:INFO:          matplotlib: 3.7.5
2024-04-06 10:49:38,857:INFO:          scikitplot: 0.3.7
2024-04-06 10:49:38,857:INFO:         yellowbrick: 1.5
2024-04-06 10:49:38,857:INFO:              plotly: 5.20.0
2024-04-06 10:49:38,857:INFO:    plotly-resampler: Not installed
2024-04-06 10:49:38,857:INFO:             kaleido: 0.2.1
2024-04-06 10:49:38,857:INFO:           schemdraw: 0.15
2024-04-06 10:49:38,857:INFO:         statsmodels: 0.14.1
2024-04-06 10:49:38,857:INFO:              sktime: 0.28.0
2024-04-06 10:49:38,857:INFO:               tbats: 1.1.3
2024-04-06 10:49:38,857:INFO:            pmdarima: 2.0.4
2024-04-06 10:49:38,857:INFO:              psutil: 5.9.8
2024-04-06 10:49:38,857:INFO:          markupsafe: 2.1.5
2024-04-06 10:49:38,857:INFO:             pickle5: Not installed
2024-04-06 10:49:38,857:INFO:         cloudpickle: 3.0.0
2024-04-06 10:49:38,857:INFO:         deprecation: 2.1.0
2024-04-06 10:49:38,857:INFO:              xxhash: 3.4.1
2024-04-06 10:49:38,857:INFO:           wurlitzer: 3.0.3
2024-04-06 10:49:38,857:INFO:PyCaret optional dependencies:
2024-04-06 10:49:38,857:INFO:                shap: Not installed
2024-04-06 10:49:38,857:INFO:           interpret: Not installed
2024-04-06 10:49:38,857:INFO:                umap: Not installed
2024-04-06 10:49:38,857:INFO:     ydata_profiling: Not installed
2024-04-06 10:49:38,857:INFO:  explainerdashboard: Not installed
2024-04-06 10:49:38,857:INFO:             autoviz: Not installed
2024-04-06 10:49:38,857:INFO:           fairlearn: Not installed
2024-04-06 10:49:38,857:INFO:          deepchecks: Not installed
2024-04-06 10:49:38,857:INFO:             xgboost: Not installed
2024-04-06 10:49:38,857:INFO:            catboost: Not installed
2024-04-06 10:49:38,857:INFO:              kmodes: Not installed
2024-04-06 10:49:38,857:INFO:             mlxtend: Not installed
2024-04-06 10:49:38,857:INFO:       statsforecast: Not installed
2024-04-06 10:49:38,857:INFO:        tune_sklearn: Not installed
2024-04-06 10:49:38,857:INFO:                 ray: Not installed
2024-04-06 10:49:38,857:INFO:            hyperopt: Not installed
2024-04-06 10:49:38,857:INFO:              optuna: Not installed
2024-04-06 10:49:38,857:INFO:               skopt: Not installed
2024-04-06 10:49:38,857:INFO:              mlflow: 2.11.3
2024-04-06 10:49:38,857:INFO:              gradio: Not installed
2024-04-06 10:49:38,857:INFO:             fastapi: Not installed
2024-04-06 10:49:38,857:INFO:             uvicorn: Not installed
2024-04-06 10:49:38,857:INFO:              m2cgen: Not installed
2024-04-06 10:49:38,857:INFO:           evidently: Not installed
2024-04-06 10:49:38,857:INFO:               fugue: Not installed
2024-04-06 10:49:38,857:INFO:           streamlit: 1.33.0
2024-04-06 10:49:38,857:INFO:             prophet: 1.1.5
2024-04-06 10:49:38,857:INFO:None
2024-04-06 10:49:38,857:INFO:Set up data.
2024-04-06 10:49:38,860:INFO:Set up folding strategy.
2024-04-06 10:49:38,860:INFO:Set up train/test split.
2024-04-06 10:49:38,860:INFO:Set up data.
2024-04-06 10:49:38,863:INFO:Set up index.
2024-04-06 10:49:38,864:INFO:Assigning column types.
2024-04-06 10:49:38,866:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 10:49:38,886:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:49:38,886:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:49:38,899:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:49:38,899:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:49:38,918:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:49:38,919:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:49:38,931:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:49:38,931:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:49:38,931:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 10:49:38,950:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:49:38,960:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:49:38,960:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:49:38,979:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:49:38,990:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:49:38,990:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:49:38,990:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 10:49:39,019:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:49:39,020:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:49:39,048:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:49:39,048:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:49:39,049:INFO:Preparing preprocessing pipeline...
2024-04-06 10:49:39,049:INFO:Set up simple imputation.
2024-04-06 10:49:39,050:INFO:Set up feature normalization.
2024-04-06 10:49:39,060:INFO:Finished creating preprocessing pipeline.
2024-04-06 10:49:39,062:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 10:49:39,062:INFO:Creating final display dataframe.
2024-04-06 10:49:39,093:INFO:Setup _display_container:                     Description             Value
0                    Session id              3893
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              6220
2024-04-06 10:49:39,126:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:49:39,126:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:49:39,156:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:49:39,156:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:49:39,156:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 10:49:39,157:INFO:setup() successfully completed in 0.3s...............
2024-04-06 10:49:39,157:INFO:Initializing compare_models()
2024-04-06 10:49:39,157:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e990c10>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x30e990c10>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 10:49:39,157:INFO:Checking exceptions
2024-04-06 10:49:39,159:INFO:Preparing display monitor
2024-04-06 10:49:39,167:INFO:Initializing Logistic Regression
2024-04-06 10:49:39,167:INFO:Total runtime is 1.4861424763997396e-06 minutes
2024-04-06 10:49:39,168:INFO:SubProcess create_model() called ==================================
2024-04-06 10:49:39,168:INFO:Initializing create_model()
2024-04-06 10:49:39,168:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e990c10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30faf9a90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:49:39,168:INFO:Checking exceptions
2024-04-06 10:49:39,168:INFO:Importing libraries
2024-04-06 10:49:39,169:INFO:Copying training dataset
2024-04-06 10:49:39,173:INFO:Defining folds
2024-04-06 10:49:39,173:INFO:Declaring metric variables
2024-04-06 10:49:39,174:INFO:Importing untrained model
2024-04-06 10:49:39,176:INFO:Logistic Regression Imported successfully
2024-04-06 10:49:39,178:INFO:Starting cross validation
2024-04-06 10:49:39,179:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:49:39,294:INFO:Calculating mean and std
2024-04-06 10:49:39,294:INFO:Creating metrics dataframe
2024-04-06 10:49:39,295:INFO:Uploading results into container
2024-04-06 10:49:39,295:INFO:Uploading model into container now
2024-04-06 10:49:39,295:INFO:_master_model_container: 1
2024-04-06 10:49:39,295:INFO:_display_container: 2
2024-04-06 10:49:39,296:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3893, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:49:39,296:INFO:create_model() successfully completed......................................
2024-04-06 10:49:39,477:INFO:SubProcess create_model() end ==================================
2024-04-06 10:49:39,477:INFO:Creating metrics dataframe
2024-04-06 10:49:39,479:INFO:Initializing Decision Tree Classifier
2024-04-06 10:49:39,479:INFO:Total runtime is 0.005203652381896973 minutes
2024-04-06 10:49:39,480:INFO:SubProcess create_model() called ==================================
2024-04-06 10:49:39,480:INFO:Initializing create_model()
2024-04-06 10:49:39,480:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e990c10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30faf9a90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:49:39,481:INFO:Checking exceptions
2024-04-06 10:49:39,481:INFO:Importing libraries
2024-04-06 10:49:39,481:INFO:Copying training dataset
2024-04-06 10:49:39,483:INFO:Defining folds
2024-04-06 10:49:39,483:INFO:Declaring metric variables
2024-04-06 10:49:39,484:INFO:Importing untrained model
2024-04-06 10:49:39,486:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:49:39,488:INFO:Starting cross validation
2024-04-06 10:49:39,488:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:49:39,555:INFO:Calculating mean and std
2024-04-06 10:49:39,555:INFO:Creating metrics dataframe
2024-04-06 10:49:39,555:INFO:Uploading results into container
2024-04-06 10:49:39,556:INFO:Uploading model into container now
2024-04-06 10:49:39,556:INFO:_master_model_container: 2
2024-04-06 10:49:39,556:INFO:_display_container: 2
2024-04-06 10:49:39,556:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3893, splitter='best')
2024-04-06 10:49:39,556:INFO:create_model() successfully completed......................................
2024-04-06 10:49:39,681:INFO:SubProcess create_model() end ==================================
2024-04-06 10:49:39,682:INFO:Creating metrics dataframe
2024-04-06 10:49:39,684:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 10:49:39,688:INFO:Initializing create_model()
2024-04-06 10:49:39,688:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e990c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3893, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:49:39,688:INFO:Checking exceptions
2024-04-06 10:49:39,689:INFO:Importing libraries
2024-04-06 10:49:39,689:INFO:Copying training dataset
2024-04-06 10:49:39,691:INFO:Defining folds
2024-04-06 10:49:39,691:INFO:Declaring metric variables
2024-04-06 10:49:39,691:INFO:Importing untrained model
2024-04-06 10:49:39,691:INFO:Declaring custom model
2024-04-06 10:49:39,692:INFO:Logistic Regression Imported successfully
2024-04-06 10:49:39,692:INFO:Cross validation set to False
2024-04-06 10:49:39,692:INFO:Fitting Model
2024-04-06 10:49:39,707:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3893, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:49:39,707:INFO:create_model() successfully completed......................................
2024-04-06 10:49:39,952:INFO:Initializing create_model()
2024-04-06 10:49:39,953:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e990c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3893, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:49:39,953:INFO:Checking exceptions
2024-04-06 10:49:39,955:INFO:Importing libraries
2024-04-06 10:49:39,955:INFO:Copying training dataset
2024-04-06 10:49:39,960:INFO:Defining folds
2024-04-06 10:49:39,960:INFO:Declaring metric variables
2024-04-06 10:49:39,961:INFO:Importing untrained model
2024-04-06 10:49:39,961:INFO:Declaring custom model
2024-04-06 10:49:39,961:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:49:39,962:INFO:Cross validation set to False
2024-04-06 10:49:39,962:INFO:Fitting Model
2024-04-06 10:49:39,983:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3893, splitter='best')
2024-04-06 10:49:39,984:INFO:create_model() successfully completed......................................
2024-04-06 10:49:40,148:INFO:_master_model_container: 2
2024-04-06 10:49:40,148:INFO:_display_container: 2
2024-04-06 10:49:40,149:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3893, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3893, splitter='best')]
2024-04-06 10:49:40,149:INFO:compare_models() successfully completed......................................
2024-04-06 10:49:40,149:INFO:Initializing predict_model()
2024-04-06 10:49:40,149:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e990c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3893, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30db498a0>)
2024-04-06 10:49:40,149:INFO:Checking exceptions
2024-04-06 10:49:40,150:INFO:Preloading libraries
2024-04-06 10:49:40,832:INFO:Initializing predict_model()
2024-04-06 10:49:40,832:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e990c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3893, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30db49800>)
2024-04-06 10:49:40,832:INFO:Checking exceptions
2024-04-06 10:49:40,832:INFO:Preloading libraries
2024-04-06 10:49:41,296:INFO:Initializing tune_model()
2024-04-06 10:49:41,296:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e990c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3893, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-06 10:49:41,296:INFO:Checking exceptions
2024-04-06 10:49:41,304:INFO:Copying training dataset
2024-04-06 10:49:41,310:INFO:Checking base model
2024-04-06 10:49:41,311:INFO:Base model : Decision Tree Classifier
2024-04-06 10:49:41,312:INFO:Declaring metric variables
2024-04-06 10:49:41,314:INFO:Defining Hyperparameters
2024-04-06 10:49:41,466:INFO:Tuning with n_jobs=-1
2024-04-06 10:49:41,466:INFO:Initializing RandomizedSearchCV
2024-04-06 10:49:41,563:INFO:best_params: {'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.001, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 11, 'actual_estimator__criterion': 'gini'}
2024-04-06 10:49:41,563:INFO:Hyperparameter search completed
2024-04-06 10:49:41,563:INFO:SubProcess create_model() called ==================================
2024-04-06 10:49:41,563:INFO:Initializing create_model()
2024-04-06 10:49:41,563:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e990c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3893, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30fd6a7d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 10, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.001, 'max_features': 1.0, 'max_depth': 11, 'criterion': 'gini'})
2024-04-06 10:49:41,563:INFO:Checking exceptions
2024-04-06 10:49:41,563:INFO:Importing libraries
2024-04-06 10:49:41,563:INFO:Copying training dataset
2024-04-06 10:49:41,565:INFO:Defining folds
2024-04-06 10:49:41,565:INFO:Declaring metric variables
2024-04-06 10:49:41,566:INFO:Importing untrained model
2024-04-06 10:49:41,566:INFO:Declaring custom model
2024-04-06 10:49:41,568:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:49:41,570:INFO:Starting cross validation
2024-04-06 10:49:41,570:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:49:41,625:INFO:Calculating mean and std
2024-04-06 10:49:41,625:INFO:Creating metrics dataframe
2024-04-06 10:49:41,627:INFO:Finalizing model
2024-04-06 10:49:41,635:INFO:Uploading results into container
2024-04-06 10:49:41,635:INFO:Uploading model into container now
2024-04-06 10:49:41,635:INFO:_master_model_container: 3
2024-04-06 10:49:41,635:INFO:_display_container: 5
2024-04-06 10:49:41,636:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=11, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=5,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3893, splitter='best')
2024-04-06 10:49:41,636:INFO:create_model() successfully completed......................................
2024-04-06 10:49:41,750:INFO:SubProcess create_model() end ==================================
2024-04-06 10:49:41,750:INFO:choose_better activated
2024-04-06 10:49:41,752:INFO:SubProcess create_model() called ==================================
2024-04-06 10:49:41,752:INFO:Initializing create_model()
2024-04-06 10:49:41,752:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e990c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3893, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:49:41,752:INFO:Checking exceptions
2024-04-06 10:49:41,753:INFO:Importing libraries
2024-04-06 10:49:41,753:INFO:Copying training dataset
2024-04-06 10:49:41,755:INFO:Defining folds
2024-04-06 10:49:41,755:INFO:Declaring metric variables
2024-04-06 10:49:41,755:INFO:Importing untrained model
2024-04-06 10:49:41,755:INFO:Declaring custom model
2024-04-06 10:49:41,756:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:49:41,756:INFO:Starting cross validation
2024-04-06 10:49:41,756:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:49:41,817:INFO:Calculating mean and std
2024-04-06 10:49:41,817:INFO:Creating metrics dataframe
2024-04-06 10:49:41,818:INFO:Finalizing model
2024-04-06 10:49:41,830:INFO:Uploading results into container
2024-04-06 10:49:41,830:INFO:Uploading model into container now
2024-04-06 10:49:41,831:INFO:_master_model_container: 4
2024-04-06 10:49:41,831:INFO:_display_container: 6
2024-04-06 10:49:41,831:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3893, splitter='best')
2024-04-06 10:49:41,831:INFO:create_model() successfully completed......................................
2024-04-06 10:49:41,949:INFO:SubProcess create_model() end ==================================
2024-04-06 10:49:41,949:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3893, splitter='best') result for F1 is 0.5208
2024-04-06 10:49:41,949:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=11, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=5,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3893, splitter='best') result for F1 is 0.4692
2024-04-06 10:49:41,950:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3893, splitter='best') is best model
2024-04-06 10:49:41,950:INFO:choose_better completed
2024-04-06 10:49:41,950:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-06 10:49:41,954:INFO:_master_model_container: 4
2024-04-06 10:49:41,954:INFO:_display_container: 5
2024-04-06 10:49:41,954:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3893, splitter='best')
2024-04-06 10:49:41,954:INFO:tune_model() successfully completed......................................
2024-04-06 10:49:42,076:INFO:Initializing predict_model()
2024-04-06 10:49:42,076:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e990c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3893, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x175247c40>)
2024-04-06 10:49:42,076:INFO:Checking exceptions
2024-04-06 10:49:42,076:INFO:Preloading libraries
2024-04-06 10:49:42,251:INFO:Initializing finalize_model()
2024-04-06 10:49:42,251:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e990c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3893, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-06 10:49:42,251:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3893, splitter='best')
2024-04-06 10:49:42,252:INFO:Initializing create_model()
2024-04-06 10:49:42,252:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e990c10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3893, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:49:42,252:INFO:Checking exceptions
2024-04-06 10:49:42,253:INFO:Importing libraries
2024-04-06 10:49:42,253:INFO:Copying training dataset
2024-04-06 10:49:42,253:INFO:Defining folds
2024-04-06 10:49:42,253:INFO:Declaring metric variables
2024-04-06 10:49:42,253:INFO:Importing untrained model
2024-04-06 10:49:42,253:INFO:Declaring custom model
2024-04-06 10:49:42,253:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:49:42,253:INFO:Cross validation set to False
2024-04-06 10:49:42,253:INFO:Fitting Model
2024-04-06 10:49:42,305:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=3893,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:49:42,305:INFO:create_model() successfully completed......................................
2024-04-06 10:49:42,416:INFO:_master_model_container: 4
2024-04-06 10:49:42,416:INFO:_display_container: 6
2024-04-06 10:49:42,418:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=3893,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:49:42,418:INFO:finalize_model() successfully completed......................................
2024-04-06 10:49:42,533:INFO:Initializing save_model()
2024-04-06 10:49:42,534:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=3893,
                                        splitter='best'))],
         verbose=False), model_name=./kobe, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-06 10:49:42,534:INFO:Adding model into prep_pipe
2024-04-06 10:49:42,534:WARNING:Only Model saved as it was a pipeline.
2024-04-06 10:49:42,537:INFO:./kobe.pkl saved in current working directory
2024-04-06 10:49:42,538:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=3893,
                                        splitter='best'))],
         verbose=False)
2024-04-06 10:49:42,538:INFO:save_model() successfully completed......................................
2024-04-06 10:49:42,651:INFO:Initializing load_model()
2024-04-06 10:49:42,651:INFO:load_model(model_name=./kobe, platform=None, authentication=None, verbose=True)
2024-04-06 10:49:42,660:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-06 10:49:44,375:WARNING:/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/ipykernel_3194/3824359361.py:176: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-06 10:50:16,837:INFO:PyCaret ClassificationExperiment
2024-04-06 10:50:16,837:INFO:Logging name: clf-default-name
2024-04-06 10:50:16,837:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 10:50:16,837:INFO:version 3.3.0
2024-04-06 10:50:16,837:INFO:Initializing setup()
2024-04-06 10:50:16,837:INFO:self.USI: cd55
2024-04-06 10:50:16,837:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 10:50:16,837:INFO:Checking environment
2024-04-06 10:50:16,837:INFO:python_version: 3.11.3
2024-04-06 10:50:16,837:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 10:50:16,837:INFO:machine: arm64
2024-04-06 10:50:16,837:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:50:16,837:INFO:Memory: svmem(total=8589934592, available=1661599744, percent=80.7, used=2676162560, free=50298880, active=1632026624, inactive=1606139904, wired=1044135936)
2024-04-06 10:50:16,837:INFO:Physical Core: 8
2024-04-06 10:50:16,837:INFO:Logical Core: 8
2024-04-06 10:50:16,837:INFO:Checking libraries
2024-04-06 10:50:16,837:INFO:System:
2024-04-06 10:50:16,837:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 10:50:16,837:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 10:50:16,837:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:50:16,837:INFO:PyCaret required dependencies:
2024-04-06 10:50:16,837:INFO:                 pip: 24.0
2024-04-06 10:50:16,838:INFO:          setuptools: 65.5.0
2024-04-06 10:50:16,838:INFO:             pycaret: 3.3.0
2024-04-06 10:50:16,838:INFO:             IPython: 8.23.0
2024-04-06 10:50:16,838:INFO:          ipywidgets: 8.1.2
2024-04-06 10:50:16,838:INFO:                tqdm: 4.66.2
2024-04-06 10:50:16,838:INFO:               numpy: 1.26.4
2024-04-06 10:50:16,838:INFO:              pandas: 2.1.4
2024-04-06 10:50:16,838:INFO:              jinja2: 3.1.3
2024-04-06 10:50:16,838:INFO:               scipy: 1.11.4
2024-04-06 10:50:16,838:INFO:              joblib: 1.3.2
2024-04-06 10:50:16,838:INFO:             sklearn: 1.4.1.post1
2024-04-06 10:50:16,838:INFO:                pyod: 1.1.3
2024-04-06 10:50:16,838:INFO:            imblearn: 0.12.2
2024-04-06 10:50:16,838:INFO:   category_encoders: 2.6.3
2024-04-06 10:50:16,838:INFO:            lightgbm: 4.3.0
2024-04-06 10:50:16,838:INFO:               numba: 0.59.1
2024-04-06 10:50:16,838:INFO:            requests: 2.31.0
2024-04-06 10:50:16,838:INFO:          matplotlib: 3.7.5
2024-04-06 10:50:16,838:INFO:          scikitplot: 0.3.7
2024-04-06 10:50:16,838:INFO:         yellowbrick: 1.5
2024-04-06 10:50:16,838:INFO:              plotly: 5.20.0
2024-04-06 10:50:16,838:INFO:    plotly-resampler: Not installed
2024-04-06 10:50:16,838:INFO:             kaleido: 0.2.1
2024-04-06 10:50:16,838:INFO:           schemdraw: 0.15
2024-04-06 10:50:16,838:INFO:         statsmodels: 0.14.1
2024-04-06 10:50:16,838:INFO:              sktime: 0.28.0
2024-04-06 10:50:16,838:INFO:               tbats: 1.1.3
2024-04-06 10:50:16,838:INFO:            pmdarima: 2.0.4
2024-04-06 10:50:16,838:INFO:              psutil: 5.9.8
2024-04-06 10:50:16,838:INFO:          markupsafe: 2.1.5
2024-04-06 10:50:16,838:INFO:             pickle5: Not installed
2024-04-06 10:50:16,838:INFO:         cloudpickle: 3.0.0
2024-04-06 10:50:16,838:INFO:         deprecation: 2.1.0
2024-04-06 10:50:16,838:INFO:              xxhash: 3.4.1
2024-04-06 10:50:16,838:INFO:           wurlitzer: 3.0.3
2024-04-06 10:50:16,838:INFO:PyCaret optional dependencies:
2024-04-06 10:50:16,838:INFO:                shap: Not installed
2024-04-06 10:50:16,838:INFO:           interpret: Not installed
2024-04-06 10:50:16,838:INFO:                umap: Not installed
2024-04-06 10:50:16,838:INFO:     ydata_profiling: Not installed
2024-04-06 10:50:16,838:INFO:  explainerdashboard: Not installed
2024-04-06 10:50:16,838:INFO:             autoviz: Not installed
2024-04-06 10:50:16,838:INFO:           fairlearn: Not installed
2024-04-06 10:50:16,838:INFO:          deepchecks: Not installed
2024-04-06 10:50:16,838:INFO:             xgboost: Not installed
2024-04-06 10:50:16,838:INFO:            catboost: Not installed
2024-04-06 10:50:16,838:INFO:              kmodes: Not installed
2024-04-06 10:50:16,838:INFO:             mlxtend: Not installed
2024-04-06 10:50:16,838:INFO:       statsforecast: Not installed
2024-04-06 10:50:16,838:INFO:        tune_sklearn: Not installed
2024-04-06 10:50:16,838:INFO:                 ray: Not installed
2024-04-06 10:50:16,838:INFO:            hyperopt: Not installed
2024-04-06 10:50:16,838:INFO:              optuna: Not installed
2024-04-06 10:50:16,838:INFO:               skopt: Not installed
2024-04-06 10:50:16,838:INFO:              mlflow: 2.11.3
2024-04-06 10:50:16,838:INFO:              gradio: Not installed
2024-04-06 10:50:16,838:INFO:             fastapi: Not installed
2024-04-06 10:50:16,838:INFO:             uvicorn: Not installed
2024-04-06 10:50:16,838:INFO:              m2cgen: Not installed
2024-04-06 10:50:16,838:INFO:           evidently: Not installed
2024-04-06 10:50:16,838:INFO:               fugue: Not installed
2024-04-06 10:50:16,838:INFO:           streamlit: 1.33.0
2024-04-06 10:50:16,838:INFO:             prophet: 1.1.5
2024-04-06 10:50:16,838:INFO:None
2024-04-06 10:50:16,838:INFO:Set up data.
2024-04-06 10:50:16,840:INFO:Set up folding strategy.
2024-04-06 10:50:16,840:INFO:Set up train/test split.
2024-04-06 10:50:16,840:INFO:Set up data.
2024-04-06 10:50:16,842:INFO:Set up index.
2024-04-06 10:50:16,843:INFO:Assigning column types.
2024-04-06 10:50:16,846:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 10:50:16,864:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:50:16,865:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:50:16,876:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:50:16,877:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:50:16,895:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:50:16,895:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:50:16,907:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:50:16,907:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:50:16,907:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 10:50:16,925:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:50:16,936:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:50:16,936:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:50:16,955:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:50:16,966:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:50:16,966:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:50:16,966:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 10:50:16,995:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:50:16,996:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:50:17,025:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:50:17,025:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:50:17,025:INFO:Preparing preprocessing pipeline...
2024-04-06 10:50:17,026:INFO:Set up simple imputation.
2024-04-06 10:50:17,026:INFO:Set up feature normalization.
2024-04-06 10:50:17,037:INFO:Finished creating preprocessing pipeline.
2024-04-06 10:50:17,038:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 10:50:17,038:INFO:Creating final display dataframe.
2024-04-06 10:50:17,083:INFO:Setup _display_container:                     Description             Value
0                    Session id              2835
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              cd55
2024-04-06 10:50:17,117:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:50:17,117:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:50:17,147:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:50:17,147:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:50:17,147:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 10:50:17,148:INFO:setup() successfully completed in 0.31s...............
2024-04-06 10:50:17,148:INFO:Initializing compare_models()
2024-04-06 10:50:17,148:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9ccf50>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x30e9ccf50>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 10:50:17,148:INFO:Checking exceptions
2024-04-06 10:50:17,150:INFO:Preparing display monitor
2024-04-06 10:50:17,159:INFO:Initializing Logistic Regression
2024-04-06 10:50:17,159:INFO:Total runtime is 2.4120012919108074e-06 minutes
2024-04-06 10:50:17,160:INFO:SubProcess create_model() called ==================================
2024-04-06 10:50:17,160:INFO:Initializing create_model()
2024-04-06 10:50:17,160:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9ccf50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30aa77d90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:50:17,160:INFO:Checking exceptions
2024-04-06 10:50:17,161:INFO:Importing libraries
2024-04-06 10:50:17,161:INFO:Copying training dataset
2024-04-06 10:50:17,163:INFO:Defining folds
2024-04-06 10:50:17,163:INFO:Declaring metric variables
2024-04-06 10:50:17,165:INFO:Importing untrained model
2024-04-06 10:50:17,166:INFO:Logistic Regression Imported successfully
2024-04-06 10:50:17,169:INFO:Starting cross validation
2024-04-06 10:50:17,169:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:50:17,335:INFO:Calculating mean and std
2024-04-06 10:50:17,336:INFO:Creating metrics dataframe
2024-04-06 10:50:17,339:INFO:Uploading results into container
2024-04-06 10:50:17,339:INFO:Uploading model into container now
2024-04-06 10:50:17,339:INFO:_master_model_container: 1
2024-04-06 10:50:17,339:INFO:_display_container: 2
2024-04-06 10:50:17,339:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2835, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:50:17,339:INFO:create_model() successfully completed......................................
2024-04-06 10:50:17,539:INFO:SubProcess create_model() end ==================================
2024-04-06 10:50:17,539:INFO:Creating metrics dataframe
2024-04-06 10:50:17,541:INFO:Initializing Decision Tree Classifier
2024-04-06 10:50:17,541:INFO:Total runtime is 0.006374164422353108 minutes
2024-04-06 10:50:17,542:INFO:SubProcess create_model() called ==================================
2024-04-06 10:50:17,543:INFO:Initializing create_model()
2024-04-06 10:50:17,543:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9ccf50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30aa77d90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:50:17,543:INFO:Checking exceptions
2024-04-06 10:50:17,543:INFO:Importing libraries
2024-04-06 10:50:17,543:INFO:Copying training dataset
2024-04-06 10:50:17,545:INFO:Defining folds
2024-04-06 10:50:17,545:INFO:Declaring metric variables
2024-04-06 10:50:17,546:INFO:Importing untrained model
2024-04-06 10:50:17,547:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:50:17,550:INFO:Starting cross validation
2024-04-06 10:50:17,550:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:50:17,628:INFO:Calculating mean and std
2024-04-06 10:50:17,628:INFO:Creating metrics dataframe
2024-04-06 10:50:17,629:INFO:Uploading results into container
2024-04-06 10:50:17,629:INFO:Uploading model into container now
2024-04-06 10:50:17,629:INFO:_master_model_container: 2
2024-04-06 10:50:17,629:INFO:_display_container: 2
2024-04-06 10:50:17,629:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2835, splitter='best')
2024-04-06 10:50:17,629:INFO:create_model() successfully completed......................................
2024-04-06 10:50:17,747:INFO:SubProcess create_model() end ==================================
2024-04-06 10:50:17,747:INFO:Creating metrics dataframe
2024-04-06 10:50:17,750:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 10:50:17,753:INFO:Initializing create_model()
2024-04-06 10:50:17,753:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9ccf50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2835, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:50:17,753:INFO:Checking exceptions
2024-04-06 10:50:17,754:INFO:Importing libraries
2024-04-06 10:50:17,754:INFO:Copying training dataset
2024-04-06 10:50:17,757:INFO:Defining folds
2024-04-06 10:50:17,757:INFO:Declaring metric variables
2024-04-06 10:50:17,757:INFO:Importing untrained model
2024-04-06 10:50:17,757:INFO:Declaring custom model
2024-04-06 10:50:17,757:INFO:Logistic Regression Imported successfully
2024-04-06 10:50:17,757:INFO:Cross validation set to False
2024-04-06 10:50:17,757:INFO:Fitting Model
2024-04-06 10:50:17,763:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2835, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:50:17,763:INFO:create_model() successfully completed......................................
2024-04-06 10:50:17,917:INFO:Initializing create_model()
2024-04-06 10:50:17,917:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9ccf50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2835, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:50:17,917:INFO:Checking exceptions
2024-04-06 10:50:17,919:INFO:Importing libraries
2024-04-06 10:50:17,919:INFO:Copying training dataset
2024-04-06 10:50:17,925:INFO:Defining folds
2024-04-06 10:50:17,925:INFO:Declaring metric variables
2024-04-06 10:50:17,925:INFO:Importing untrained model
2024-04-06 10:50:17,925:INFO:Declaring custom model
2024-04-06 10:50:17,926:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:50:17,927:INFO:Cross validation set to False
2024-04-06 10:50:17,927:INFO:Fitting Model
2024-04-06 10:50:17,948:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2835, splitter='best')
2024-04-06 10:50:17,948:INFO:create_model() successfully completed......................................
2024-04-06 10:50:18,086:INFO:_master_model_container: 2
2024-04-06 10:50:18,086:INFO:_display_container: 2
2024-04-06 10:50:18,087:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2835, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2835, splitter='best')]
2024-04-06 10:50:18,087:INFO:compare_models() successfully completed......................................
2024-04-06 10:50:18,087:INFO:Initializing predict_model()
2024-04-06 10:50:18,087:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9ccf50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2835, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17791e020>)
2024-04-06 10:50:18,087:INFO:Checking exceptions
2024-04-06 10:50:18,087:INFO:Preloading libraries
2024-04-06 10:50:18,759:INFO:Initializing predict_model()
2024-04-06 10:50:18,759:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9ccf50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2835, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30fe0a340>)
2024-04-06 10:50:18,759:INFO:Checking exceptions
2024-04-06 10:50:18,759:INFO:Preloading libraries
2024-04-06 10:50:19,246:INFO:Initializing tune_model()
2024-04-06 10:50:19,246:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9ccf50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2835, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-06 10:50:19,246:INFO:Checking exceptions
2024-04-06 10:50:19,253:INFO:Copying training dataset
2024-04-06 10:50:19,259:INFO:Checking base model
2024-04-06 10:50:19,259:INFO:Base model : Logistic Regression
2024-04-06 10:50:19,261:INFO:Declaring metric variables
2024-04-06 10:50:19,263:INFO:Defining Hyperparameters
2024-04-06 10:50:19,484:INFO:Tuning with n_jobs=-1
2024-04-06 10:50:19,484:INFO:Initializing RandomizedSearchCV
2024-04-06 10:50:19,594:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 0.582}
2024-04-06 10:50:19,594:INFO:Hyperparameter search completed
2024-04-06 10:50:19,594:INFO:SubProcess create_model() called ==================================
2024-04-06 10:50:19,594:INFO:Initializing create_model()
2024-04-06 10:50:19,594:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9ccf50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2835, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30dd25fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'class_weight': 'balanced', 'C': 0.582})
2024-04-06 10:50:19,594:INFO:Checking exceptions
2024-04-06 10:50:19,594:INFO:Importing libraries
2024-04-06 10:50:19,594:INFO:Copying training dataset
2024-04-06 10:50:19,596:INFO:Defining folds
2024-04-06 10:50:19,596:INFO:Declaring metric variables
2024-04-06 10:50:19,598:INFO:Importing untrained model
2024-04-06 10:50:19,598:INFO:Declaring custom model
2024-04-06 10:50:19,599:INFO:Logistic Regression Imported successfully
2024-04-06 10:50:19,601:INFO:Starting cross validation
2024-04-06 10:50:19,602:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:50:19,650:INFO:Calculating mean and std
2024-04-06 10:50:19,650:INFO:Creating metrics dataframe
2024-04-06 10:50:19,652:INFO:Finalizing model
2024-04-06 10:50:19,728:INFO:Uploading results into container
2024-04-06 10:50:19,730:INFO:Uploading model into container now
2024-04-06 10:50:19,730:INFO:_master_model_container: 3
2024-04-06 10:50:19,730:INFO:_display_container: 5
2024-04-06 10:50:19,731:INFO:LogisticRegression(C=0.582, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2835, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:50:19,731:INFO:create_model() successfully completed......................................
2024-04-06 10:50:19,933:INFO:SubProcess create_model() end ==================================
2024-04-06 10:50:19,933:INFO:choose_better activated
2024-04-06 10:50:19,934:INFO:SubProcess create_model() called ==================================
2024-04-06 10:50:19,935:INFO:Initializing create_model()
2024-04-06 10:50:19,935:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9ccf50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2835, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:50:19,935:INFO:Checking exceptions
2024-04-06 10:50:19,935:INFO:Importing libraries
2024-04-06 10:50:19,935:INFO:Copying training dataset
2024-04-06 10:50:19,938:INFO:Defining folds
2024-04-06 10:50:19,938:INFO:Declaring metric variables
2024-04-06 10:50:19,938:INFO:Importing untrained model
2024-04-06 10:50:19,938:INFO:Declaring custom model
2024-04-06 10:50:19,938:INFO:Logistic Regression Imported successfully
2024-04-06 10:50:19,938:INFO:Starting cross validation
2024-04-06 10:50:19,938:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:50:20,005:INFO:Calculating mean and std
2024-04-06 10:50:20,005:INFO:Creating metrics dataframe
2024-04-06 10:50:20,006:INFO:Finalizing model
2024-04-06 10:50:20,012:INFO:Uploading results into container
2024-04-06 10:50:20,013:INFO:Uploading model into container now
2024-04-06 10:50:20,013:INFO:_master_model_container: 4
2024-04-06 10:50:20,013:INFO:_display_container: 6
2024-04-06 10:50:20,014:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2835, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:50:20,016:INFO:create_model() successfully completed......................................
2024-04-06 10:50:20,204:INFO:SubProcess create_model() end ==================================
2024-04-06 10:50:20,204:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2835, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 0.5284
2024-04-06 10:50:20,204:INFO:LogisticRegression(C=0.582, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2835, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 0.5517
2024-04-06 10:50:20,204:INFO:LogisticRegression(C=0.582, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2835, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2024-04-06 10:50:20,204:INFO:choose_better completed
2024-04-06 10:50:20,244:INFO:_master_model_container: 4
2024-04-06 10:50:20,244:INFO:_display_container: 5
2024-04-06 10:50:20,245:INFO:LogisticRegression(C=0.582, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2835, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:50:20,245:INFO:tune_model() successfully completed......................................
2024-04-06 10:50:20,376:INFO:Initializing predict_model()
2024-04-06 10:50:20,377:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9ccf50>, estimator=LogisticRegression(C=0.582, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2835, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17791d080>)
2024-04-06 10:50:20,377:INFO:Checking exceptions
2024-04-06 10:50:20,377:INFO:Preloading libraries
2024-04-06 10:50:20,669:INFO:Initializing finalize_model()
2024-04-06 10:50:20,669:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9ccf50>, estimator=LogisticRegression(C=0.582, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2835, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-06 10:50:20,669:INFO:Finalizing LogisticRegression(C=0.582, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2835, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:50:20,671:INFO:Initializing create_model()
2024-04-06 10:50:20,671:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30e9ccf50>, estimator=LogisticRegression(C=0.582, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2835, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:50:20,671:INFO:Checking exceptions
2024-04-06 10:50:20,671:INFO:Importing libraries
2024-04-06 10:50:20,671:INFO:Copying training dataset
2024-04-06 10:50:20,671:INFO:Defining folds
2024-04-06 10:50:20,671:INFO:Declaring metric variables
2024-04-06 10:50:20,671:INFO:Importing untrained model
2024-04-06 10:50:20,671:INFO:Declaring custom model
2024-04-06 10:50:20,672:INFO:Logistic Regression Imported successfully
2024-04-06 10:50:20,672:INFO:Cross validation set to False
2024-04-06 10:50:20,672:INFO:Fitting Model
2024-04-06 10:50:20,695:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=0.582, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2',
                                    random_state=2835, solver='lbfgs',
                                    tol=0.0001, verbose=0, warm_start=False))],
         verbose=False)
2024-04-06 10:50:20,695:INFO:create_model() successfully completed......................................
2024-04-06 10:50:20,904:INFO:_master_model_container: 4
2024-04-06 10:50:20,904:INFO:_display_container: 6
2024-04-06 10:50:20,906:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=0.582, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2',
                                    random_state=2835, solver='lbfgs',
                                    tol=0.0001, verbose=0, warm_start=False))],
         verbose=False)
2024-04-06 10:50:20,906:INFO:finalize_model() successfully completed......................................
2024-04-06 10:50:21,038:INFO:Initializing save_model()
2024-04-06 10:50:21,038:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=0.582, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2',
                                    random_state=2835, solver='lbfgs',
                                    tol=0.0001, verbose=0, warm_start=False))],
         verbose=False), model_name=./kobe, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-06 10:50:21,038:INFO:Adding model into prep_pipe
2024-04-06 10:50:21,038:WARNING:Only Model saved as it was a pipeline.
2024-04-06 10:50:21,039:INFO:./kobe.pkl saved in current working directory
2024-04-06 10:50:21,041:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=0.582, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2',
                                    random_state=2835, solver='lbfgs',
                                    tol=0.0001, verbose=0, warm_start=False))],
         verbose=False)
2024-04-06 10:50:21,041:INFO:save_model() successfully completed......................................
2024-04-06 10:50:21,153:INFO:Initializing load_model()
2024-04-06 10:50:21,153:INFO:load_model(model_name=./kobe, platform=None, authentication=None, verbose=True)
2024-04-06 10:50:21,161:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-06 10:50:22,767:WARNING:/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/ipykernel_3194/319744039.py:176: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-06 10:51:26,338:INFO:PyCaret ClassificationExperiment
2024-04-06 10:51:26,338:INFO:Logging name: clf-default-name
2024-04-06 10:51:26,338:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-06 10:51:26,338:INFO:version 3.3.0
2024-04-06 10:51:26,338:INFO:Initializing setup()
2024-04-06 10:51:26,338:INFO:self.USI: 24a5
2024-04-06 10:51:26,338:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'exp_id', 'seed', 'pipeline', 'exp_name_log', 'data', 'fix_imbalance', 'memory', 'idx', 'fold_generator', 'log_plots_param', 'html_param', 'target_param', 'y_test', 'fold_groups_param', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'X', 'USI', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'y', 'X_train', 'X_test', 'y_train'}
2024-04-06 10:51:26,340:INFO:Checking environment
2024-04-06 10:51:26,340:INFO:python_version: 3.11.3
2024-04-06 10:51:26,341:INFO:python_build: ('main', 'Apr 19 2023 18:49:55')
2024-04-06 10:51:26,341:INFO:machine: arm64
2024-04-06 10:51:26,341:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:51:26,341:INFO:Memory: svmem(total=8589934592, available=1532575744, percent=82.2, used=2619244544, free=70090752, active=1479081984, inactive=1393508352, wired=1140162560)
2024-04-06 10:51:26,341:INFO:Physical Core: 8
2024-04-06 10:51:26,341:INFO:Logical Core: 8
2024-04-06 10:51:26,341:INFO:Checking libraries
2024-04-06 10:51:26,342:INFO:System:
2024-04-06 10:51:26,342:INFO:    python: 3.11.3 (main, Apr 19 2023, 18:49:55) [Clang 14.0.6 ]
2024-04-06 10:51:26,342:INFO:executable: /Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/bin/python
2024-04-06 10:51:26,342:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-04-06 10:51:26,342:INFO:PyCaret required dependencies:
2024-04-06 10:51:26,342:INFO:                 pip: 24.0
2024-04-06 10:51:26,342:INFO:          setuptools: 65.5.0
2024-04-06 10:51:26,342:INFO:             pycaret: 3.3.0
2024-04-06 10:51:26,342:INFO:             IPython: 8.23.0
2024-04-06 10:51:26,342:INFO:          ipywidgets: 8.1.2
2024-04-06 10:51:26,342:INFO:                tqdm: 4.66.2
2024-04-06 10:51:26,342:INFO:               numpy: 1.26.4
2024-04-06 10:51:26,342:INFO:              pandas: 2.1.4
2024-04-06 10:51:26,342:INFO:              jinja2: 3.1.3
2024-04-06 10:51:26,342:INFO:               scipy: 1.11.4
2024-04-06 10:51:26,342:INFO:              joblib: 1.3.2
2024-04-06 10:51:26,342:INFO:             sklearn: 1.4.1.post1
2024-04-06 10:51:26,342:INFO:                pyod: 1.1.3
2024-04-06 10:51:26,342:INFO:            imblearn: 0.12.2
2024-04-06 10:51:26,342:INFO:   category_encoders: 2.6.3
2024-04-06 10:51:26,342:INFO:            lightgbm: 4.3.0
2024-04-06 10:51:26,342:INFO:               numba: 0.59.1
2024-04-06 10:51:26,342:INFO:            requests: 2.31.0
2024-04-06 10:51:26,342:INFO:          matplotlib: 3.7.5
2024-04-06 10:51:26,342:INFO:          scikitplot: 0.3.7
2024-04-06 10:51:26,342:INFO:         yellowbrick: 1.5
2024-04-06 10:51:26,342:INFO:              plotly: 5.20.0
2024-04-06 10:51:26,342:INFO:    plotly-resampler: Not installed
2024-04-06 10:51:26,342:INFO:             kaleido: 0.2.1
2024-04-06 10:51:26,342:INFO:           schemdraw: 0.15
2024-04-06 10:51:26,342:INFO:         statsmodels: 0.14.1
2024-04-06 10:51:26,342:INFO:              sktime: 0.28.0
2024-04-06 10:51:26,342:INFO:               tbats: 1.1.3
2024-04-06 10:51:26,342:INFO:            pmdarima: 2.0.4
2024-04-06 10:51:26,342:INFO:              psutil: 5.9.8
2024-04-06 10:51:26,342:INFO:          markupsafe: 2.1.5
2024-04-06 10:51:26,342:INFO:             pickle5: Not installed
2024-04-06 10:51:26,342:INFO:         cloudpickle: 3.0.0
2024-04-06 10:51:26,342:INFO:         deprecation: 2.1.0
2024-04-06 10:51:26,342:INFO:              xxhash: 3.4.1
2024-04-06 10:51:26,342:INFO:           wurlitzer: 3.0.3
2024-04-06 10:51:26,342:INFO:PyCaret optional dependencies:
2024-04-06 10:51:26,342:INFO:                shap: Not installed
2024-04-06 10:51:26,342:INFO:           interpret: Not installed
2024-04-06 10:51:26,342:INFO:                umap: Not installed
2024-04-06 10:51:26,342:INFO:     ydata_profiling: Not installed
2024-04-06 10:51:26,342:INFO:  explainerdashboard: Not installed
2024-04-06 10:51:26,342:INFO:             autoviz: Not installed
2024-04-06 10:51:26,342:INFO:           fairlearn: Not installed
2024-04-06 10:51:26,342:INFO:          deepchecks: Not installed
2024-04-06 10:51:26,342:INFO:             xgboost: Not installed
2024-04-06 10:51:26,342:INFO:            catboost: Not installed
2024-04-06 10:51:26,342:INFO:              kmodes: Not installed
2024-04-06 10:51:26,342:INFO:             mlxtend: Not installed
2024-04-06 10:51:26,342:INFO:       statsforecast: Not installed
2024-04-06 10:51:26,342:INFO:        tune_sklearn: Not installed
2024-04-06 10:51:26,342:INFO:                 ray: Not installed
2024-04-06 10:51:26,342:INFO:            hyperopt: Not installed
2024-04-06 10:51:26,342:INFO:              optuna: Not installed
2024-04-06 10:51:26,342:INFO:               skopt: Not installed
2024-04-06 10:51:26,342:INFO:              mlflow: 2.11.3
2024-04-06 10:51:26,342:INFO:              gradio: Not installed
2024-04-06 10:51:26,342:INFO:             fastapi: Not installed
2024-04-06 10:51:26,342:INFO:             uvicorn: Not installed
2024-04-06 10:51:26,342:INFO:              m2cgen: Not installed
2024-04-06 10:51:26,342:INFO:           evidently: Not installed
2024-04-06 10:51:26,342:INFO:               fugue: Not installed
2024-04-06 10:51:26,342:INFO:           streamlit: 1.33.0
2024-04-06 10:51:26,342:INFO:             prophet: 1.1.5
2024-04-06 10:51:26,342:INFO:None
2024-04-06 10:51:26,342:INFO:Set up data.
2024-04-06 10:51:26,347:INFO:Set up folding strategy.
2024-04-06 10:51:26,347:INFO:Set up train/test split.
2024-04-06 10:51:26,347:INFO:Set up data.
2024-04-06 10:51:26,349:INFO:Set up index.
2024-04-06 10:51:26,350:INFO:Assigning column types.
2024-04-06 10:51:26,352:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-06 10:51:26,371:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:51:26,372:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:51:26,383:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:51:26,383:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:51:26,401:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-06 10:51:26,401:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:51:26,412:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:51:26,412:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:51:26,412:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-06 10:51:26,431:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:51:26,442:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:51:26,442:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:51:26,462:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-06 10:51:26,474:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:51:26,474:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:51:26,474:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-06 10:51:26,504:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:51:26,504:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:51:26,535:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:51:26,535:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:51:26,535:INFO:Preparing preprocessing pipeline...
2024-04-06 10:51:26,536:INFO:Set up simple imputation.
2024-04-06 10:51:26,536:INFO:Set up feature normalization.
2024-04-06 10:51:26,548:INFO:Finished creating preprocessing pipeline.
2024-04-06 10:51:26,550:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-06 10:51:26,550:INFO:Creating final display dataframe.
2024-04-06 10:51:26,581:INFO:Setup _display_container:                     Description             Value
0                    Session id               352
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape         (4057, 7)
6    Transformed test set shape        (16228, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              24a5
2024-04-06 10:51:26,615:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:51:26,616:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:51:26,646:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:51:26,647:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-06 10:51:26,647:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-06 10:51:26,648:INFO:setup() successfully completed in 0.32s...............
2024-04-06 10:51:26,648:INFO:Initializing compare_models()
2024-04-06 10:51:26,648:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fdcf390>, include=['lr', 'dt'], exclude=None, fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x30fdcf390>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-04-06 10:51:26,648:INFO:Checking exceptions
2024-04-06 10:51:26,650:INFO:Preparing display monitor
2024-04-06 10:51:26,665:INFO:Initializing Logistic Regression
2024-04-06 10:51:26,665:INFO:Total runtime is 3.254413604736328e-06 minutes
2024-04-06 10:51:26,669:INFO:SubProcess create_model() called ==================================
2024-04-06 10:51:26,670:INFO:Initializing create_model()
2024-04-06 10:51:26,670:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fdcf390>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30fed3990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:51:26,670:INFO:Checking exceptions
2024-04-06 10:51:26,670:INFO:Importing libraries
2024-04-06 10:51:26,670:INFO:Copying training dataset
2024-04-06 10:51:26,676:INFO:Defining folds
2024-04-06 10:51:26,676:INFO:Declaring metric variables
2024-04-06 10:51:26,678:INFO:Importing untrained model
2024-04-06 10:51:26,681:INFO:Logistic Regression Imported successfully
2024-04-06 10:51:26,686:INFO:Starting cross validation
2024-04-06 10:51:26,687:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:51:26,878:INFO:Calculating mean and std
2024-04-06 10:51:26,878:INFO:Creating metrics dataframe
2024-04-06 10:51:26,879:INFO:Uploading results into container
2024-04-06 10:51:26,879:INFO:Uploading model into container now
2024-04-06 10:51:26,879:INFO:_master_model_container: 1
2024-04-06 10:51:26,879:INFO:_display_container: 2
2024-04-06 10:51:26,879:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=352, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:51:26,879:INFO:create_model() successfully completed......................................
2024-04-06 10:51:27,079:INFO:SubProcess create_model() end ==================================
2024-04-06 10:51:27,081:INFO:Creating metrics dataframe
2024-04-06 10:51:27,084:INFO:Initializing Decision Tree Classifier
2024-04-06 10:51:27,084:INFO:Total runtime is 0.006981265544891358 minutes
2024-04-06 10:51:27,085:INFO:SubProcess create_model() called ==================================
2024-04-06 10:51:27,085:INFO:Initializing create_model()
2024-04-06 10:51:27,085:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fdcf390>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30fed3990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:51:27,085:INFO:Checking exceptions
2024-04-06 10:51:27,085:INFO:Importing libraries
2024-04-06 10:51:27,086:INFO:Copying training dataset
2024-04-06 10:51:27,088:INFO:Defining folds
2024-04-06 10:51:27,088:INFO:Declaring metric variables
2024-04-06 10:51:27,090:INFO:Importing untrained model
2024-04-06 10:51:27,091:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:51:27,094:INFO:Starting cross validation
2024-04-06 10:51:27,094:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:51:27,161:INFO:Calculating mean and std
2024-04-06 10:51:27,161:INFO:Creating metrics dataframe
2024-04-06 10:51:27,162:INFO:Uploading results into container
2024-04-06 10:51:27,162:INFO:Uploading model into container now
2024-04-06 10:51:27,162:INFO:_master_model_container: 2
2024-04-06 10:51:27,162:INFO:_display_container: 2
2024-04-06 10:51:27,162:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=352, splitter='best')
2024-04-06 10:51:27,162:INFO:create_model() successfully completed......................................
2024-04-06 10:51:27,311:INFO:SubProcess create_model() end ==================================
2024-04-06 10:51:27,311:INFO:Creating metrics dataframe
2024-04-06 10:51:27,313:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-04-06 10:51:27,316:INFO:Initializing create_model()
2024-04-06 10:51:27,316:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fdcf390>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=352, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:51:27,316:INFO:Checking exceptions
2024-04-06 10:51:27,317:INFO:Importing libraries
2024-04-06 10:51:27,317:INFO:Copying training dataset
2024-04-06 10:51:27,319:INFO:Defining folds
2024-04-06 10:51:27,319:INFO:Declaring metric variables
2024-04-06 10:51:27,319:INFO:Importing untrained model
2024-04-06 10:51:27,319:INFO:Declaring custom model
2024-04-06 10:51:27,320:INFO:Logistic Regression Imported successfully
2024-04-06 10:51:27,320:INFO:Cross validation set to False
2024-04-06 10:51:27,320:INFO:Fitting Model
2024-04-06 10:51:27,331:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=352, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:51:27,331:INFO:create_model() successfully completed......................................
2024-04-06 10:51:27,535:INFO:Initializing create_model()
2024-04-06 10:51:27,536:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fdcf390>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=352, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:51:27,536:INFO:Checking exceptions
2024-04-06 10:51:27,537:INFO:Importing libraries
2024-04-06 10:51:27,537:INFO:Copying training dataset
2024-04-06 10:51:27,543:INFO:Defining folds
2024-04-06 10:51:27,543:INFO:Declaring metric variables
2024-04-06 10:51:27,543:INFO:Importing untrained model
2024-04-06 10:51:27,543:INFO:Declaring custom model
2024-04-06 10:51:27,544:INFO:Decision Tree Classifier Imported successfully
2024-04-06 10:51:27,546:INFO:Cross validation set to False
2024-04-06 10:51:27,546:INFO:Fitting Model
2024-04-06 10:51:27,568:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=352, splitter='best')
2024-04-06 10:51:27,568:INFO:create_model() successfully completed......................................
2024-04-06 10:51:27,747:INFO:_master_model_container: 2
2024-04-06 10:51:27,747:INFO:_display_container: 2
2024-04-06 10:51:27,748:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=352, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=352, splitter='best')]
2024-04-06 10:51:27,748:INFO:compare_models() successfully completed......................................
2024-04-06 10:51:27,748:INFO:Initializing predict_model()
2024-04-06 10:51:27,749:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fdcf390>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=352, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17787a660>)
2024-04-06 10:51:27,749:INFO:Checking exceptions
2024-04-06 10:51:27,749:INFO:Preloading libraries
2024-04-06 10:51:28,592:INFO:Initializing predict_model()
2024-04-06 10:51:28,592:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fdcf390>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=352, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30fe09bc0>)
2024-04-06 10:51:28,592:INFO:Checking exceptions
2024-04-06 10:51:28,592:INFO:Preloading libraries
2024-04-06 10:51:29,077:INFO:Initializing tune_model()
2024-04-06 10:51:29,077:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fdcf390>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=352, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-06 10:51:29,077:INFO:Checking exceptions
2024-04-06 10:51:29,084:INFO:Copying training dataset
2024-04-06 10:51:29,091:INFO:Checking base model
2024-04-06 10:51:29,091:INFO:Base model : Logistic Regression
2024-04-06 10:51:29,093:INFO:Declaring metric variables
2024-04-06 10:51:29,095:INFO:Defining Hyperparameters
2024-04-06 10:51:29,235:INFO:Tuning with n_jobs=-1
2024-04-06 10:51:29,235:INFO:Initializing RandomizedSearchCV
2024-04-06 10:51:29,359:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 4.898000000000001}
2024-04-06 10:51:29,359:INFO:Hyperparameter search completed
2024-04-06 10:51:29,359:INFO:SubProcess create_model() called ==================================
2024-04-06 10:51:29,359:INFO:Initializing create_model()
2024-04-06 10:51:29,359:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fdcf390>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=352, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30e9be090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'class_weight': 'balanced', 'C': 4.898000000000001})
2024-04-06 10:51:29,359:INFO:Checking exceptions
2024-04-06 10:51:29,359:INFO:Importing libraries
2024-04-06 10:51:29,359:INFO:Copying training dataset
2024-04-06 10:51:29,361:INFO:Defining folds
2024-04-06 10:51:29,361:INFO:Declaring metric variables
2024-04-06 10:51:29,363:INFO:Importing untrained model
2024-04-06 10:51:29,363:INFO:Declaring custom model
2024-04-06 10:51:29,364:INFO:Logistic Regression Imported successfully
2024-04-06 10:51:29,366:INFO:Starting cross validation
2024-04-06 10:51:29,367:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:51:29,416:INFO:Calculating mean and std
2024-04-06 10:51:29,417:INFO:Creating metrics dataframe
2024-04-06 10:51:29,419:INFO:Finalizing model
2024-04-06 10:51:29,437:INFO:Uploading results into container
2024-04-06 10:51:29,438:INFO:Uploading model into container now
2024-04-06 10:51:29,438:INFO:_master_model_container: 3
2024-04-06 10:51:29,438:INFO:_display_container: 5
2024-04-06 10:51:29,439:INFO:LogisticRegression(C=4.898000000000001, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=352, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:51:29,439:INFO:create_model() successfully completed......................................
2024-04-06 10:51:29,745:INFO:SubProcess create_model() end ==================================
2024-04-06 10:51:29,745:INFO:choose_better activated
2024-04-06 10:51:29,746:INFO:SubProcess create_model() called ==================================
2024-04-06 10:51:29,746:INFO:Initializing create_model()
2024-04-06 10:51:29,746:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fdcf390>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=352, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:51:29,746:INFO:Checking exceptions
2024-04-06 10:51:29,747:INFO:Importing libraries
2024-04-06 10:51:29,747:INFO:Copying training dataset
2024-04-06 10:51:29,750:INFO:Defining folds
2024-04-06 10:51:29,750:INFO:Declaring metric variables
2024-04-06 10:51:29,750:INFO:Importing untrained model
2024-04-06 10:51:29,750:INFO:Declaring custom model
2024-04-06 10:51:29,750:INFO:Logistic Regression Imported successfully
2024-04-06 10:51:29,750:INFO:Starting cross validation
2024-04-06 10:51:29,750:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-06 10:51:29,808:INFO:Calculating mean and std
2024-04-06 10:51:29,808:INFO:Creating metrics dataframe
2024-04-06 10:51:29,809:INFO:Finalizing model
2024-04-06 10:51:29,815:INFO:Uploading results into container
2024-04-06 10:51:29,816:INFO:Uploading model into container now
2024-04-06 10:51:29,816:INFO:_master_model_container: 4
2024-04-06 10:51:29,816:INFO:_display_container: 6
2024-04-06 10:51:29,817:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=352, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:51:29,817:INFO:create_model() successfully completed......................................
2024-04-06 10:51:30,033:INFO:SubProcess create_model() end ==================================
2024-04-06 10:51:30,033:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=352, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 0.5107
2024-04-06 10:51:30,033:INFO:LogisticRegression(C=4.898000000000001, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=352, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 0.537
2024-04-06 10:51:30,033:INFO:LogisticRegression(C=4.898000000000001, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=352, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2024-04-06 10:51:30,033:INFO:choose_better completed
2024-04-06 10:51:30,047:INFO:_master_model_container: 4
2024-04-06 10:51:30,048:INFO:_display_container: 5
2024-04-06 10:51:30,048:INFO:LogisticRegression(C=4.898000000000001, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=352, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:51:30,048:INFO:tune_model() successfully completed......................................
2024-04-06 10:51:30,187:INFO:Initializing predict_model()
2024-04-06 10:51:30,187:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fdcf390>, estimator=LogisticRegression(C=4.898000000000001, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=352, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17787a660>)
2024-04-06 10:51:30,187:INFO:Checking exceptions
2024-04-06 10:51:30,187:INFO:Preloading libraries
2024-04-06 10:51:30,500:INFO:Initializing finalize_model()
2024-04-06 10:51:30,500:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fdcf390>, estimator=LogisticRegression(C=4.898000000000001, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=352, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-06 10:51:30,500:INFO:Finalizing LogisticRegression(C=4.898000000000001, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=352, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-06 10:51:30,502:INFO:Initializing create_model()
2024-04-06 10:51:30,502:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30fdcf390>, estimator=LogisticRegression(C=4.898000000000001, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=352, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-06 10:51:30,502:INFO:Checking exceptions
2024-04-06 10:51:30,502:INFO:Importing libraries
2024-04-06 10:51:30,502:INFO:Copying training dataset
2024-04-06 10:51:30,502:INFO:Defining folds
2024-04-06 10:51:30,502:INFO:Declaring metric variables
2024-04-06 10:51:30,502:INFO:Importing untrained model
2024-04-06 10:51:30,502:INFO:Declaring custom model
2024-04-06 10:51:30,503:INFO:Logistic Regression Imported successfully
2024-04-06 10:51:30,503:INFO:Cross validation set to False
2024-04-06 10:51:30,503:INFO:Fitting Model
2024-04-06 10:51:30,529:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=4.898000000000001,
                                    class_weight='balanced', dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=352,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-04-06 10:51:30,529:INFO:create_model() successfully completed......................................
2024-04-06 10:51:30,743:INFO:_master_model_container: 4
2024-04-06 10:51:30,744:INFO:_display_container: 6
2024-04-06 10:51:30,745:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=4.898000000000001,
                                    class_weight='balanced', dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=352,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-04-06 10:51:30,745:INFO:finalize_model() successfully completed......................................
2024-04-06 10:51:30,871:INFO:Initializing save_model()
2024-04-06 10:51:30,871:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=4.898000000000001,
                                    class_weight='balanced', dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=352,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), model_name=./kobe, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              st...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-06 10:51:30,871:INFO:Adding model into prep_pipe
2024-04-06 10:51:30,871:WARNING:Only Model saved as it was a pipeline.
2024-04-06 10:51:30,873:INFO:./kobe.pkl saved in current working directory
2024-04-06 10:51:30,875:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=4.898000000000001,
                                    class_weight='balanced', dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=352,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-04-06 10:51:30,875:INFO:save_model() successfully completed......................................
2024-04-06 10:51:30,989:INFO:Initializing load_model()
2024-04-06 10:51:30,989:INFO:load_model(model_name=./kobe, platform=None, authentication=None, verbose=True)
2024-04-06 10:51:31,000:WARNING:/Users/wolfx/Documents/python/Pos IA/engenharia_machine_learning/Kobe-Bryant/venv/lib/python3.11/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-06 10:51:33,185:WARNING:/var/folders/kr/x3cg91lx6vx2ydx7jr21glqr0000gn/T/ipykernel_3194/319744039.py:176: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

